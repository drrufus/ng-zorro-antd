{"version":3,"file":"ng-zorro-antd-modal.js","sources":["ng://ng-zorro-antd/modal/nz-modal-config.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.module.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.ts","ng://ng-zorro-antd/modal/nz-modal-ref.class.ts","ng://ng-zorro-antd/modal/nz-modal-footer.directive.ts","ng://ng-zorro-antd/modal/nz-modal.component.html","ng://ng-zorro-antd/modal/nz-modal.component.ts","ng://ng-zorro-antd/modal/nz-modal.service.module.ts","ng://ng-zorro-antd/modal/nz-modal.module.ts","ng://ng-zorro-antd/modal/nz-modal.service.ts","ng://ng-zorro-antd/modal/public-api.ts","ng://ng-zorro-antd/modal/ng-zorro-antd-modal.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface NzModalConfig {\r\n  nzMask?: boolean;\r\n  nzMaskClosable?: boolean;\r\n}\r\nexport const NZ_MODAL_CONFIG = new InjectionToken<NzModalConfig>('NZ_MODAL_CONFIG');\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzModalControlServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\n\r\ninterface RegisteredMeta {\r\n  modalRef: NzModalRef;\r\n  afterOpenSubscription: Subscription;\r\n  afterCloseSubscription: Subscription;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: NzModalControlServiceModule\r\n})\r\nexport class NzModalControlService {\r\n  // Track singleton afterAllClose through over the injection tree\r\n  get afterAllClose(): Subject<void> {\r\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\r\n  }\r\n\r\n  // Track singleton openModals array through over the injection tree\r\n  get openModals(): NzModalRef[] {\r\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\r\n  }\r\n\r\n  private rootOpenModals: NzModalRef[] | null = this.parentService ? null : [];\r\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\r\n  private rootRegisteredMetaMap: Map<NzModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\r\n\r\n  private get registeredMetaMap(): Map<NzModalRef, RegisteredMeta> {\r\n    // Registered modal for later usage\r\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() private parentService: NzModalControlService) {}\r\n\r\n  // Register a modal to listen its open/close\r\n  registerModal(modalRef: NzModalRef): void {\r\n    if (!this.hasRegistered(modalRef)) {\r\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\r\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\r\n\r\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\r\n    }\r\n  }\r\n\r\n  // deregister modals\r\n  deregisterModal(modalRef: NzModalRef): void {\r\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\r\n    if (registeredMeta) {\r\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\r\n      this.removeOpenModal(registeredMeta.modalRef);\r\n      registeredMeta.afterOpenSubscription.unsubscribe();\r\n      registeredMeta.afterCloseSubscription.unsubscribe();\r\n      this.registeredMetaMap.delete(modalRef);\r\n    }\r\n  }\r\n\r\n  hasRegistered(modalRef: NzModalRef): boolean {\r\n    return this.registeredMetaMap.has(modalRef);\r\n  }\r\n\r\n  // Close all registered opened modals\r\n  closeAll(): void {\r\n    let i = this.openModals.length;\r\n\r\n    while (i--) {\r\n      this.openModals[i].close();\r\n    }\r\n  }\r\n\r\n  private removeOpenModal(modalRef: NzModalRef): void {\r\n    const index = this.openModals.indexOf(modalRef);\r\n\r\n    if (index > -1) {\r\n      this.openModals.splice(index, 1);\r\n\r\n      if (!this.openModals.length) {\r\n        this.afterAllClose.next();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { NzModalComponent } from './nz-modal.component';\r\n\r\n/**\r\n * API class that public to users to handle the modal instance.\r\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\r\n */\r\n// tslint:disable-next-line:no-any\r\nexport abstract class NzModalRef<T = any, R = any> {\r\n  abstract afterOpen: Observable<void>;\r\n  abstract afterClose: Observable<R>;\r\n\r\n  abstract open(): void;\r\n  abstract close(result?: R): void;\r\n  abstract destroy(result?: R): void;\r\n\r\n  /**\r\n   * Trigger the nzOnOk/nzOnCancel by manual\r\n   */\r\n  abstract triggerOk(): void;\r\n  abstract triggerCancel(): void;\r\n\r\n  // /**\r\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\r\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\r\n  //  */\r\n  // abstract getContentComponentRef(): ComponentRef<{}>;\r\n\r\n  /**\r\n   * Return the component instance of nzContent when specify nzContent as a Component\r\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\r\n   */\r\n  abstract getContentComponent(): T;\r\n\r\n  /**\r\n   * Get the dom element of this Modal\r\n   */\r\n  abstract getElement(): HTMLElement;\r\n\r\n  /**\r\n   * Get the instance of the Modal itself\r\n   */\r\n  abstract getInstance(): NzModalComponent;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Directive, Optional, TemplateRef } from '@angular/core';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\n\r\n@Directive({\r\n  selector: '[nzModalFooter]',\r\n  exportAs: 'nzModalFooter'\r\n})\r\nexport class NzModalFooterDirective {\r\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\r\n    if (this.nzModalRef) {\r\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\r\n    }\r\n  }\r\n}\r\n","<ng-template #tplOriginContent><ng-content></ng-content></ng-template>\r\n<!-- Compatible: the <ng-content> can appear only once -->\r\n\r\n<div [nzNoAnimation]=\"nzNoAnimation\">\r\n  <div\r\n    *ngIf=\"mask\"\r\n    class=\"ant-modal-mask\"\r\n    [ngClass]=\"maskAnimationClassMap\"\r\n    [class.ant-modal-mask-hidden]=\"hidden\"\r\n    [ngStyle]=\"nzMaskStyle\"\r\n    [style.zIndex]=\"nzZIndex\"\r\n  ></div>\r\n  <div\r\n    (click)=\"onClickMask($event)\"\r\n    (mouseup)=\"onDialogUp()\"\r\n    class=\"ant-modal-wrap {{ nzWrapClassName }}\"\r\n    [style.zIndex]=\"nzZIndex\"\r\n    [style.visibility]=\"hidden ? 'hidden' : null\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n  >\r\n    <div\r\n      #modalContainer\r\n      class=\"ant-modal {{ nzClassName }}\"\r\n      (mousedown)=\"onMaskDialogDown()\"\r\n      [ngClass]=\"modalAnimationClassMap\"\r\n      [ngStyle]=\"nzStyle\"\r\n      [style.width]=\"nzWidth | nzToCssUnit\"\r\n      [style.transform-origin]=\"transformOrigin\"\r\n      role=\"document\"\r\n    >\r\n      <div class=\"ant-modal-content\">\r\n        <button\r\n          *ngIf=\"nzClosable\"\r\n          (click)=\"onClickCloseBtn()\"\r\n          class=\"ant-modal-close\"\r\n          [attr.aria-label]=\"nzAriaLabel\"\r\n        >\r\n          <span class=\"ant-modal-close-x\">\r\n            <ng-container *nzStringTemplateOutlet=\"nzCloseIcon\">\r\n              <i nz-icon [nzType]=\"nzCloseIcon\" class=\"ant-modal-close-icon\"></i>\r\n            </ng-container>\r\n          </span>\r\n        </button>\r\n        <ng-container *ngIf=\"!hidden\" [ngSwitch]=\"true\">\r\n          <ng-container\r\n            *ngSwitchCase=\"isModalType('default')\"\r\n            [ngTemplateOutlet]=\"tplContentDefault\"\r\n          ></ng-container>\r\n          <ng-container\r\n            *ngSwitchCase=\"isModalType('confirm')\"\r\n            [ngTemplateOutlet]=\"tplContentConfirm\"\r\n          ></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- [Predefined] Default Modal Content -->\r\n<ng-template #tplContentDefault>\r\n  <div *ngIf=\"nzTitle\" class=\"ant-modal-header\">\r\n    <div class=\"ant-modal-title\">\r\n      <ng-container [ngSwitch]=\"true\">\r\n        <ng-container\r\n          *ngSwitchCase=\"isTemplateRef(nzTitle)\"\r\n          [ngTemplateOutlet]=\"nzTitle\"\r\n        ></ng-container>\r\n        <ng-container *ngSwitchCase=\"isNonEmptyString(nzTitle)\"\r\n          ><div [innerHTML]=\"nzTitle\"></div\r\n        ></ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"ant-modal-body\" [ngStyle]=\"nzBodyStyle\">\r\n    <ng-container #bodyContainer>\r\n      <ng-container *ngIf=\"!isComponent(nzContent)\" [ngSwitch]=\"true\">\r\n        <ng-container\r\n          *ngSwitchCase=\"isTemplateRef(nzContent)\"\r\n          [ngTemplateOutlet]=\"nzContent\"\r\n        ></ng-container>\r\n        <ng-container *ngSwitchCase=\"isNonEmptyString(nzContent)\"\r\n          ><div [innerHTML]=\"nzContent\"></div\r\n        ></ng-container>\r\n        <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <div *ngIf=\"nzFooter !== null\" class=\"ant-modal-footer\">\r\n    <ng-container [ngSwitch]=\"true\">\r\n      <ng-container\r\n        *ngSwitchCase=\"isTemplateRef(nzFooter)\"\r\n        [ngTemplateOutlet]=\"nzFooter\"\r\n      ></ng-container>\r\n      <ng-container *ngSwitchCase=\"isNonEmptyString(nzFooter)\"\r\n        ><div [innerHTML]=\"nzFooter\"></div\r\n      ></ng-container>\r\n      <ng-container *ngSwitchCase=\"isModalButtons(nzFooter)\">\r\n        <button\r\n          *ngFor=\"let button of nzFooter\"\r\n          nz-button\r\n          (click)=\"onButtonClick(button)\"\r\n          [hidden]=\"!getButtonCallableProp(button, 'show')\"\r\n          [nzLoading]=\"getButtonCallableProp(button, 'loading')\"\r\n          [disabled]=\"getButtonCallableProp(button, 'disabled')\"\r\n          [nzType]=\"button.type\"\r\n          [nzShape]=\"button.shape\"\r\n          [nzSize]=\"button.size\"\r\n          [nzGhost]=\"button.ghost\"\r\n        >\r\n          {{ button.label }}\r\n        </button>\r\n      </ng-container>\r\n      <ng-container *ngSwitchDefault>\r\n        <button\r\n          *ngIf=\"nzCancelText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('cancel')\"\r\n          [nzLoading]=\"nzCancelLoading\"\r\n          [disabled]=\"nzCancelDisabled\"\r\n        >\r\n          {{ cancelText }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"nzOkText !== null\"\r\n          nz-button\r\n          [nzType]=\"nzOkType\"\r\n          (click)=\"onClickOkCancel('ok')\"\r\n          [nzLoading]=\"nzOkLoading\"\r\n          [disabled]=\"nzOkDisabled\"\r\n        >\r\n          {{ okText }}\r\n        </button>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n<!-- /[Predefined] Default Modal Content -->\r\n\r\n<!-- [Predefined] Confirm Modal Content -->\r\n<ng-template #tplContentConfirm>\r\n  <div class=\"ant-modal-body\" [ngStyle]=\"nzBodyStyle\">\r\n    <div class=\"ant-modal-confirm-body-wrapper\">\r\n      <div class=\"ant-modal-confirm-body\">\r\n        <i nz-icon [nzType]=\"nzIconType\"></i>\r\n        <span class=\"ant-modal-confirm-title\">\r\n          <ng-container [ngSwitch]=\"true\">\r\n            <ng-container\r\n              *ngSwitchCase=\"isTemplateRef(nzTitle)\"\r\n              [ngTemplateOutlet]=\"nzTitle\"\r\n            ></ng-container>\r\n            <ng-container *ngSwitchCase=\"isNonEmptyString(nzTitle)\"\r\n              ><span [innerHTML]=\"nzTitle\"></span\r\n            ></ng-container>\r\n          </ng-container>\r\n        </span>\r\n        <div class=\"ant-modal-confirm-content\">\r\n          <ng-container #bodyContainer>\r\n            <ng-container *ngIf=\"!isComponent(nzContent)\" [ngSwitch]=\"true\">\r\n              <ng-container\r\n                *ngSwitchCase=\"isTemplateRef(nzContent)\"\r\n                [ngTemplateOutlet]=\"nzContent\"\r\n              ></ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(nzContent)\"\r\n                ><div [innerHTML]=\"nzContent\"></div\r\n              ></ng-container>\r\n              <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"ant-modal-confirm-btns\">\r\n        <button\r\n          *ngIf=\"nzCancelText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('cancel')\"\r\n          [nzLoading]=\"nzCancelLoading\"\r\n          [disabled]=\"nzCancelDisabled\"\r\n        >\r\n          {{ cancelText }}\r\n        </button>\r\n        <button\r\n          #autoFocusButtonOk\r\n          *ngIf=\"nzOkText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('ok')\"\r\n          [nzType]=\"nzOkType\"\r\n          [nzLoading]=\"nzOkLoading\"\r\n          [disabled]=\"nzOkDisabled\"\r\n        >\r\n          {{ okText }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- /.ant-modal-confirm-body-wrapper -->\r\n  </div>\r\n</ng-template>\r\n<!-- /[Predefined] Confirm Modal Content -->\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\n\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { getElementOffset, InputBoolean, isPromise, NzConfigService, warnDeprecation, WithConfig } from 'ng-zorro-antd/core';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\n\r\nimport { NZ_MODAL_CONFIG, NzModalConfig } from './nz-modal-config';\r\nimport { NzModalControlService } from './nz-modal-control.service';\r\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\nimport { ModalButtonOptions, ModalOptions, ModalType, OnClickCallback } from './nz-modal.type';\r\n\r\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\r\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\r\n\r\ntype AnimationState = 'enter' | 'leave' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\r\n\r\n@Component({\r\n  selector: 'nz-modal',\r\n  exportAs: 'nzModal',\r\n  templateUrl: './nz-modal.component.html',\r\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\n\r\n// tslint:disable-next-line:no-any\r\nexport class NzModalComponent<T = any, R = any> extends NzModalRef<T, R>\r\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\r\n  @Input() @InputBoolean() nzVisible: boolean = false;\r\n  @Input() @InputBoolean() nzClosable: boolean = true;\r\n  @Input() @InputBoolean() nzOkLoading: boolean = false;\r\n  @Input() @InputBoolean() nzOkDisabled: boolean = false;\r\n  @Input() @InputBoolean() nzCancelDisabled: boolean = false;\r\n  @Input() @InputBoolean() nzCancelLoading: boolean = false;\r\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\r\n  @Input() @InputBoolean() nzNoAnimation = false;\r\n\r\n  // TODO(hsuanxyz): add default value once old API is deprecated.\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMask: boolean;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMaskClosable: boolean;\r\n\r\n  @Input() nzContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\r\n  @Input() nzComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\r\n  @Input() nzFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\r\n  @Input() nzGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\r\n  @Input() nzZIndex: number = 1000;\r\n  @Input() nzWidth: number | string = 520;\r\n  @Input() nzWrapClassName: string;\r\n  @Input() nzClassName: string;\r\n  @Input() nzStyle: object;\r\n  @Input() nzTitle: string | TemplateRef<{}>;\r\n  @Input() nzCloseIcon: string | TemplateRef<void> = 'close';\r\n  @Input() nzMaskStyle: object;\r\n  @Input() nzBodyStyle: object;\r\n  @Input() nzOkText: string | null;\r\n  @Input() nzCancelText: string | null;\r\n  @Input() nzOkType: string = 'primary';\r\n  @Input() nzIconType: string = 'question-circle'; // Confirm Modal ONLY\r\n  @Input() nzModalType: ModalType = 'default';\r\n  @Input() nzAriaLabel: string = 'Close';\r\n\r\n  @Input() @Output() readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n  @Input() @Output() readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n\r\n  @Output() readonly nzAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\r\n  @Output() readonly nzAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\r\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\r\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\r\n\r\n  @ContentChild(NzModalFooterDirective, { static: false })\r\n  set modalFooter(value: NzModalFooterDirective) {\r\n    if (value && value.templateRef) {\r\n      this.setFooterWithTemplate(value.templateRef);\r\n    }\r\n  }\r\n\r\n  get afterOpen(): Observable<void> {\r\n    // Observable alias for nzAfterOpen\r\n    return this.nzAfterOpen.asObservable();\r\n  }\r\n\r\n  get afterClose(): Observable<R> {\r\n    // Observable alias for nzAfterClose\r\n    return this.nzAfterClose.asObservable();\r\n  }\r\n\r\n  get cancelText(): string {\r\n    return this.nzCancelText || this.locale.cancelText!;\r\n  }\r\n\r\n  get okText(): string {\r\n    return this.nzOkText || this.locale.okText!;\r\n  }\r\n\r\n  get hidden(): boolean {\r\n    return !this.nzVisible && !this.animationState;\r\n  } // Indicate whether this dialog should hidden\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of mask value\r\n   *\r\n   * Weight of different mask input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get mask(): boolean {\r\n    if (this.nzMask != null) {\r\n      return this.nzMask;\r\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMask != null) {\r\n      return this.nzModalGlobalConfig.nzMask;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of maskClosable value\r\n   *\r\n   * Weight of different maskClosable input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get maskClosable(): boolean {\r\n    if (this.nzMaskClosable != null) {\r\n      return this.nzMaskClosable;\r\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMaskClosable != null) {\r\n      return this.nzModalGlobalConfig.nzMaskClosable;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  locale: { okText?: string; cancelText?: string } = {};\r\n  maskAnimationClassMap: object | null;\r\n  modalAnimationClassMap: object | null;\r\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\r\n\r\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\r\n  private animationState: AnimationState; // Current animation state\r\n  private container: HTMLElement | OverlayRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n  private previouslyFocusedElement: HTMLElement;\r\n  private focusTrap: FocusTrap;\r\n  private scrollStrategy: BlockScrollStrategy;\r\n  private overlayRef: OverlayRef;\r\n  private dialogMouseDown = false;\r\n  private timeoutId: number;\r\n\r\n  [key: string]: any; // tslint:disable-line:no-any\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private overlay: Overlay,\r\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\r\n    private i18n: NzI18nService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef,\r\n    private modalControl: NzModalControlService,\r\n    private focusTrapFactory: FocusTrapFactory,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Inject(NZ_MODAL_CONFIG) private nzModalGlobalConfig: NzModalConfig,\r\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\r\n  ) {\r\n    super();\r\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\r\n\r\n    if (this.nzModalGlobalConfig) {\r\n      warnDeprecation('`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Modal');\r\n    });\r\n\r\n    if (this.isComponent(this.nzContent)) {\r\n      this.createDynamicComponent(this.nzContent as Type<T>); // Create component along without View\r\n    }\r\n\r\n    if (this.isModalButtons(this.nzFooter)) {\r\n      // Setup default button options\r\n      this.nzFooter = this.formatModalButtons(this.nzFooter as Array<ModalButtonOptions<T>>);\r\n    }\r\n\r\n    // Place the modal dom to elsewhere\r\n    this.container = typeof this.nzGetContainer === 'function' ? this.nzGetContainer() : this.nzGetContainer;\r\n    if (this.container instanceof HTMLElement) {\r\n      this.container.appendChild(this.elementRef.nativeElement);\r\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    } else if (this.container instanceof OverlayRef) {\r\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\r\n      this.setOverlayRef(this.container);\r\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\r\n    }\r\n\r\n    if (this.overlayRef) {\r\n      this.overlayRef\r\n        .keydownEvents()\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    }\r\n\r\n    // Register modal when afterOpen/afterClose is stable\r\n    this.modalControl.registerModal(this);\r\n  }\r\n\r\n  // [NOTE] NOT available when using by service!\r\n  // Because ngOnChanges never be called when using by service,\r\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\r\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.nzVisible) {\r\n      this.handleVisibleStateChange(this.nzVisible, !changes.nzVisible.firstChange); // Do not trigger animation while initializing\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If using Component, it is the time to attach View while bodyContainer is ready\r\n    if (this.contentComponentRef) {\r\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\r\n    }\r\n\r\n    if (this.autoFocusButtonOk) {\r\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Close self before destructing\r\n    this.changeVisibleFromInside(false).then(() => {\r\n      this.modalControl.deregisterModal(this);\r\n\r\n      if (this.container instanceof OverlayRef) {\r\n        this.container.dispose();\r\n      }\r\n\r\n      this.unsubscribe$.next();\r\n      this.unsubscribe$.complete();\r\n    });\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\r\n    this.nzFooter = templateRef;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  setOverlayRef(overlayRef: OverlayRef): void {\r\n    this.overlayRef = overlayRef;\r\n  }\r\n\r\n  keydownListener(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE && this.nzKeyboard) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  open(): void {\r\n    this.changeVisibleFromInside(true);\r\n  }\r\n\r\n  close(result?: R): void {\r\n    this.changeVisibleFromInside(false, result);\r\n  }\r\n\r\n  destroy(result?: R): void {\r\n    // Destroy equals Close\r\n    this.close(result);\r\n  }\r\n\r\n  triggerOk(): void {\r\n    this.onClickOkCancel('ok');\r\n  }\r\n\r\n  triggerCancel(): void {\r\n    this.onClickOkCancel('cancel');\r\n  }\r\n\r\n  getInstance(): NzModalComponent {\r\n    return this;\r\n  }\r\n\r\n  getContentComponentRef(): ComponentRef<T> {\r\n    return this.contentComponentRef;\r\n  }\r\n\r\n  getContentComponent(): T {\r\n    return this.contentComponentRef && this.contentComponentRef.instance;\r\n  }\r\n\r\n  getElement(): HTMLElement {\r\n    return this.elementRef && this.elementRef.nativeElement;\r\n  }\r\n\r\n  onMaskDialogDown(): void {\r\n    this.dialogMouseDown = true;\r\n  }\r\n\r\n  onDialogUp(): void {\r\n    if (this.dialogMouseDown) {\r\n      this.timeoutId = setTimeout(() => {\r\n        this.dialogMouseDown = false;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  onClickMask($event: MouseEvent): void {\r\n    if (\r\n      this.mask &&\r\n      this.maskClosable &&\r\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\r\n      this.nzVisible &&\r\n      !this.dialogMouseDown\r\n    ) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  isModalType(type: ModalType): boolean {\r\n    return this.nzModalType === type;\r\n  }\r\n\r\n  public onClickCloseBtn(): void {\r\n    if (this.nzVisible) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\r\n    const trigger = { ok: this.nzOnOk, cancel: this.nzOnCancel }[type];\r\n    const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[type];\r\n    if (trigger instanceof EventEmitter) {\r\n      trigger.emit(this.getContentComponent());\r\n    } else if (typeof trigger === 'function') {\r\n      const result = trigger(this.getContentComponent());\r\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\r\n      if (isPromise(result)) {\r\n        this[loadingKey] = true;\r\n        const handleThen = (doClose: boolean | void | {}) => {\r\n          this[loadingKey] = false;\r\n          caseClose(doClose);\r\n        };\r\n        result.then(handleThen).catch(handleThen);\r\n      } else {\r\n        caseClose(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isNonEmptyString(value: {}): boolean {\r\n    return typeof value === 'string' && value !== '';\r\n  }\r\n\r\n  public isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  public isComponent(value: {}): boolean {\r\n    return value instanceof Type;\r\n  }\r\n\r\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\r\n    return Array.isArray(value) && value.length > 0;\r\n  }\r\n\r\n  // Do rest things when visible state changed\r\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\r\n    if (visible) {\r\n      // Hide scrollbar at the first time when shown up\r\n      this.scrollStrategy.enable();\r\n      this.savePreviouslyFocusedElement();\r\n      this.trapFocus();\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\r\n      }\r\n    } else {\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\r\n      }\r\n    }\r\n\r\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\r\n      // Emit open/close event after animations over\r\n      if (visible) {\r\n        this.nzAfterOpen.emit();\r\n      } else {\r\n        this.nzAfterClose.emit(closeResult);\r\n        this.restoreFocus();\r\n        this.scrollStrategy.disable();\r\n        // Mark the for check so it can react if the view container is using OnPush change detection.\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\r\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\r\n    const value = options[prop];\r\n    const args: T[] = [];\r\n    if (this.contentComponentRef) {\r\n      args.push(this.contentComponentRef.instance);\r\n    }\r\n    return typeof value === 'function' ? value.apply(options, args) : value;\r\n  }\r\n\r\n  // On nzFooter's modal button click\r\n  public onButtonClick(button: ModalButtonOptions<T>): void {\r\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\r\n    if (isPromise(result)) {\r\n      button.loading = true;\r\n      result.then(() => (button.loading = false)).catch(() => (button.loading = false));\r\n    }\r\n  }\r\n\r\n  // Change nzVisible from inside\r\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\r\n    if (this.nzVisible !== visible) {\r\n      // Change nzVisible value immediately\r\n      this.nzVisible = visible;\r\n      this.nzVisibleChange.emit(visible);\r\n      return this.handleVisibleStateChange(visible, true, closeResult);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private changeAnimationState(state: AnimationState): void {\r\n    this.animationState = state;\r\n    if (state) {\r\n      this.maskAnimationClassMap = {\r\n        [`fade-${state}`]: true,\r\n        [`fade-${state}-active`]: true\r\n      };\r\n      this.modalAnimationClassMap = {\r\n        [`zoom-${state}`]: true,\r\n        [`zoom-${state}-active`]: true\r\n      };\r\n    } else {\r\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\r\n    }\r\n  }\r\n\r\n  private animateTo(isVisible: boolean): Promise<void> {\r\n    if (isVisible) {\r\n      // Figure out the lastest click position when shows up\r\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\r\n    }\r\n\r\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\r\n    return new Promise(resolve =>\r\n      setTimeout(\r\n        () => {\r\n          // Return when animation is over\r\n          this.changeAnimationState(null);\r\n          resolve();\r\n        },\r\n        this.nzNoAnimation ? 0 : MODAL_ANIMATE_DURATION\r\n      )\r\n    );\r\n  }\r\n\r\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\r\n    return buttons.map(button => {\r\n      return {\r\n        ...{\r\n          type: 'default',\r\n          size: 'default',\r\n          autoLoading: true,\r\n          show: true,\r\n          loading: false,\r\n          disabled: false\r\n        },\r\n        ...button\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\r\n   * @param component Component class\r\n   */\r\n  private createDynamicComponent(component: Type<T>): void {\r\n    const factory = this.cfr.resolveComponentFactory(component);\r\n    const childInjector = Injector.create({\r\n      providers: [{ provide: NzModalRef, useValue: this }],\r\n      parent: this.viewContainer.parentInjector\r\n    });\r\n    this.contentComponentRef = factory.create(childInjector);\r\n    if (this.nzComponentParams) {\r\n      Object.assign(this.contentComponentRef.instance, this.nzComponentParams);\r\n    }\r\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\r\n    this.contentComponentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // Update transform-origin to the last click position on document\r\n  private updateTransformOrigin(): void {\r\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\r\n    if (this.previouslyFocusedElement) {\r\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\r\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\r\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\r\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\r\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\r\n    }\r\n  }\r\n\r\n  private savePreviouslyFocusedElement(): void {\r\n    if (this.document) {\r\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\r\n    }\r\n  }\r\n\r\n  private trapFocus(): void {\r\n    if (!this.focusTrap) {\r\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\r\n    }\r\n    this.focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  private restoreFocus(): void {\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\r\n      this.previouslyFocusedElement.focus();\r\n    }\r\n    if (this.focusTrap) {\r\n      this.focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzModalServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzAddOnModule, NzNoAnimationModule, NzPipesModule } from 'ng-zorro-antd/core';\r\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\r\nimport { NzModalComponent } from './nz-modal.component';\r\nimport { NzModalServiceModule } from './nz-modal.service.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    NzAddOnModule,\r\n    NzI18nModule,\r\n    NzButtonModule,\r\n    NzIconModule,\r\n    NzPipesModule,\r\n    NzNoAnimationModule,\r\n    NzModalServiceModule,\r\n    NzModalControlServiceModule\r\n  ],\r\n  exports: [NzModalComponent, NzModalFooterDirective],\r\n  declarations: [NzModalComponent, NzModalFooterDirective],\r\n  entryComponents: [NzModalComponent]\r\n})\r\nexport class NzModalModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IndexableObject, warn } from 'ng-zorro-antd/core';\r\n\r\nimport { NzModalControlService } from './nz-modal-control.service';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\nimport { NzModalComponent } from './nz-modal.component';\r\nimport { NzModalServiceModule } from './nz-modal.service.module';\r\nimport { ConfirmType, ModalOptions, ModalOptionsForService } from './nz-modal.type';\r\n\r\n// A builder used for managing service creating modals\r\nexport class ModalBuilderForService {\r\n  private modalRef: ComponentRef<NzModalComponent> | null; // Modal ComponentRef, \"null\" means it has been destroyed\r\n  private overlayRef: OverlayRef;\r\n\r\n  constructor(private overlay: Overlay, options: ModalOptionsForService = {}) {\r\n    this.createModal();\r\n\r\n    if (!('nzGetContainer' in options)) {\r\n      // As we use CDK to create modal in service by force, there is no need to use nzGetContainer\r\n      options.nzGetContainer = undefined; // Override nzGetContainer's default value to prevent creating another overlay\r\n    }\r\n\r\n    this.changeProps(options);\r\n    this.modalRef!.instance.setOverlayRef(this.overlayRef);\r\n    this.modalRef!.instance.open();\r\n    this.modalRef!.instance.nzAfterClose.subscribe(() => this.destroyModal()); // [NOTE] By default, close equals destroy when using as Service\r\n  }\r\n\r\n  getInstance(): NzModalComponent | null {\r\n    return this.modalRef && this.modalRef.instance;\r\n  }\r\n\r\n  destroyModal(): void {\r\n    if (this.modalRef) {\r\n      this.overlayRef.dispose();\r\n      this.modalRef = null;\r\n    }\r\n  }\r\n\r\n  private changeProps(options: ModalOptions): void {\r\n    if (this.modalRef) {\r\n      Object.assign(this.modalRef.instance, options); // DANGER: here not limit user's inputs at runtime\r\n    }\r\n  }\r\n\r\n  // Create component to ApplicationRef\r\n  private createModal(): void {\r\n    this.overlayRef = this.overlay.create();\r\n    this.modalRef = this.overlayRef.attach(new ComponentPortal(NzModalComponent));\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: NzModalServiceModule\r\n})\r\nexport class NzModalService {\r\n  // Track of the current close modals (we assume invisible is close this time)\r\n  get openModals(): NzModalRef[] {\r\n    return this.modalControl.openModals;\r\n  }\r\n\r\n  get afterAllClose(): Observable<void> {\r\n    return this.modalControl.afterAllClose.asObservable();\r\n  }\r\n\r\n  constructor(private overlay: Overlay, private modalControl: NzModalControlService) {}\r\n\r\n  // Closes all of the currently-open dialogs\r\n  closeAll(): void {\r\n    this.modalControl.closeAll();\r\n  }\r\n\r\n  create<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    if (typeof options.nzOnCancel !== 'function') {\r\n      options.nzOnCancel = () => {}; // Leave a empty function to close this modal by default\r\n    }\r\n\r\n    // NOTE: use NzModalComponent as the NzModalRef by now, we may need archive the real NzModalRef object in the future\r\n    const modalRef = new ModalBuilderForService(this.overlay, options).getInstance()!;\r\n\r\n    return modalRef;\r\n  }\r\n\r\n  confirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): NzModalRef<T> {\r\n    if ('nzFooter' in options) {\r\n      warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\r\n    }\r\n    if (!('nzWidth' in options)) {\r\n      options.nzWidth = 416;\r\n    }\r\n    if (!('nzMaskClosable' in options)) {\r\n      options.nzMaskClosable = false;\r\n    }\r\n    if (typeof options.nzOnOk !== 'function') {\r\n      // NOTE: only support function currently by calling confirm()\r\n      options.nzOnOk = () => {}; // Leave a empty function to close this modal by default\r\n    }\r\n\r\n    options.nzModalType = 'confirm';\r\n    options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\r\n    return this.create(options);\r\n  }\r\n\r\n  info<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'info');\r\n  }\r\n\r\n  success<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'success');\r\n  }\r\n\r\n  error<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'error');\r\n  }\r\n\r\n  warning<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'warning');\r\n  }\r\n\r\n  private simpleConfirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType): NzModalRef<T> {\r\n    const iconMap: IndexableObject = {\r\n      info: 'info-circle',\r\n      success: 'check-circle',\r\n      error: 'close-circle',\r\n      warning: 'exclamation-circle'\r\n    };\r\n    if (!('nzIconType' in options)) {\r\n      options.nzIconType = iconMap[confirmType];\r\n    }\r\n    if (!('nzCancelText' in options)) {\r\n      // Remove the Cancel button if the user not specify a Cancel button\r\n      options.nzCancelText = null;\r\n    }\r\n    return this.confirm(options, confirmType);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport { NzModalComponent } from './nz-modal.component';\r\nexport { NzModalFooterDirective } from './nz-modal-footer.directive';\r\nexport { NzModalRef } from './nz-modal-ref.class';\r\nexport { NzModalModule } from './nz-modal.module';\r\nexport { NzModalService } from './nz-modal.service';\r\nexport { NzModalServiceModule } from './nz-modal.service.module';\r\nexport { NZ_MODAL_CONFIG, NzModalConfig } from './nz-modal-config';\r\nexport { NzModalControlService } from './nz-modal-control.service';\r\nexport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\nexport * from './nz-modal.type';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵprojection","i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵattribute","i0.ɵɵelementContainer","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵclassMapInterpolate1"],"mappings":"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"}