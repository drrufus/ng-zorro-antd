{"version":3,"file":"ng-zorro-antd-notification.js","sources":["ng://ng-zorro-antd/notification/nz-notification-config.ts","ng://ng-zorro-antd/notification/nz-notification-container.component.ts","ng://ng-zorro-antd/notification/nz-notification.component.ts","ng://ng-zorro-antd/notification/nz-notification.service.module.ts","ng://ng-zorro-antd/notification/nz-notification.module.ts","ng://ng-zorro-antd/notification/nz-notification.definitions.ts","ng://ng-zorro-antd/notification/nz-notification.service.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nimport { NzMessageConfigLegacy } from 'ng-zorro-antd/message';\r\n\r\n/**\r\n * @deprecated This interface would has been moved to `ng-zorro-antd/core`. Please migrate to that.\r\n */\r\nexport interface NzNotificationConfigLegacy extends NzMessageConfigLegacy {\r\n  nzTop?: string | number;\r\n  nzBottom?: string | number;\r\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | string;\r\n}\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG = new InjectionToken<NzNotificationConfigLegacy>(\r\n  'NZ_NOTIFICATION_DEFAULT_CONFIG'\r\n);\r\n\r\nexport const NZ_NOTIFICATION_CONFIG = new InjectionToken<NzNotificationConfigLegacy>('NZ_NOTIFICATION_CONFIG');\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER = {\r\n  provide: NZ_NOTIFICATION_DEFAULT_CONFIG,\r\n  useValue: {\r\n    nzTop: '24px',\r\n    nzBottom: '24px',\r\n    nzPlacement: 'topRight',\r\n    nzDuration: 4500,\r\n    nzMaxStack: 7,\r\n    nzPauseOnHover: true,\r\n    nzAnimate: true\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  Optional,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { toCssPixel, warnDeprecation, NzConfigService } from 'ng-zorro-antd/core';\r\nimport { NzMessageContainerComponent } from 'ng-zorro-antd/message';\r\n\r\nimport {\r\n  NzNotificationConfigLegacy,\r\n  NZ_NOTIFICATION_CONFIG,\r\n  NZ_NOTIFICATION_DEFAULT_CONFIG\r\n} from './nz-notification-config';\r\nimport { NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'notification';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification-container',\r\n  exportAs: 'nzNotificationContainer',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-notification-container.component.html'\r\n})\r\nexport class NzNotificationContainerComponent extends NzMessageContainerComponent {\r\n  config: Required<NzNotificationConfigLegacy>;\r\n  bottom: string | null;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  messages: Array<Required<NzNotificationDataFilled>> = [];\r\n\r\n  constructor(\r\n    cdr: ChangeDetectorRef,\r\n    nzConfigService: NzConfigService,\r\n    @Optional() @Inject(NZ_NOTIFICATION_DEFAULT_CONFIG) defaultConfig: NzNotificationConfigLegacy,\r\n    @Optional() @Inject(NZ_NOTIFICATION_CONFIG) config: NzNotificationConfigLegacy\r\n  ) {\r\n    super(cdr, nzConfigService, defaultConfig, config);\r\n    if (!!config) {\r\n      warnDeprecation(\r\n        `Injection token 'NZ_NOTIFICATION_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  setConfig(config?: NzNotificationConfigLegacy): void {\r\n    const newConfig = (this.config = {\r\n      ...this.config,\r\n      ...config,\r\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n    });\r\n    const placement = this.config.nzPlacement;\r\n\r\n    this.top = placement === 'topLeft' || placement === 'topRight' ? toCssPixel(newConfig.nzTop) : null;\r\n    this.bottom = placement === 'bottomLeft' || placement === 'bottomRight' ? toCssPixel(newConfig.nzBottom) : null;\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Create a new notification.\r\n   * If there's a notification whose `nzKey` is same with `nzKey` in `NzNotificationDataFilled`,\r\n   * replace its content instead of create a new one.\r\n   * @override\r\n   * @param notification\r\n   */\r\n  createMessage(notification: NzNotificationDataFilled): void {\r\n    notification.options = this._mergeMessageOptions(notification.options);\r\n    notification.onClose = new Subject<boolean>();\r\n    const key = notification.options.nzKey;\r\n    const notificationWithSameKey = this.messages.find(\r\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\r\n    );\r\n\r\n    if (key && notificationWithSameKey) {\r\n      this.replaceNotification(notificationWithSameKey, notification);\r\n    } else {\r\n      if (this.messages.length >= this.config.nzMaxStack) {\r\n        this.messages.splice(0, 1);\r\n      }\r\n      this.messages.push(notification as Required<NzNotificationDataFilled>);\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  protected subscribeConfigChange(): void {\r\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\r\n  }\r\n\r\n  private replaceNotification(old: NzNotificationDataFilled, _new: NzNotificationDataFilled): void {\r\n    old.title = _new.title;\r\n    old.content = _new.content;\r\n    old.template = _new.template;\r\n    old.type = _new.type;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { notificationMotion } from 'ng-zorro-antd/core';\r\nimport { NzMessageComponent } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationDataFilled } from './nz-notification.definitions';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification',\r\n  exportAs: 'nzNotification',\r\n  preserveWhitespaces: false,\r\n  animations: [notificationMotion],\r\n  templateUrl: './nz-notification.component.html'\r\n})\r\nexport class NzNotificationComponent extends NzMessageComponent {\r\n  @Input() nzMessage: NzNotificationDataFilled;\r\n\r\n  constructor(private container: NzNotificationContainerComponent, protected cdr: ChangeDetectorRef) {\r\n    super(container, cdr);\r\n  }\r\n\r\n  close(): void {\r\n    this._destroy(true);\r\n  }\r\n\r\n  get state(): string | undefined {\r\n    if (this.nzMessage.state === 'enter') {\r\n      if (this.container.config.nzPlacement === 'topLeft' || this.container.config.nzPlacement === 'bottomLeft') {\r\n        return 'enterLeft';\r\n      } else {\r\n        return 'enterRight';\r\n      }\r\n    } else {\r\n      return this.nzMessage.state;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzNotificationServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationComponent } from './nz-notification.component';\r\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OverlayModule, NzIconModule, NzNotificationServiceModule],\r\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\r\n  providers: [NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER],\r\n  entryComponents: [NzNotificationContainerComponent]\r\n})\r\nexport class NzNotificationModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { TemplateRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { NzMessageData, NzMessageDataOptions } from 'ng-zorro-antd/message';\r\n\r\nexport interface NzNotificationData extends NzMessageData {\r\n  template?: TemplateRef<{}>;\r\n\r\n  type?: 'success' | 'info' | 'warning' | 'error' | 'blank' | string;\r\n  title?: string;\r\n}\r\n\r\nexport interface NzNotificationDataOptions<T = {}> extends NzMessageDataOptions {\r\n  nzKey?: string;\r\n  nzStyle?: any; // tslint:disable-line:no-any\r\n  nzClass?: any; // tslint:disable-line:no-any\r\n\r\n  /** Anything user wants renderer into a template. */\r\n  nzData?: T;\r\n}\r\n\r\n// Filled version of NzMessageData (includes more private properties)\r\nexport interface NzNotificationDataFilled extends NzNotificationData {\r\n  messageId: string; // Service-wide unique id, auto generated\r\n  createdAt: Date; // Auto created\r\n\r\n  state?: 'enter' | 'leave';\r\n  options?: NzNotificationDataOptions;\r\n  onClose?: Subject<boolean>;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\r\n\r\nimport { NzSingletonService } from 'ng-zorro-antd/core';\r\nimport { NzMessageBaseService } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationConfigLegacy } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationData, NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\r\n\r\n@Injectable({\r\n  providedIn: NzNotificationServiceModule\r\n})\r\nexport class NzNotificationService extends NzMessageBaseService<\r\n  NzNotificationContainerComponent,\r\n  NzNotificationData,\r\n  NzNotificationConfigLegacy\r\n> {\r\n  constructor(\r\n    nzSingletonService: NzSingletonService,\r\n    overlay: Overlay,\r\n    injector: Injector,\r\n    cfr: ComponentFactoryResolver,\r\n    appRef: ApplicationRef\r\n  ) {\r\n    super(nzSingletonService, overlay, NzNotificationContainerComponent, injector, cfr, appRef, 'notification-');\r\n  }\r\n\r\n  // Shortcut methods\r\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'success', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'error', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'info', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'warning', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'blank', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  create(\r\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\r\n    title: string,\r\n    content: string,\r\n    options?: NzNotificationDataOptions\r\n  ): NzNotificationDataFilled {\r\n    return this.createMessage({ type, title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  // For content with template\r\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ template }, options) as NzNotificationDataFilled;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}