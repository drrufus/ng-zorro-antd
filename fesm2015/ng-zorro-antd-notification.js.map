{"version":3,"file":"ng-zorro-antd-notification.js","sources":["ng://ng-zorro-antd/notification/nz-notification-config.ts","ng://ng-zorro-antd/notification/nz-notification-container.component.ts","ng://ng-zorro-antd/notification/nz-notification-container.component.html","ng://ng-zorro-antd/notification/nz-notification.component.ts","ng://ng-zorro-antd/notification/nz-notification.component.html","ng://ng-zorro-antd/notification/nz-notification.service.module.ts","ng://ng-zorro-antd/notification/nz-notification.module.ts","ng://ng-zorro-antd/notification/nz-notification.service.ts","ng://ng-zorro-antd/notification/public-api.ts","ng://ng-zorro-antd/notification/ng-zorro-antd-notification.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nimport { NzMessageConfigLegacy } from 'ng-zorro-antd/message';\r\n\r\n/**\r\n * @deprecated This interface would has been moved to `ng-zorro-antd/core`. Please migrate to that.\r\n */\r\nexport interface NzNotificationConfigLegacy extends NzMessageConfigLegacy {\r\n  nzTop?: string | number;\r\n  nzBottom?: string | number;\r\n  nzPlacement?: 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | string;\r\n}\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG = new InjectionToken<NzNotificationConfigLegacy>('NZ_NOTIFICATION_DEFAULT_CONFIG');\r\n\r\nexport const NZ_NOTIFICATION_CONFIG = new InjectionToken<NzNotificationConfigLegacy>('NZ_NOTIFICATION_CONFIG');\r\n\r\nexport const NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER = {\r\n  provide: NZ_NOTIFICATION_DEFAULT_CONFIG,\r\n  useValue: {\r\n    nzTop: '24px',\r\n    nzBottom: '24px',\r\n    nzPlacement: 'topRight',\r\n    nzDuration: 4500,\r\n    nzMaxStack: 7,\r\n    nzPauseOnHover: true,\r\n    nzAnimate: true\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { NzConfigService, toCssPixel, warnDeprecation } from 'ng-zorro-antd/core';\r\nimport { NzMessageContainerComponent } from 'ng-zorro-antd/message';\r\n\r\nimport { NZ_NOTIFICATION_CONFIG, NZ_NOTIFICATION_DEFAULT_CONFIG, NzNotificationConfigLegacy } from './nz-notification-config';\r\nimport { NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'notification';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification-container',\r\n  exportAs: 'nzNotificationContainer',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-notification-container.component.html'\r\n})\r\nexport class NzNotificationContainerComponent extends NzMessageContainerComponent {\r\n  config: Required<NzNotificationConfigLegacy>;\r\n  bottom: string | null;\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  messages: Array<Required<NzNotificationDataFilled>> = [];\r\n\r\n  constructor(\r\n    cdr: ChangeDetectorRef,\r\n    nzConfigService: NzConfigService,\r\n    @Optional() @Inject(NZ_NOTIFICATION_DEFAULT_CONFIG) defaultConfig: NzNotificationConfigLegacy,\r\n    @Optional() @Inject(NZ_NOTIFICATION_CONFIG) config: NzNotificationConfigLegacy\r\n  ) {\r\n    super(cdr, nzConfigService, defaultConfig, config);\r\n    if (!!config) {\r\n      warnDeprecation(\r\n        `Injection token 'NZ_NOTIFICATION_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  setConfig(config?: NzNotificationConfigLegacy): void {\r\n    const newConfig = (this.config = {\r\n      ...this.config,\r\n      ...config,\r\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n    });\r\n    const placement = this.config.nzPlacement;\r\n\r\n    this.top = placement === 'topLeft' || placement === 'topRight' ? toCssPixel(newConfig.nzTop) : null;\r\n    this.bottom = placement === 'bottomLeft' || placement === 'bottomRight' ? toCssPixel(newConfig.nzBottom) : null;\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Create a new notification.\r\n   * If there's a notification whose `nzKey` is same with `nzKey` in `NzNotificationDataFilled`,\r\n   * replace its content instead of create a new one.\r\n   * @override\r\n   * @param notification\r\n   */\r\n  createMessage(notification: NzNotificationDataFilled): void {\r\n    notification.options = this._mergeMessageOptions(notification.options);\r\n    notification.onClose = new Subject<boolean>();\r\n    const key = notification.options.nzKey;\r\n    const notificationWithSameKey = this.messages.find(\r\n      msg => msg.options.nzKey === (notification.options as Required<NzNotificationDataOptions>).nzKey\r\n    );\r\n\r\n    if (key && notificationWithSameKey) {\r\n      this.replaceNotification(notificationWithSameKey, notification);\r\n    } else {\r\n      if (this.messages.length >= this.config.nzMaxStack) {\r\n        this.messages.splice(0, 1);\r\n      }\r\n      this.messages.push(notification as Required<NzNotificationDataFilled>);\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   */\r\n  protected subscribeConfigChange(): void {\r\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\r\n  }\r\n\r\n  private replaceNotification(old: NzNotificationDataFilled, _new: NzNotificationDataFilled): void {\r\n    old.title = _new.title;\r\n    old.content = _new.content;\r\n    old.template = _new.template;\r\n    old.type = _new.type;\r\n  }\r\n}\r\n","<div\r\n  class=\"ant-notification ant-notification-{{ config.nzPlacement }}\"\r\n  [style.top]=\"config.nzPlacement === 'topLeft' || config.nzPlacement === 'topRight' ? top : null\"\r\n  [style.bottom]=\"\r\n    config.nzPlacement === 'bottomLeft' || config.nzPlacement === 'bottomRight' ? bottom : null\r\n  \"\r\n  [style.right]=\"\r\n    config.nzPlacement === 'bottomRight' || config.nzPlacement === 'topRight' ? '0px' : null\r\n  \"\r\n  [style.left]=\"\r\n    config.nzPlacement === 'topLeft' || config.nzPlacement === 'bottomLeft' ? '0px' : null\r\n  \"\r\n>\r\n  <nz-notification\r\n    *ngFor=\"let message of messages; let i = index\"\r\n    [nzMessage]=\"message\"\r\n    [nzIndex]=\"i\"\r\n  >\r\n  </nz-notification>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectorRef, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { notificationMotion } from 'ng-zorro-antd/core';\r\nimport { NzMessageComponent } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationDataFilled } from './nz-notification.definitions';\r\n\r\n@Component({\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-notification',\r\n  exportAs: 'nzNotification',\r\n  preserveWhitespaces: false,\r\n  animations: [notificationMotion],\r\n  templateUrl: './nz-notification.component.html'\r\n})\r\nexport class NzNotificationComponent extends NzMessageComponent {\r\n  @Input() nzMessage: NzNotificationDataFilled;\r\n\r\n  constructor(private container: NzNotificationContainerComponent, protected cdr: ChangeDetectorRef) {\r\n    super(container, cdr);\r\n  }\r\n\r\n  close(): void {\r\n    this._destroy(true);\r\n  }\r\n\r\n  get state(): string | undefined {\r\n    if (this.nzMessage.state === 'enter') {\r\n      if (this.container.config.nzPlacement === 'topLeft' || this.container.config.nzPlacement === 'bottomLeft') {\r\n        return 'enterLeft';\r\n      } else {\r\n        return 'enterRight';\r\n      }\r\n    } else {\r\n      return this.nzMessage.state;\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"ant-notification-notice ant-notification-notice-closable\"\r\n  [ngStyle]=\"nzMessage.options?.nzStyle\"\r\n  [ngClass]=\"nzMessage.options?.nzClass\"\r\n  [@notificationMotion]=\"state\"\r\n  (mouseenter)=\"onEnter()\"\r\n  (mouseleave)=\"onLeave()\"\r\n>\r\n  <div *ngIf=\"!nzMessage.template\" class=\"ant-notification-notice-content\">\r\n    <div\r\n      class=\"ant-notification-notice-content\"\r\n      [ngClass]=\"{ 'ant-notification-notice-with-icon': nzMessage.type !== 'blank' }\"\r\n    >\r\n      <div [class.ant-notification-notice-with-icon]=\"nzMessage.type !== 'blank'\">\r\n        <ng-container [ngSwitch]=\"nzMessage.type\">\r\n          <i\r\n            *ngSwitchCase=\"'success'\"\r\n            nz-icon\r\n            nzType=\"check-circle\"\r\n            class=\"ant-notification-notice-icon ant-notification-notice-icon-success\"\r\n          ></i>\r\n          <i\r\n            *ngSwitchCase=\"'info'\"\r\n            nz-icon\r\n            nzType=\"info-circle\"\r\n            class=\"ant-notification-notice-icon ant-notification-notice-icon-info\"\r\n          ></i>\r\n          <i\r\n            *ngSwitchCase=\"'warning'\"\r\n            nz-icon\r\n            nzType=\"exclamation-circle\"\r\n            class=\"ant-notification-notice-icon ant-notification-notice-icon-warning\"\r\n          ></i>\r\n          <i\r\n            *ngSwitchCase=\"'error'\"\r\n            nz-icon\r\n            nzType=\"close-circle\"\r\n            class=\"ant-notification-notice-icon ant-notification-notice-icon-error\"\r\n          ></i>\r\n        </ng-container>\r\n        <div class=\"ant-notification-notice-message\" [innerHTML]=\"nzMessage.title\"></div>\r\n        <div class=\"ant-notification-notice-description\" [innerHTML]=\"nzMessage.content\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template\r\n    [ngIf]=\"nzMessage.template\"\r\n    [ngTemplateOutlet]=\"nzMessage.template\"\r\n    [ngTemplateOutletContext]=\"{ $implicit: this, data: nzMessage.options?.nzData }\"\r\n  >\r\n  </ng-template>\r\n  <a tabindex=\"0\" class=\"ant-notification-notice-close\" (click)=\"close()\">\r\n    <span class=\"ant-notification-notice-close-x\">\r\n      <ng-container *ngIf=\"nzMessage.options?.nzCloseIcon else iconTpl\">\r\n        <ng-container *nzStringTemplateOutlet=\"nzMessage.options?.nzCloseIcon\">\r\n          <i nz-icon [nzType]=\"nzMessage.options?.nzCloseIcon\"></i>\r\n        </ng-container>\r\n      </ng-container>\r\n      <ng-template #iconTpl>\r\n        <i nz-icon nzType=\"close\" class=\"ant-notification-close-icon\"></i>\r\n      </ng-template>\r\n    </span>\r\n  </a>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzNotificationServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationComponent } from './nz-notification.component';\r\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OverlayModule, NzIconModule, NzNotificationServiceModule, NzAddOnModule],\r\n  declarations: [NzNotificationComponent, NzNotificationContainerComponent],\r\n  providers: [NZ_NOTIFICATION_DEFAULT_CONFIG_PROVIDER],\r\n  entryComponents: [NzNotificationContainerComponent]\r\n})\r\nexport class NzNotificationModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\r\n\r\nimport { NzSingletonService } from 'ng-zorro-antd/core';\r\nimport { NzMessageBaseService } from 'ng-zorro-antd/message';\r\n\r\nimport { NzNotificationConfigLegacy } from './nz-notification-config';\r\nimport { NzNotificationContainerComponent } from './nz-notification-container.component';\r\nimport { NzNotificationData, NzNotificationDataFilled, NzNotificationDataOptions } from './nz-notification.definitions';\r\nimport { NzNotificationServiceModule } from './nz-notification.service.module';\r\n\r\n@Injectable({\r\n  providedIn: NzNotificationServiceModule\r\n})\r\nexport class NzNotificationService extends NzMessageBaseService<\r\n  NzNotificationContainerComponent,\r\n  NzNotificationData,\r\n  NzNotificationConfigLegacy\r\n> {\r\n  constructor(\r\n    nzSingletonService: NzSingletonService,\r\n    overlay: Overlay,\r\n    injector: Injector,\r\n    cfr: ComponentFactoryResolver,\r\n    appRef: ApplicationRef\r\n  ) {\r\n    super(nzSingletonService, overlay, NzNotificationContainerComponent, injector, cfr, appRef, 'notification-');\r\n  }\r\n\r\n  // Shortcut methods\r\n  success(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'success', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  error(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'error', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  info(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'info', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  warning(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'warning', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  blank(title: string, content: string, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ type: 'blank', title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  create(\r\n    type: 'success' | 'info' | 'warning' | 'error' | 'blank' | string,\r\n    title: string,\r\n    content: string,\r\n    options?: NzNotificationDataOptions\r\n  ): NzNotificationDataFilled {\r\n    return this.createMessage({ type, title, content }, options) as NzNotificationDataFilled;\r\n  }\r\n\r\n  // For content with template\r\n  template(template: TemplateRef<{}>, options?: NzNotificationDataOptions): NzNotificationDataFilled {\r\n    return this.createMessage({ template }, options) as NzNotificationDataFilled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport * from './nz-notification-config';\r\nexport * from './nz-notification.component';\r\nexport * from './nz-notification.module';\r\nexport * from './nz-notification.definitions';\r\nexport * from './nz-notification.service';\r\nexport * from './nz-notification.service.module';\r\nexport * from './nz-notification-container.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵclassMapInterpolate1","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵclassProp","i0.ɵɵlistener"],"mappings":"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"}