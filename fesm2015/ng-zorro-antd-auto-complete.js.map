{"version":3,"file":"ng-zorro-antd-auto-complete.js","sources":["ng://ng-zorro-antd/auto-complete/nz-autocomplete-optgroup.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-optgroup.component.html","ng://ng-zorro-antd/auto-complete/nz-autocomplete-option.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-option.component.html","ng://ng-zorro-antd/auto-complete/nz-autocomplete.component.html","ng://ng-zorro-antd/auto-complete/nz-autocomplete.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-trigger.directive.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.module.ts","ng://ng-zorro-antd/auto-complete/public-api.ts","ng://ng-zorro-antd/auto-complete/ng-zorro-antd-auto-complete.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nz-auto-optgroup',\r\n  exportAs: 'nzAutoOptgroup',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete-optgroup.component.html',\r\n  host: {\r\n    role: 'group',\r\n    class: 'ant-select-dropdown-menu-item-group'\r\n  }\r\n})\r\nexport class NzAutocompleteOptgroupComponent {\r\n  @Input() nzLabel: string | TemplateRef<void>;\r\n\r\n  constructor() {}\r\n}\r\n","<div class=\"ant-select-dropdown-menu-item-group-title\">\r\n  <ng-container *nzStringTemplateOutlet=\"nzLabel\">{{ nzLabel }}</ng-container>\r\n</div>\r\n<ul class=\"ant-select-dropdown-menu-item-group-list\">\r\n  <ng-content select=\"nz-auto-option\"></ng-content>\r\n</ul>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { InputBoolean, scrollIntoView } from 'ng-zorro-antd/core';\r\n\r\nexport class NzOptionSelectionChange {\r\n  constructor(public source: NzAutocompleteOptionComponent, public isUserInput: boolean = false) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'nz-auto-option',\r\n  exportAs: 'nzAutoOption',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete-option.component.html',\r\n  host: {\r\n    role: 'menuitem',\r\n    class: 'ant-select-dropdown-menu-item',\r\n    '[class.ant-select-dropdown-menu-item-selected]': 'selected',\r\n    '[class.ant-select-dropdown-menu-item-active]': 'active',\r\n    '[class.ant-select-dropdown-menu-item-disabled]': 'nzDisabled',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'nzDisabled.toString()',\r\n    '(click)': 'selectViaInteraction()',\r\n    '(mousedown)': '$event.preventDefault()'\r\n  }\r\n})\r\nexport class NzAutocompleteOptionComponent {\r\n  /* tslint:disable-next-line:no-any */\r\n  @Input() nzValue: any;\r\n  @Input() nzLabel: string;\r\n  @Input() @InputBoolean() nzDisabled = false;\r\n  @Output() readonly selectionChange = new EventEmitter<NzOptionSelectionChange>();\r\n\r\n  active = false;\r\n  selected = false;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private element: ElementRef) {}\r\n\r\n  select(emit: boolean = true): void {\r\n    this.selected = true;\r\n    this.changeDetectorRef.markForCheck();\r\n    if (emit) {\r\n      this.emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  deselect(): void {\r\n    this.selected = false;\r\n    this.changeDetectorRef.markForCheck();\r\n    this.emitSelectionChangeEvent();\r\n  }\r\n\r\n  /** Git display label */\r\n  getLabel(): string {\r\n    return this.nzLabel || this.nzValue.toString();\r\n  }\r\n\r\n  /** Set active (only styles) */\r\n  setActiveStyles(): void {\r\n    if (!this.active) {\r\n      this.active = true;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Unset active (only styles) */\r\n  setInactiveStyles(): void {\r\n    if (this.active) {\r\n      this.active = false;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  scrollIntoViewIfNeeded(): void {\r\n    scrollIntoView(this.element.nativeElement);\r\n  }\r\n\r\n  selectViaInteraction(): void {\r\n    if (!this.nzDisabled) {\r\n      this.selected = !this.selected;\r\n      if (this.selected) {\r\n        this.setActiveStyles();\r\n      } else {\r\n        this.setInactiveStyles();\r\n      }\r\n      this.emitSelectionChangeEvent(true);\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  private emitSelectionChangeEvent(isUserInput: boolean = false): void {\r\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\r\n  }\r\n}\r\n","<ng-content></ng-content>\r\n","<ng-template>\r\n  <div\r\n    class=\"ant-select-dropdown ant-select-dropdown--single ant-select-dropdown-placement-bottomLeft\"\r\n    #panel\r\n    [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n    [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\r\n    [@slideMotion]=\"dropDownPosition\"\r\n    [class.ant-select-dropdown-hidden]=\"!showPanel\"\r\n    [ngClass]=\"nzOverlayClassName\"\r\n    [ngStyle]=\"nzOverlayStyle\"\r\n  >\r\n    <div style=\"overflow: auto;\">\r\n      <ul\r\n        class=\"ant-select-dropdown-menu  ant-select-dropdown-menu-root ant-select-dropdown-menu-vertical\"\r\n        role=\"menu\"\r\n        aria-activedescendant\r\n      >\r\n        <ng-template\r\n          *ngTemplateOutlet=\"nzDataSource ? optionsTemplate : contentTemplate\"\r\n        ></ng-template>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <ng-template #contentTemplate>\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n  <ng-template #optionsTemplate>\r\n    <nz-auto-option *ngFor=\"let option of nzDataSource\" [nzValue]=\"option\">{{\r\n      option\r\n    }}</nz-auto-option>\r\n  </ng-template>\r\n</ng-template>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { defer, merge, Observable, Subscription } from 'rxjs';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { CompareWith, InputBoolean, NzDropDownPosition, NzNoAnimationDirective, slideMotion } from 'ng-zorro-antd/core';\r\n\r\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './nz-autocomplete-option.component';\r\n\r\nexport interface AutocompleteDataSourceItem {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport type AutocompleteDataSource = AutocompleteDataSourceItem[] | string[] | number[];\r\n\r\n@Component({\r\n  selector: 'nz-autocomplete',\r\n  exportAs: 'nzAutocomplete',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete.component.html',\r\n  animations: [slideMotion],\r\n  styles: [\r\n    `\r\n      .ant-select-dropdown {\r\n        top: 100%;\r\n        left: 0;\r\n        position: relative;\r\n        width: 100%;\r\n        margin-top: 4px;\r\n        margin-bottom: 4px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzAutocompleteComponent implements AfterContentInit, AfterViewInit, OnDestroy {\r\n  @Input() nzWidth: number;\r\n  @Input() nzOverlayClassName = '';\r\n  @Input() nzOverlayStyle: { [key: string]: string } = {};\r\n  @Input() @InputBoolean() nzDefaultActiveFirstOption = true;\r\n  @Input() @InputBoolean() nzBackfill = false;\r\n  @Input() compareWith: CompareWith = (o1, o2) => o1 === o2;\r\n  @Input() nzDataSource: AutocompleteDataSource;\r\n  @Output() readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent> = new EventEmitter<NzAutocompleteOptionComponent>();\r\n\r\n  showPanel: boolean = true;\r\n  isOpen: boolean = false;\r\n  activeItem: NzAutocompleteOptionComponent;\r\n  dropDownPosition: NzDropDownPosition = 'bottom';\r\n\r\n  /**\r\n   * Options accessor, its source may be content or dataSource\r\n   */\r\n  get options(): QueryList<NzAutocompleteOptionComponent> {\r\n    // first dataSource\r\n    if (this.nzDataSource) {\r\n      return this.fromDataSourceOptions;\r\n    } else {\r\n      return this.fromContentOptions;\r\n    }\r\n  }\r\n\r\n  /** Provided by content */\r\n  @ContentChildren(NzAutocompleteOptionComponent, { descendants: true }) fromContentOptions: QueryList<NzAutocompleteOptionComponent>;\r\n  /** Provided by dataSource */\r\n  @ViewChildren(NzAutocompleteOptionComponent) fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\r\n\r\n  /** cdk-overlay */\r\n  @ViewChild(TemplateRef, { static: false }) template: TemplateRef<{}>;\r\n  @ViewChild('panel', { static: false }) panel: ElementRef;\r\n  @ViewChild('content', { static: false }) content: ElementRef;\r\n\r\n  private activeItemIndex: number = -1;\r\n  private selectionChangeSubscription = Subscription.EMPTY;\r\n  private dataSourceChangeSubscription = Subscription.EMPTY;\r\n  /** Options changes listener */\r\n  readonly optionSelectionChanges: Observable<NzOptionSelectionChange> = defer(() => {\r\n    if (this.options) {\r\n      return merge<NzOptionSelectionChange>(...this.options.map(option => option.selectionChange));\r\n    }\r\n    return this.ngZone.onStable.asObservable().pipe(\r\n      take(1),\r\n      switchMap(() => this.optionSelectionChanges)\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private ngZone: NgZone,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.nzDataSource) {\r\n      this.optionsInit();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.nzDataSource) {\r\n      this.optionsInit();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataSourceChangeSubscription.unsubscribe();\r\n    this.selectionChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  setVisibility(): void {\r\n    this.showPanel = !!this.options.length;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  setActiveItem(index: number): void {\r\n    const activeItem = this.options.toArray()[index];\r\n    if (activeItem && !activeItem.active) {\r\n      this.activeItem = activeItem;\r\n      this.activeItemIndex = index;\r\n      this.clearSelectedOptions(this.activeItem);\r\n      this.activeItem.setActiveStyles();\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  setNextItemActive(): void {\r\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\r\n    this.setActiveItem(nextIndex);\r\n  }\r\n\r\n  setPreviousItemActive(): void {\r\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\r\n    this.setActiveItem(previousIndex);\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  getOptionIndex(value: any): number {\r\n    return this.options.reduce((result: number, current: NzAutocompleteOptionComponent, index: number) => {\r\n      return result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result;\r\n    }, -1)!;\r\n  }\r\n\r\n  updatePosition(position: NzDropDownPosition): void {\r\n    this.dropDownPosition = position;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private optionsInit(): void {\r\n    this.setVisibility();\r\n    this.subscribeOptionChanges();\r\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\r\n    // async\r\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\r\n      if (!e.dirty && this.isOpen) {\r\n        setTimeout(() => this.setVisibility());\r\n      }\r\n      this.subscribeOptionChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the status of options\r\n   */\r\n  clearSelectedOptions(skip?: NzAutocompleteOptionComponent | null, deselect: boolean = false): void {\r\n    this.options.forEach(option => {\r\n      if (option !== skip) {\r\n        if (deselect) {\r\n          option.deselect();\r\n        }\r\n        option.setInactiveStyles();\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeOptionChanges(): void {\r\n    this.selectionChangeSubscription.unsubscribe();\r\n    this.selectionChangeSubscription = this.optionSelectionChanges\r\n      .pipe(filter((event: NzOptionSelectionChange) => event.isUserInput))\r\n      .subscribe((event: NzOptionSelectionChange) => {\r\n        event.source.select();\r\n        event.source.setActiveStyles();\r\n        this.activeItem = event.source;\r\n        this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\r\n        this.clearSelectedOptions(event.source, true);\r\n        this.selectionChange.emit(event.source);\r\n      });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedOverlayPositionChange,\r\n  ConnectionPositionPair,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy,\r\n  VerticalConnectionPos\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  ExistingProvider,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { fromEvent, merge, Subscription } from 'rxjs';\r\nimport { delay, distinct, map, take, tap } from 'rxjs/operators';\r\n\r\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\r\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\r\n\r\nexport const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\r\n  multi: true\r\n};\r\n\r\nexport function getNzAutocompleteMissingPanelError(): Error {\r\n  return Error(\r\n    'Attempting to open an undefined instance of `nz-autocomplete`. ' +\r\n      'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\r\n      \"you're attempting to open it after the ngAfterContentInit hook.\"\r\n  );\r\n}\r\n\r\n@Directive({\r\n  selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\r\n  exportAs: 'nzAutocompleteTrigger',\r\n  providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\r\n  host: {\r\n    autocomplete: 'off',\r\n    'aria-autocomplete': 'list',\r\n    '(focusin)': 'handleFocus()',\r\n    '(blur)': 'handleBlur()',\r\n    '(input)': 'handleInput($event)',\r\n    '(keydown)': 'handleKeydown($event)'\r\n  }\r\n})\r\nexport class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\r\n  /** Bind nzAutocomplete component */\r\n  @Input() nzAutocomplete: NzAutocompleteComponent;\r\n\r\n  // tslint:disable-next-line:no-any\r\n  _onChange: (value: any) => void = () => {};\r\n  _onTouched = () => {};\r\n  panelOpen: boolean = false;\r\n\r\n  /** Current active option */\r\n  get activeOption(): NzAutocompleteOptionComponent | void {\r\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\r\n      return this.nzAutocomplete.activeItem;\r\n    }\r\n  }\r\n\r\n  private overlayRef: OverlayRef | null;\r\n  private portal: TemplatePortal<{}> | null;\r\n  private positionStrategy: FlexibleConnectedPositionStrategy;\r\n  private previousValue: string | number | null;\r\n  private selectionChangeSubscription: Subscription;\r\n  private optionsChangeSubscription: Subscription;\r\n  private overlayBackdropClickSubscription: Subscription;\r\n  private overlayPositionChangeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private overlay: Overlay,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private ngZone: NgZone,\r\n    // tslint:disable-next-line:no-any\r\n    @Optional() @Inject(DOCUMENT) private document: any\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyPanel();\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  writeValue(value: any): void {\r\n    this.setTriggerValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: {}) => {}): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    const element: HTMLInputElement = this.elementRef.nativeElement;\r\n    element.disabled = isDisabled;\r\n    this.closePanel();\r\n  }\r\n\r\n  openPanel(): void {\r\n    this.previousValue = this.elementRef.nativeElement.value;\r\n    this.attachOverlay();\r\n    this.updateStatus();\r\n  }\r\n\r\n  closePanel(): void {\r\n    if (this.panelOpen) {\r\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\r\n\r\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\r\n        this.selectionChangeSubscription.unsubscribe();\r\n        this.overlayBackdropClickSubscription.unsubscribe();\r\n        this.overlayPositionChangeSubscription.unsubscribe();\r\n        this.optionsChangeSubscription.unsubscribe();\r\n        this.overlayRef.detach();\r\n        this.overlayRef = null;\r\n        this.portal = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\r\n\r\n    if (keyCode === ESCAPE) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\r\n      // Reset value when tab / ESC close\r\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\r\n        this.setTriggerValue(this.previousValue);\r\n      }\r\n      this.closePanel();\r\n    } else if (this.panelOpen && keyCode === ENTER) {\r\n      if (this.nzAutocomplete.showPanel && this.activeOption) {\r\n        event.preventDefault();\r\n        this.activeOption.selectViaInteraction();\r\n      }\r\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      if (keyCode === UP_ARROW) {\r\n        this.nzAutocomplete.setPreviousItemActive();\r\n      } else {\r\n        this.nzAutocomplete.setNextItemActive();\r\n      }\r\n      if (this.activeOption) {\r\n        this.activeOption.scrollIntoViewIfNeeded();\r\n      }\r\n      this.doBackfill();\r\n    }\r\n  }\r\n\r\n  handleInput(event: KeyboardEvent): void {\r\n    const target = event.target as HTMLInputElement;\r\n    const document = this.document as Document;\r\n    let value: number | string | null = target.value;\r\n\r\n    if (target.type === 'number') {\r\n      value = value === '' ? null : parseFloat(value);\r\n    }\r\n\r\n    if (this.previousValue !== value) {\r\n      this.previousValue = value;\r\n      this._onChange(value);\r\n\r\n      if (this.canOpen() && document.activeElement === event.target) {\r\n        this.openPanel();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFocus(): void {\r\n    if (this.canOpen()) {\r\n      this.openPanel();\r\n    }\r\n  }\r\n\r\n  handleBlur(): void {\r\n    this.closePanel();\r\n    this._onTouched();\r\n  }\r\n\r\n  /**\r\n   * Subscription data source changes event\r\n   */\r\n  private subscribeOptionsChange(): Subscription {\r\n    const firstStable = this.ngZone.onStable.asObservable().pipe(take(1));\r\n    const optionChanges = this.nzAutocomplete.options.changes.pipe(\r\n      tap(() => this.positionStrategy.reapplyLastPosition()),\r\n      delay(0)\r\n    );\r\n    return merge(firstStable, optionChanges).subscribe(() => {\r\n      this.resetActiveItem();\r\n      if (this.panelOpen) {\r\n        this.overlayRef!.updatePosition();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription option changes event and set the value\r\n   */\r\n  private subscribeSelectionChange(): Subscription {\r\n    return this.nzAutocomplete.selectionChange.subscribe((option: NzAutocompleteOptionComponent) => {\r\n      this.setValueAndClose(option);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription external click and close panel\r\n   */\r\n  private subscribeOverlayBackdropClick(): Subscription {\r\n    return merge<MouseEvent | TouchEvent>(\r\n      fromEvent<MouseEvent>(this.document, 'click'),\r\n      fromEvent<TouchEvent>(this.document, 'touchend')\r\n    ).subscribe((event: MouseEvent | TouchEvent) => {\r\n      const clickTarget = event.target as HTMLElement;\r\n\r\n      // Make sure is not self\r\n      if (clickTarget !== this.elementRef.nativeElement && !this.overlayRef!.overlayElement.contains(clickTarget) && this.panelOpen) {\r\n        this.closePanel();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription overlay position changes and reset dropdown position\r\n   */\r\n  private subscribeOverlayPositionChange(): Subscription {\r\n    return this.positionStrategy.positionChanges\r\n      .pipe(\r\n        map((position: ConnectedOverlayPositionChange) => position.connectionPair.originY),\r\n        distinct(),\r\n        delay(0)\r\n      )\r\n      .subscribe((position: VerticalConnectionPos) => {\r\n        this.nzAutocomplete.updatePosition(position);\r\n      });\r\n  }\r\n\r\n  private attachOverlay(): void {\r\n    if (!this.nzAutocomplete) {\r\n      throw getNzAutocompleteMissingPanelError();\r\n    }\r\n\r\n    if (!this.portal) {\r\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\r\n    }\r\n\r\n    if (!this.overlayRef) {\r\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\r\n    }\r\n\r\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\r\n      this.overlayRef.attach(this.portal);\r\n      this.overlayPositionChangeSubscription = this.subscribeOverlayPositionChange();\r\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\r\n      this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\r\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\r\n    }\r\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\r\n  }\r\n\r\n  private updateStatus(): void {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\r\n    }\r\n    this.nzAutocomplete.setVisibility();\r\n    this.resetActiveItem();\r\n    if (this.activeOption) {\r\n      this.activeOption.scrollIntoViewIfNeeded();\r\n    }\r\n  }\r\n\r\n  private destroyPanel(): void {\r\n    if (this.overlayRef) {\r\n      this.closePanel();\r\n    }\r\n  }\r\n\r\n  private getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this.getOverlayPosition(),\r\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\r\n      // default host element width\r\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\r\n    });\r\n  }\r\n\r\n  private getConnectedElement(): ElementRef {\r\n    return this.elementRef;\r\n  }\r\n\r\n  private getHostWidth(): number {\r\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\r\n  }\r\n\r\n  private getOverlayPosition(): PositionStrategy {\r\n    const positions = [\r\n      new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\r\n      new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\r\n    ];\r\n    this.positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo(this.getConnectedElement())\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false)\r\n      .withPositions(positions);\r\n    return this.positionStrategy;\r\n  }\r\n\r\n  private resetActiveItem(): void {\r\n    const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\r\n    this.nzAutocomplete.clearSelectedOptions(null, true);\r\n    if (index !== -1) {\r\n      this.nzAutocomplete.setActiveItem(index);\r\n      this.nzAutocomplete.activeItem.select(false);\r\n    } else {\r\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\r\n    }\r\n  }\r\n\r\n  private setValueAndClose(option: NzAutocompleteOptionComponent): void {\r\n    const value = option.nzValue;\r\n    this.setTriggerValue(option.getLabel());\r\n    this._onChange(value);\r\n    this.elementRef.nativeElement.focus();\r\n    this.closePanel();\r\n  }\r\n\r\n  private setTriggerValue(value: string | number | null): void {\r\n    this.elementRef.nativeElement.value = value || '';\r\n    if (!this.nzAutocomplete.nzBackfill) {\r\n      this.previousValue = value;\r\n    }\r\n  }\r\n\r\n  private doBackfill(): void {\r\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\r\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\r\n    }\r\n  }\r\n\r\n  private canOpen(): boolean {\r\n    const element: HTMLInputElement = this.elementRef.nativeElement;\r\n    return !element.readOnly && !element.disabled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\r\n\r\nimport { NzAutocompleteOptgroupComponent } from './nz-autocomplete-optgroup.component';\r\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\r\nimport { NzAutocompleteTriggerDirective } from './nz-autocomplete-trigger.directive';\r\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\r\n\r\n@NgModule({\r\n  declarations: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\r\n  exports: [NzAutocompleteComponent, NzAutocompleteOptionComponent, NzAutocompleteTriggerDirective, NzAutocompleteOptgroupComponent],\r\n  imports: [CommonModule, OverlayModule, FormsModule, NzAddOnModule, NzNoAnimationModule]\r\n})\r\nexport class NzAutocompleteModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport * from './nz-autocomplete.module';\r\nexport * from './nz-autocomplete.component';\r\nexport * from './nz-autocomplete-trigger.directive';\r\nexport * from './nz-autocomplete-option.component';\r\nexport * from './nz-autocomplete-optgroup.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵtext","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵprojection","i0.ɵɵproperty","i0.ɵɵclassProp"],"mappings":"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"}