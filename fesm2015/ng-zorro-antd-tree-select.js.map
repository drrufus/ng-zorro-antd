{"version":3,"file":"ng-zorro-antd-tree-select.js","sources":["ng://ng-zorro-antd/tree-select/nz-tree-select.service.ts","ng://ng-zorro-antd/tree-select/nz-tree-select.component.html","ng://ng-zorro-antd/tree-select/nz-tree-select.component.ts","ng://ng-zorro-antd/tree-select/nz-tree-select.module.ts","ng://ng-zorro-antd/tree-select/public-api.ts","ng://ng-zorro-antd/tree-select/ng-zorro-antd-tree-select.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { NzTreeBaseService } from 'ng-zorro-antd/core';\r\n\r\n@Injectable()\r\nexport class NzTreeSelectService extends NzTreeBaseService {}\r\n","<ng-template #inputTemplate>\r\n  <input\r\n    #inputElement\r\n    autocomplete=\"off\"\r\n    class=\"ant-select-search__field\"\r\n    (compositionstart)=\"isComposing = true\"\r\n    (compositionend)=\"isComposing = false\"\r\n    (keydown)=\"onKeyDownInput($event)\"\r\n    [ngModel]=\"inputValue\"\r\n    (ngModelChange)=\"setInputValue($event)\"\r\n    [disabled]=\"nzDisabled\"\r\n  />\r\n</ng-template>\r\n\r\n<ng-template\r\n  cdkConnectedOverlay\r\n  nzConnectedOverlay\r\n  [cdkConnectedOverlayOrigin]=\"cdkOverlayOrigin\"\r\n  [cdkConnectedOverlayOpen]=\"nzOpen\"\r\n  [cdkConnectedOverlayHasBackdrop]=\"true\"\r\n  [cdkConnectedOverlayMinWidth]=\"nzDropdownMatchSelectWidth ? null : triggerWidth\"\r\n  [cdkConnectedOverlayWidth]=\"nzDropdownMatchSelectWidth ? triggerWidth : null\"\r\n  (backdropClick)=\"closeDropDown()\"\r\n  (detach)=\"closeDropDown()\"\r\n  (positionChange)=\"onPositionChange($event)\"\r\n>\r\n  <div\r\n    class=\"ant-select-dropdown ant-select-tree-dropdown\"\r\n    [@slideMotion]=\"nzOpen ? dropDownPosition : 'void'\"\r\n    [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n    [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\r\n    [class.ant-select-dropdown--single]=\"!nzMultiple\"\r\n    [class.ant-select-dropdown--multiple]=\"nzMultiple\"\r\n    [class.ant-select-dropdown-placement-bottomLeft]=\"dropDownPosition === 'bottom'\"\r\n    [class.ant-select-dropdown-placement-topLeft]=\"dropDownPosition === 'top'\"\r\n    [ngStyle]=\"nzDropdownStyle\"\r\n  >\r\n    <nz-tree\r\n      #treeRef\r\n      [hidden]=\"isNotFound\"\r\n      nzNoAnimation\r\n      nzSelectMode\r\n      [nzData]=\"nzNodes\"\r\n      [nzMultiple]=\"nzMultiple\"\r\n      [nzSearchValue]=\"inputValue\"\r\n      [nzHideUnMatched]=\"nzHideUnMatched\"\r\n      [nzShowIcon]=\"nzShowIcon\"\r\n      [nzCheckable]=\"nzCheckable\"\r\n      [nzAsyncData]=\"nzAsyncData\"\r\n      [nzShowExpand]=\"nzShowExpand\"\r\n      [nzShowLine]=\"nzShowLine\"\r\n      [nzExpandedIcon]=\"nzExpandedIcon\"\r\n      [nzExpandAll]=\"nzDefaultExpandAll\"\r\n      [nzExpandedKeys]=\"expandedKeys\"\r\n      [nzCheckedKeys]=\"nzCheckable ? value : []\"\r\n      [nzSelectedKeys]=\"!nzCheckable ? value : []\"\r\n      [nzTreeTemplate]=\"treeTemplate\"\r\n      [nzCheckStrictly]=\"nzCheckStrictly\"\r\n      (nzExpandChange)=\"onExpandedKeysChange($event)\"\r\n      (nzClick)=\"nzTreeClick.emit($event)\"\r\n      (nzCheckedKeysChange)=\"updateSelectedNodes()\"\r\n      (nzSelectedKeysChange)=\"updateSelectedNodes()\"\r\n      (nzCheckBoxChange)=\"nzTreeCheckBoxChange.emit($event)\"\r\n      (nzSearchValueChange)=\"setSearchValues($event)\"\r\n    >\r\n    </nz-tree>\r\n    <span *ngIf=\"nzNodes.length === 0 || isNotFound\" class=\"ant-select-not-found\">\r\n      <nz-embed-empty\r\n        [nzComponentName]=\"'tree-select'\"\r\n        [specificContent]=\"nzNotFoundContent\"\r\n      ></nz-embed-empty>\r\n    </span>\r\n  </div>\r\n</ng-template>\r\n\r\n<div\r\n  cdkOverlayOrigin\r\n  class=\"ant-select-selection\"\r\n  [class.ant-select-selection--single]=\"!isMultiple\"\r\n  [class.ant-select-selection--multiple]=\"isMultiple\"\r\n  tabindex=\"0\"\r\n>\r\n  <ng-container *ngIf=\"!isMultiple\">\r\n    <div class=\"ant-select-selection__rendered\">\r\n      <div\r\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\r\n        [style.display]=\"placeHolderDisplay\"\r\n        class=\"ant-select-selection__placeholder\"\r\n      >\r\n        {{ nzPlaceHolder }}\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"selectedNodes.length === 1\"\r\n        class=\"ant-select-selection-selected-value\"\r\n        [attr.title]=\"nzDisplayWith(selectedNodes[0])\"\r\n        [ngStyle]=\"selectedValueDisplay\"\r\n      >\r\n        {{ nzDisplayWith(selectedNodes[0]) }}\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"nzShowSearch\"\r\n        [style.display]=\"searchDisplay\"\r\n        class=\"ant-select-search ant-select-search--inline\"\r\n      >\r\n        <div class=\"ant-select-search__field__wrap\">\r\n          <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\r\n          <span class=\"ant-select-search__field__mirror\">{{ inputValue }}&nbsp;</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"isMultiple\">\r\n    <ul class=\"ant-select-selection__rendered\">\r\n      <div\r\n        *ngIf=\"nzPlaceHolder && selectedNodes.length === 0\"\r\n        [style.display]=\"placeHolderDisplay\"\r\n        class=\"ant-select-selection__placeholder\"\r\n      >\r\n        {{ nzPlaceHolder }}\r\n      </div>\r\n      <ng-container\r\n        *ngFor=\"let node of selectedNodes | slice: 0:nzMaxTagCount; trackBy: trackValue\"\r\n      >\r\n        <li\r\n          [@zoomMotion]\r\n          [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n          [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\r\n          [attr.title]=\"nzDisplayWith(node)\"\r\n          [class.ant-select-selection__choice__disabled]=\"node.isDisabled\"\r\n          class=\"ant-select-selection__choice\"\r\n        >\r\n          <span\r\n            *ngIf=\"!node.isDisabled\"\r\n            class=\"ant-select-selection__choice__remove\"\r\n            (mousedown)=\"$event.preventDefault()\"\r\n            (click)=\"removeSelected(node, true, $event)\"\r\n          >\r\n            <i nz-icon nzType=\"close\" class=\"ant-select-remove-icon\"></i>\r\n          </span>\r\n          <span class=\"ant-select-selection__choice__content\">{{ nzDisplayWith(node) }}</span>\r\n        </li>\r\n      </ng-container>\r\n      <li\r\n        [@zoomMotion]\r\n        *ngIf=\"selectedNodes.length > nzMaxTagCount\"\r\n        class=\"ant-select-selection__choice\"\r\n      >\r\n        <div class=\"ant-select-selection__choice__content\">\r\n          <ng-container *ngIf=\"nzMaxTagPlaceholder\">\r\n            <ng-template\r\n              [ngTemplateOutlet]=\"nzMaxTagPlaceholder\"\r\n              [ngTemplateOutletContext]=\"{ $implicit: selectedNodes | slice: nzMaxTagCount }\"\r\n            >\r\n            </ng-template>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"!nzMaxTagPlaceholder\">\r\n            + {{ selectedNodes.length - nzMaxTagCount }} ...\r\n          </ng-container>\r\n        </div>\r\n      </li>\r\n      <li class=\"ant-select-search ant-select-search--inline\">\r\n        <ng-template [ngTemplateOutlet]=\"inputTemplate\"></ng-template>\r\n      </li>\r\n    </ul>\r\n  </ng-container>\r\n  <span\r\n    *ngIf=\"nzAllowClear\"\r\n    class=\"ant-select-selection__clear\"\r\n    (mousedown)=\"$event.preventDefault()\"\r\n    (click)=\"onClearSelection($event)\"\r\n  >\r\n    <i nz-icon nzType=\"close-circle\" class=\"ant-select-clear-icon\" nzTheme=\"fill\"></i>\r\n  </span>\r\n  <span *ngIf=\"!isMultiple\" class=\"ant-select-arrow\">\r\n    <i nz-icon nzType=\"down\" class=\"ant-select-arrow-icon\"></i>\r\n  </span>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { BACKSPACE } from '@angular/cdk/keycodes';\r\nimport { CdkConnectedOverlay, CdkOverlayOrigin, ConnectedOverlayPositionChange } from '@angular/cdk/overlay';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Host,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  Renderer2,\r\n  Self,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { merge, of as observableOf, Subscription } from 'rxjs';\r\nimport { filter, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n  InputBoolean,\r\n  isNotNil,\r\n  NzConfigService,\r\n  NzFormatEmitEvent,\r\n  NzNoAnimationDirective,\r\n  NzSizeLDSType,\r\n  NzTreeBase,\r\n  NzTreeBaseService,\r\n  NzTreeHigherOrderServiceToken,\r\n  NzTreeNode,\r\n  NzTreeNodeOptions,\r\n  slideMotion,\r\n  warnDeprecation,\r\n  WithConfig,\r\n  zoomMotion\r\n} from 'ng-zorro-antd/core';\r\nimport { NzTreeComponent } from 'ng-zorro-antd/tree';\r\n\r\nimport { NzTreeSelectService } from './nz-tree-select.service';\r\n\r\nexport function higherOrderServiceFactory(injector: Injector): NzTreeBaseService {\r\n  return injector.get(NzTreeSelectService);\r\n}\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'treeSelect';\r\n\r\n@Component({\r\n  selector: 'nz-tree-select',\r\n  exportAs: 'nzTreeSelect',\r\n  animations: [slideMotion, zoomMotion],\r\n  templateUrl: './nz-tree-select.component.html',\r\n  providers: [\r\n    NzTreeSelectService,\r\n    {\r\n      provide: NzTreeHigherOrderServiceToken,\r\n      useFactory: higherOrderServiceFactory,\r\n      deps: [[new Self(), Injector]]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NzTreeSelectComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  host: {\r\n    '[class.ant-select-lg]': 'nzSize===\"large\"',\r\n    '[class.ant-select-sm]': 'nzSize===\"small\"',\r\n    '[class.ant-select-enabled]': '!nzDisabled',\r\n    '[class.ant-select-disabled]': 'nzDisabled',\r\n    '[class.ant-select-allow-clear]': 'nzAllowClear',\r\n    '[class.ant-select-open]': 'nzOpen',\r\n    '(click)': 'trigger()'\r\n  },\r\n  styles: [\r\n    `\r\n      .ant-select-dropdown {\r\n        top: 100%;\r\n        left: 0;\r\n        position: relative;\r\n        width: 100%;\r\n        margin-top: 4px;\r\n        margin-bottom: 4px;\r\n        overflow: auto;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzTreeSelectComponent extends NzTreeBase implements ControlValueAccessor, OnInit, OnDestroy, OnChanges {\r\n  @Input() @InputBoolean() nzAllowClear: boolean = true;\r\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\r\n  @Input() @InputBoolean() nzShowLine: boolean = false;\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) nzDropdownMatchSelectWidth: boolean;\r\n  @Input() @InputBoolean() nzCheckable: boolean = false;\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzHideUnMatched: boolean;\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzShowIcon: boolean;\r\n  @Input() @InputBoolean() nzShowSearch: boolean = false;\r\n  @Input() @InputBoolean() nzDisabled = false;\r\n  @Input() @InputBoolean() nzAsyncData = false;\r\n  @Input() @InputBoolean() nzMultiple = false;\r\n  @Input() @InputBoolean() nzDefaultExpandAll = false;\r\n  @Input() @InputBoolean() nzCheckStrictly = false;\r\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() nzNotFoundContent: string;\r\n  @Input() nzNodes: Array<NzTreeNode | NzTreeNodeOptions> = [];\r\n  @Input() nzOpen = false;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzSizeLDSType;\r\n  @Input() nzPlaceHolder = '';\r\n  @Input() nzDropdownStyle: { [key: string]: string };\r\n  /**\r\n   * @deprecated 9.0.0 - use `nzExpandedKeys` instead.\r\n   */\r\n  @Input()\r\n  set nzDefaultExpandedKeys(value: string[]) {\r\n    warnDeprecation(`'nzDefaultExpandedKeys' would be removed in 9.0.0. Please use 'nzExpandedKeys' instead.`);\r\n    this.expandedKeys = value;\r\n  }\r\n  get nzDefaultExpandedKeys(): string[] {\r\n    return this.expandedKeys;\r\n  }\r\n\r\n  @Input()\r\n  set nzExpandedKeys(value: string[]) {\r\n    this.expandedKeys = value;\r\n  }\r\n  get nzExpandedKeys(): string[] {\r\n    return this.expandedKeys;\r\n  }\r\n\r\n  @Input() nzDisplayWith: (node: NzTreeNode) => string | undefined = (node: NzTreeNode) => node.title;\r\n  @Input() nzMaxTagCount: number;\r\n  @Input() nzMaxTagPlaceholder: TemplateRef<{ $implicit: NzTreeNode[] }>;\r\n  @Output() readonly nzOpenChange = new EventEmitter<boolean>();\r\n  @Output() readonly nzCleared = new EventEmitter<void>();\r\n  @Output() readonly nzRemoved = new EventEmitter<NzTreeNode>();\r\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzTreeClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzTreeCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @ViewChild('inputElement', { static: false }) inputElement: ElementRef<HTMLInputElement>;\r\n  @ViewChild('treeRef', { static: false }) treeRef: NzTreeComponent;\r\n  @ViewChild(CdkOverlayOrigin, { static: true }) cdkOverlayOrigin: CdkOverlayOrigin;\r\n  @ViewChild(CdkConnectedOverlay, { static: false }) cdkConnectedOverlay: CdkConnectedOverlay;\r\n\r\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode }> {\r\n    return this.nzTreeTemplate || this.nzTreeTemplateChild;\r\n  }\r\n\r\n  triggerWidth: number;\r\n  isComposing = false;\r\n  isDestroy = true;\r\n  isNotFound = false;\r\n  inputValue = '';\r\n  dropDownPosition: 'top' | 'center' | 'bottom' = 'bottom';\r\n  selectionChangeSubscription: Subscription;\r\n  selectedNodes: NzTreeNode[] = [];\r\n  expandedKeys: string[] = [];\r\n  value: string[] = [];\r\n\r\n  onChange: (value: string[] | string | null) => void;\r\n  onTouched: () => void = () => null;\r\n\r\n  get placeHolderDisplay(): string {\r\n    return this.inputValue || this.isComposing || this.selectedNodes.length ? 'none' : 'block';\r\n  }\r\n\r\n  get searchDisplay(): string {\r\n    return this.nzOpen ? 'block' : 'none';\r\n  }\r\n\r\n  get isMultiple(): boolean {\r\n    return this.nzMultiple || this.nzCheckable;\r\n  }\r\n\r\n  get selectedValueDisplay(): { [key: string]: string } {\r\n    let showSelectedValue = false;\r\n    let opacity = 1;\r\n    if (!this.nzShowSearch) {\r\n      showSelectedValue = true;\r\n    } else {\r\n      if (this.nzOpen) {\r\n        showSelectedValue = !(this.inputValue || this.isComposing);\r\n        if (showSelectedValue) {\r\n          opacity = 0.4;\r\n        }\r\n      } else {\r\n        showSelectedValue = true;\r\n      }\r\n    }\r\n    return {\r\n      display: showSelectedValue ? 'block' : 'none',\r\n      opacity: `${opacity}`\r\n    };\r\n  }\r\n\r\n  constructor(\r\n    nzTreeService: NzTreeSelectService,\r\n    public nzConfigService: NzConfigService,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef,\r\n    private elementRef: ElementRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(nzTreeService);\r\n    this.renderer.addClass(this.elementRef.nativeElement, 'ant-select');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isDestroy = false;\r\n    this.selectionChangeSubscription = this.subscribeSelectionChange();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isDestroy = true;\r\n    this.closeDropDown();\r\n    this.selectionChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.nzDisabled = isDisabled;\r\n    this.closeDropDown();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('nzNodes')) {\r\n      this.updateSelectedNodes(true);\r\n    }\r\n  }\r\n\r\n  writeValue(value: string[] | string): void {\r\n    if (isNotNil(value)) {\r\n      if (this.isMultiple && Array.isArray(value)) {\r\n        this.value = value;\r\n      } else {\r\n        this.value = [value as string];\r\n      }\r\n      this.updateSelectedNodes(true);\r\n    } else {\r\n      this.value = [];\r\n      this.selectedNodes.forEach(node => {\r\n        this.removeSelected(node, false);\r\n      });\r\n      this.selectedNodes = [];\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: (_: string[] | string | null) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  trigger(): void {\r\n    if (this.nzDisabled || (!this.nzDisabled && this.nzOpen)) {\r\n      this.closeDropDown();\r\n    } else {\r\n      this.openDropdown();\r\n      if (this.nzShowSearch || this.isMultiple) {\r\n        this.focusOnInput();\r\n      }\r\n    }\r\n  }\r\n\r\n  openDropdown(): void {\r\n    if (!this.nzDisabled) {\r\n      this.nzOpen = true;\r\n      this.nzOpenChange.emit(this.nzOpen);\r\n      this.updateCdkConnectedOverlayStatus();\r\n      this.updatePosition();\r\n    }\r\n  }\r\n\r\n  closeDropDown(): void {\r\n    this.onTouched();\r\n    this.nzOpen = false;\r\n    this.nzOpenChange.emit(this.nzOpen);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  onKeyDownInput(e: KeyboardEvent): void {\r\n    const keyCode = e.keyCode;\r\n    const eventTarget = e.target as HTMLInputElement;\r\n    if (this.isMultiple && !eventTarget.value && keyCode === BACKSPACE) {\r\n      e.preventDefault();\r\n      if (this.selectedNodes.length) {\r\n        const removeNode = this.selectedNodes[this.selectedNodes.length - 1];\r\n        this.removeSelected(removeNode);\r\n        this.nzTreeService!.triggerEventChange$!.next({\r\n          eventName: 'removeSelect',\r\n          node: removeNode\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onExpandedKeysChange(value: NzFormatEmitEvent): void {\r\n    this.nzExpandChange.emit(value);\r\n    this.expandedKeys = [...value.keys!];\r\n  }\r\n\r\n  setInputValue(value: string): void {\r\n    this.inputValue = value;\r\n    this.updateInputWidth();\r\n    this.updatePosition();\r\n  }\r\n\r\n  removeSelected(node: NzTreeNode, emit: boolean = true, event?: MouseEvent): void {\r\n    node.isSelected = false;\r\n    node.isChecked = false;\r\n    if (this.nzCheckable) {\r\n      this.nzTreeService.conduct(node);\r\n    } else {\r\n      this.nzTreeService.setSelectedNodeList(node, this.nzMultiple);\r\n    }\r\n\r\n    if (emit) {\r\n      this.nzRemoved.emit(node);\r\n    }\r\n\r\n    // Do not trigger the popup\r\n    if (event && event.stopPropagation) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  focusOnInput(): void {\r\n    setTimeout(() => {\r\n      if (this.inputElement) {\r\n        this.inputElement.nativeElement.focus();\r\n      }\r\n    });\r\n  }\r\n\r\n  subscribeSelectionChange(): Subscription {\r\n    return merge(\r\n      this.nzTreeClick.pipe(\r\n        tap((event: NzFormatEmitEvent) => {\r\n          const node = event.node!;\r\n          if (this.nzCheckable && !node.isDisabled && !node.isDisableCheckbox) {\r\n            node.isChecked = !node.isChecked;\r\n            node.isHalfChecked = false;\r\n            if (!this.nzCheckStrictly) {\r\n              this.nzTreeService.conduct(node);\r\n            }\r\n          }\r\n          if (this.nzCheckable) {\r\n            node.isSelected = false;\r\n          }\r\n        }),\r\n        filter((event: NzFormatEmitEvent) => {\r\n          const node = event.node!;\r\n          return this.nzCheckable ? !node.isDisabled && !node.isDisableCheckbox : !node.isDisabled && node.isSelectable;\r\n        })\r\n      ),\r\n      this.nzCheckable ? this.nzTreeCheckBoxChange : observableOf(),\r\n      this.nzCleared,\r\n      this.nzRemoved\r\n    ).subscribe(() => {\r\n      this.updateSelectedNodes();\r\n      const value = this.selectedNodes.map(node => node.key!);\r\n      this.value = [...value];\r\n      if (this.nzShowSearch || this.isMultiple) {\r\n        this.inputValue = '';\r\n        this.isNotFound = false;\r\n      }\r\n      if (this.isMultiple) {\r\n        this.onChange(value);\r\n        this.focusOnInput();\r\n        this.updatePosition();\r\n      } else {\r\n        this.closeDropDown();\r\n        this.onChange(value.length ? value[0] : null);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateSelectedNodes(init: boolean = false): void {\r\n    if (init) {\r\n      const nodes = this.coerceTreeNodes(this.nzNodes);\r\n      this.nzTreeService.isMultiple = this.isMultiple;\r\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\r\n      this.nzTreeService.initTree(nodes);\r\n      if (this.nzCheckable) {\r\n        this.nzTreeService.calcCheckedKeys(this.value, nodes, this.nzCheckStrictly);\r\n      } else {\r\n        this.nzTreeService.calcSelectedKeys(this.value, nodes, this.isMultiple);\r\n      }\r\n    }\r\n\r\n    this.selectedNodes = [...(this.nzCheckable ? this.getCheckedNodeList() : this.getSelectedNodeList())];\r\n  }\r\n\r\n  updatePosition(): void {\r\n    setTimeout(() => {\r\n      if (this.cdkConnectedOverlay && this.cdkConnectedOverlay.overlayRef) {\r\n        this.cdkConnectedOverlay.overlayRef.updatePosition();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\r\n    this.dropDownPosition = position.connectionPair.originY;\r\n  }\r\n\r\n  updateInputWidth(): void {\r\n    if (this.isMultiple && this.inputElement) {\r\n      if (this.inputValue || this.isComposing) {\r\n        this.renderer.setStyle(this.inputElement.nativeElement, 'width', `${this.inputElement.nativeElement.scrollWidth}px`);\r\n      } else {\r\n        this.renderer.removeStyle(this.inputElement.nativeElement, 'width');\r\n      }\r\n    }\r\n  }\r\n\r\n  onClearSelection($event: MouseEvent): void {\r\n    $event.stopPropagation();\r\n    $event.preventDefault();\r\n    this.selectedNodes.forEach(node => {\r\n      this.removeSelected(node, false);\r\n    });\r\n    this.nzCleared.emit();\r\n  }\r\n\r\n  setSearchValues($event: NzFormatEmitEvent): void {\r\n    Promise.resolve().then(() => {\r\n      this.isNotFound = (this.nzShowSearch || this.isMultiple) && !!this.inputValue && $event.matchedKeys!.length === 0;\r\n    });\r\n  }\r\n\r\n  updateCdkConnectedOverlayStatus(): void {\r\n    this.triggerWidth = this.cdkOverlayOrigin.elementRef.nativeElement.getBoundingClientRect().width;\r\n  }\r\n\r\n  trackValue(_index: number, option: NzTreeNode): string {\r\n    return option.key!;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NzNoAnimationModule, NzOverlayModule } from 'ng-zorro-antd/core';\r\nimport { NzEmptyModule } from 'ng-zorro-antd/empty';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\nimport { NzTreeModule } from 'ng-zorro-antd/tree';\r\n\r\nimport { NzTreeSelectComponent } from './nz-tree-select.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OverlayModule, FormsModule, NzTreeModule, NzIconModule, NzEmptyModule, NzOverlayModule, NzNoAnimationModule],\r\n  declarations: [NzTreeSelectComponent],\r\n  exports: [NzTreeSelectComponent]\r\n})\r\nexport class NzTreeSelectModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport * from './nz-tree-select.component';\r\nexport * from './nz-tree-select.module';\r\nexport * from './nz-tree-select.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","i0.ɵɵproperty","i0.ɵɵelement","i0.ɵɵadvance","i0.ɵɵtemplate","i0.ɵɵclassProp","i0.ɵɵtext","i0.ɵɵstyleProp","i0.ɵɵtextInterpolate1","i0.ɵɵattribute","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate","observableOf"],"mappings":"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"}