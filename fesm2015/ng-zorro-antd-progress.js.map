{"version":3,"file":"ng-zorro-antd-progress.js","sources":["ng://ng-zorro-antd/progress/nz-progress-utils.ts","ng://ng-zorro-antd/progress/nz-progress.component.html","ng://ng-zorro-antd/progress/nz-progress.component.ts","ng://ng-zorro-antd/progress/nz-progress.module.ts","ng://ng-zorro-antd/progress/public-api.ts","ng://ng-zorro-antd/progress/ng-zorro-antd-progress.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NzProgressColorGradient, NzProgressGradientProgress } from './nz-progress.definitions';\r\n\r\nfunction stripPercentToNumber(percent: string): number {\r\n  return +percent.replace('%', '');\r\n}\r\n\r\nexport const sortGradient = (gradients: NzProgressGradientProgress) => {\r\n  let tempArr: Array<{ key: number; value: string }> = [];\r\n\r\n  Object.keys(gradients).forEach(key => {\r\n    const value = gradients[key];\r\n    const formatKey = stripPercentToNumber(key);\r\n    if (!isNaN(formatKey)) {\r\n      tempArr.push({\r\n        key: formatKey,\r\n        value\r\n      });\r\n    }\r\n  });\r\n\r\n  tempArr = tempArr.sort((a, b) => a.key - b.key);\r\n  return tempArr;\r\n};\r\n\r\nexport const handleCircleGradient = (strokeColor: NzProgressGradientProgress): Array<{ offset: string; color: string }> => {\r\n  return sortGradient(strokeColor).map(({ key, value }) => ({ offset: `${key}%`, color: value }));\r\n};\r\n\r\nexport const handleLinearGradient = (strokeColor: NzProgressColorGradient) => {\r\n  const { from = '#1890ff', to = '#1890ff', direction = 'to right', ...rest } = strokeColor;\r\n  if (Object.keys(rest).length !== 0) {\r\n    const sortedGradients = sortGradient(rest as NzProgressGradientProgress)\r\n      .map(({ key, value }) => `${value} ${key}%`)\r\n      .join(', ');\r\n    return `linear-gradient(${direction}, ${sortedGradients})`;\r\n  }\r\n  return `linear-gradient(${direction}, ${from}, ${to})`;\r\n};\r\n","<ng-template #progressInfoTemplate>\r\n  <span class=\"ant-progress-text\" *ngIf=\"nzShowInfo\">\r\n    <ng-container\r\n      *ngIf=\"status === 'exception' || (status === 'success' && !nzFormat); else formatTemplate\"\r\n    >\r\n      <i nz-icon [nzType]=\"icon\"></i>\r\n    </ng-container>\r\n    <ng-template #formatTemplate>\r\n      {{ formatter(nzPercent) }}\r\n    </ng-template>\r\n  </span>\r\n</ng-template>\r\n\r\n<div\r\n  [ngClass]=\"'ant-progress ant-progress-status-' + status\"\r\n  [class.ant-progress-line]=\"nzType == 'line'\"\r\n  [class.ant-progress-small]=\"nzSize == 'small'\"\r\n  [class.ant-progress-show-info]=\"nzShowInfo\"\r\n  [class.ant-progress-circle]=\"isCircleStyle\"\r\n>\r\n  <!-- line progress -->\r\n  <div *ngIf=\"nzType === 'line'\">\r\n    <div class=\"ant-progress-outer\">\r\n      <div class=\"ant-progress-inner\">\r\n        <div\r\n          class=\"ant-progress-bg\"\r\n          [style.width.%]=\"nzPercent\"\r\n          [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\r\n          [style.background]=\"!isGradient ? nzStrokeColor : null\"\r\n          [style.background-image]=\"isGradient ? lineGradient : null\"\r\n          [style.height.px]=\"strokeWidth\"\r\n        ></div>\r\n        <div\r\n          *ngIf=\"nzSuccessPercent || nzSuccessPercent === 0\"\r\n          class=\"ant-progress-success-bg\"\r\n          [style.width.%]=\"nzSuccessPercent\"\r\n          [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\r\n          [style.height.px]=\"strokeWidth\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n    <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\r\n  </div>\r\n\r\n  <!-- circle / dashboard progress -->\r\n  <div\r\n    [style.width.px]=\"this.nzWidth\"\r\n    [style.height.px]=\"this.nzWidth\"\r\n    [style.fontSize.px]=\"this.nzWidth * 0.15 + 6\"\r\n    class=\"ant-progress-inner\"\r\n    [class.ant-progress-circle-gradient]=\"isGradient\"\r\n    *ngIf=\"isCircleStyle\"\r\n  >\r\n    <svg class=\"ant-progress-circle \" viewBox=\"0 0 100 100\">\r\n      <defs *ngIf=\"isGradient\">\r\n        <linearGradient [id]=\"'gradient-' + gradientId\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\r\n          <stop\r\n            *ngFor=\"let i of circleGradient\"\r\n            [attr.offset]=\"i.offset\"\r\n            [attr.stop-color]=\"i.color\"\r\n          ></stop>\r\n        </linearGradient>\r\n      </defs>\r\n      <path\r\n        class=\"ant-progress-circle-trail\"\r\n        stroke=\"#f3f3f3\"\r\n        fill-opacity=\"0\"\r\n        [attr.stroke-width]=\"strokeWidth\"\r\n        [attr.d]=\"pathString\"\r\n        [ngStyle]=\"trailPathStyle\"\r\n      ></path>\r\n      <path\r\n        *ngFor=\"let p of progressCirclePath; trackBy: trackByFn\"\r\n        class=\"ant-progress-circle-path\"\r\n        fill-opacity=\"0\"\r\n        [attr.d]=\"pathString\"\r\n        [attr.stroke-linecap]=\"nzStrokeLinecap\"\r\n        [attr.stroke]=\"p.stroke\"\r\n        [attr.stroke-width]=\"nzPercent ? strokeWidth : 0\"\r\n        [ngStyle]=\"p.strokePathStyle\"\r\n      ></path>\r\n    </svg>\r\n    <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\r\n  </div>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { InputNumber, isNotNil, NgStyleInterface, NzConfigService, WithConfig } from 'ng-zorro-antd/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { handleCircleGradient, handleLinearGradient } from './nz-progress-utils';\r\nimport {\r\n  NzProgressCirclePath,\r\n  NzProgressColorGradient,\r\n  NzProgressFormatter,\r\n  NzProgressGapPositionType,\r\n  NzProgressGradientProgress,\r\n  NzProgressStatusType,\r\n  NzProgressStrokeColorType,\r\n  NzProgressStrokeLinecapType,\r\n  NzProgressTypeType\r\n} from './nz-progress.definitions';\r\n\r\nlet gradientIdSeed = 0;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'progress';\r\nconst statusIconNameMap = new Map([\r\n  ['success', 'check'],\r\n  ['exception', 'close']\r\n]);\r\nconst statusColorMap = new Map([\r\n  ['normal', '#108ee9'],\r\n  ['exception', '#ff5500'],\r\n  ['success', '#87d068']\r\n]);\r\nconst defaultFormatter: NzProgressFormatter = (p: number): string => `${p}%`;\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-progress',\r\n  exportAs: 'nzProgress',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-progress.component.html'\r\n})\r\nexport class NzProgressComponent implements OnChanges, OnInit, OnDestroy {\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) nzShowInfo: boolean;\r\n  @Input() nzWidth = 132;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzStrokeColor: NzProgressStrokeColorType;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: 'default' | 'small';\r\n  @Input() nzFormat?: NzProgressFormatter;\r\n  @Input() @InputNumber() nzSuccessPercent?: number;\r\n  @Input() @InputNumber() nzPercent: number = 0;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzStrokeWidth: number;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzGapDegree: number;\r\n  @Input() nzStatus: NzProgressStatusType;\r\n  @Input() nzType: NzProgressTypeType = 'line';\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'top') nzGapPosition: NzProgressGapPositionType;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'round') nzStrokeLinecap: NzProgressStrokeLinecapType;\r\n\r\n  /** Gradient style when `nzType` is `line`. */\r\n  lineGradient: string | null = null;\r\n\r\n  /** If user uses gradient color. */\r\n  isGradient = false;\r\n\r\n  /**\r\n   * Each progress whose `nzType` is circle or dashboard should have unique id to\r\n   * define `<linearGradient>`.\r\n   */\r\n  gradientId = gradientIdSeed++;\r\n\r\n  /** Paths to rendered in the template. */\r\n  progressCirclePath: NzProgressCirclePath[] = [];\r\n\r\n  circleGradient: Array<{ offset: string; color: string }>;\r\n\r\n  trailPathStyle: NgStyleInterface;\r\n\r\n  pathString: string;\r\n\r\n  icon: string;\r\n\r\n  trackByFn = (index: number) => `${index}`;\r\n\r\n  get formatter(): NzProgressFormatter {\r\n    return this.nzFormat || defaultFormatter;\r\n  }\r\n\r\n  get status(): NzProgressStatusType {\r\n    return this.nzStatus || this.inferredStatus;\r\n  }\r\n\r\n  get strokeWidth(): number {\r\n    return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\r\n  }\r\n\r\n  get isCircleStyle(): boolean {\r\n    return this.nzType === 'circle' || this.nzType === 'dashboard';\r\n  }\r\n\r\n  private cachedStatus: NzProgressStatusType = 'normal';\r\n  private inferredStatus: NzProgressStatusType = 'normal';\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(public nzConfigService: NzConfigService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzGapPosition, nzStrokeLinecap, nzStrokeColor, nzGapDegree, nzType, nzStatus, nzPercent, nzSuccessPercent } = changes;\r\n\r\n    if (nzStatus) {\r\n      this.cachedStatus = this.nzStatus || this.cachedStatus;\r\n    }\r\n\r\n    if (nzPercent || nzSuccessPercent) {\r\n      const fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\r\n      if (fillAll) {\r\n        if ((isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent! >= 100) || this.nzSuccessPercent === undefined) {\r\n          this.inferredStatus = 'success';\r\n        }\r\n      } else {\r\n        this.inferredStatus = this.cachedStatus;\r\n      }\r\n    }\r\n\r\n    if (nzStatus || nzPercent || nzSuccessPercent) {\r\n      this.updateIcon();\r\n    }\r\n\r\n    if (nzStrokeColor) {\r\n      this.setStrokeColor();\r\n    }\r\n\r\n    if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor) {\r\n      this.getCirclePaths();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.nzConfigService\r\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.updateIcon();\r\n        this.setStrokeColor();\r\n        this.getCirclePaths();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private updateIcon(): void {\r\n    const ret = statusIconNameMap.get(this.status);\r\n    this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\r\n  }\r\n\r\n  /**\r\n   * Calculate paths when the type is circle or dashboard.\r\n   */\r\n  private getCirclePaths(): void {\r\n    if (!this.isCircleStyle) {\r\n      return;\r\n    }\r\n\r\n    const values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent!, this.nzPercent] : [this.nzPercent];\r\n\r\n    // Calculate shared styles.\r\n    const radius = 50 - this.strokeWidth / 2;\r\n    const gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\r\n    const len = Math.PI * 2 * radius;\r\n    const gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\r\n\r\n    let beginPositionX = 0;\r\n    let beginPositionY = -radius;\r\n    let endPositionX = 0;\r\n    let endPositionY = radius * -2;\r\n\r\n    switch (gapPosition) {\r\n      case 'left':\r\n        beginPositionX = -radius;\r\n        beginPositionY = 0;\r\n        endPositionX = radius * 2;\r\n        endPositionY = 0;\r\n        break;\r\n      case 'right':\r\n        beginPositionX = radius;\r\n        beginPositionY = 0;\r\n        endPositionX = radius * -2;\r\n        endPositionY = 0;\r\n        break;\r\n      case 'bottom':\r\n        beginPositionY = radius;\r\n        endPositionY = radius * 2;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    this.pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\r\n       a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\r\n       a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\r\n\r\n    this.trailPathStyle = {\r\n      strokeDasharray: `${len - gapDegree}px ${len}px`,\r\n      strokeDashoffset: `-${gapDegree / 2}px`,\r\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\r\n    };\r\n\r\n    // Calculate styles for each path.\r\n    this.progressCirclePath = values\r\n      .map((value, index) => {\r\n        const isSuccessPercent = values.length === 2 && index === 0;\r\n        return {\r\n          stroke: this.isGradient && !isSuccessPercent ? `url(#gradient-${this.gradientId})` : null,\r\n          strokePathStyle: {\r\n            stroke: !this.isGradient ? (isSuccessPercent ? statusColorMap.get('success') : (this.nzStrokeColor as string)) : null,\r\n            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\r\n            strokeDasharray: `${((value || 0) / 100) * (len - gapDegree)}px ${len}px`,\r\n            strokeDashoffset: `-${gapDegree / 2}px`\r\n          }\r\n        };\r\n      })\r\n      .reverse();\r\n  }\r\n\r\n  private setStrokeColor(): void {\r\n    const color = this.nzStrokeColor;\r\n    const isGradient = (this.isGradient = !!color && typeof color !== 'string');\r\n    if (isGradient && !this.isCircleStyle) {\r\n      this.lineGradient = handleLinearGradient(color as NzProgressColorGradient);\r\n    } else if (isGradient && this.isCircleStyle) {\r\n      this.circleGradient = handleCircleGradient(this.nzStrokeColor as NzProgressGradientProgress);\r\n    } else {\r\n      this.lineGradient = null;\r\n      this.circleGradient = [];\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzProgressComponent } from './nz-progress.component';\r\n\r\n@NgModule({\r\n  exports: [NzProgressComponent],\r\n  declarations: [NzProgressComponent],\r\n  imports: [CommonModule, NzIconModule]\r\n})\r\nexport class NzProgressModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport { NzProgressModule } from './nz-progress.module';\r\nexport { NzProgressComponent } from './nz-progress.component';\r\nexport * from './nz-progress.definitions';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵstyleSanitizer","i0.ɵɵattribute","i0.ɵɵnamespaceSVG","i0.ɵɵclassProp"],"mappings":";;;;;;;;AAAA;;;;;;;AAUA,SAAS,oBAAoB,CAAC,OAAe;IAC3C,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;CAClC;AAED,AAAO,MAAM,YAAY,GAAG,CAAC,SAAqC;IAChE,IAAI,OAAO,GAA0C,EAAE,CAAC;IAExD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG;QAChC,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,SAAS,GAAG,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACrB,OAAO,CAAC,IAAI,CAAC;gBACX,GAAG,EAAE,SAAS;gBACd,KAAK;aACN,CAAC,CAAC;SACJ;KACF,CAAC,CAAC;IAEH,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD,OAAO,OAAO,CAAC;CAChB,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAG,CAAC,WAAuC;IAC1E,OAAO,YAAY,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;CACjG,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAAG,CAAC,WAAoC;IACvE,MAAM,EAAE,IAAI,GAAG,SAAS,EAAE,EAAE,GAAG,SAAS,EAAE,SAAS,GAAG,UAAU,KAAc,WAAW,EAAvB,uDAAuB,CAAC;IAC1F,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QAClC,MAAM,eAAe,GAAG,YAAY,CAAC,IAAkC,CAAC;aACrE,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,IAAI,GAAG,GAAG,CAAC;aAC3C,IAAI,CAAC,IAAI,CAAC,CAAC;QACd,OAAO,mBAAmB,SAAS,KAAK,eAAe,GAAG,CAAC;KAC5D;IACD,OAAO,mBAAmB,SAAS,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC;CACxD,CAAC;;;IC3CEA,0BAGE;IAAAC,oBAA+B;IACjCC,uBAAe;;;IADFC,YAAe;IAAfC,mCAAe;;;IAG1BC,SACF;;;IADEC,oEACF;;;IARFC,4BACE;IAAAC,wGAGE;IAEFA,oIACE;IAEJC,cAAO;;;;IAPHN,YAA0F;IAA1FC,0GAA0F,mBAAA;;;IAF9FI,iFACE;;;IAD8BJ,uCAAkB;;;IA+B5CH,uBAMO;;;IAHLS,oDAAkC,uEAAA,sCAAA;;;;IAd1CH,wBACE;IAAAA,2BACE;IAAAA,4BACE;IAAAN,uBAOO;IACPO,wEAMC;IACHC,cAAM;IACRA,cAAM;IACND,wFAAuD;IACzDC,cAAM;;;;IAhBEN,YAA2B;IAA3BQ,yCAA2B;IAA3BD,6CAA2B,uEAAA,oEAAA,wEAAA,sCAAA;IAO3BP,YAAkD;IAAlDC,gFAAkD;IAQ3CD,YAAyC;IAAzCC,qCAAyC;;;;IAehDH,oBAIQ;;;IAFNW,oCAAwB,4BAAA;;;;IAJ9BL,yBACE;IAAAA,uCACE;IAAAC,2FAIC;IACHC,cAAiB;IACnBA,cAAO;;;IAPWN,YAA+B;IAA/BC,mDAA+B;IAE3CD,YAAgC;IAAhCC,8CAAgC;;;;IActCH,wBASQ;;;;IADNG,6CAA6B;IAJ7BQ,qCAAqB,4CAAA,yBAAA,+DAAA;;;;;;IA9B3BL,4BAQE;IAAAM,gBACE;IADFN,4BACE;IAAAC,8EACE;IAQFP,wBAOQ;IACRO,+EASC;IACHC,cAAM;IACND,wFAAuD;IACzDC,cAAM;;;;IArCJC,4CAA+B,kCAAA,gDAAA;IAI/BI,gEAAiD;IAIzCX,YAAkB;IAAlBC,uCAAkB;IAetBD,YAA0B;IAA1BC,8CAA0B;IAF1BQ,iDAAiC,0BAAA;IAKjCT,YAAwD;IAAxDC,kDAAwD,oCAAA;IAU/CD,YAAyC;IAAzCC,qCAAyC;;ACvD1D,IAAI,cAAc,GAAG,CAAC,CAAC;AAEvB,MAAM,wBAAwB,GAAG,UAAU,CAAC;AAC5C,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC;IAChC,CAAC,SAAS,EAAE,OAAO,CAAC;IACpB,CAAC,WAAW,EAAE,OAAO,CAAC;CACvB,CAAC,CAAC;AACH,MAAM,cAAc,GAAG,IAAI,GAAG,CAAC;IAC7B,CAAC,QAAQ,EAAE,SAAS,CAAC;IACrB,CAAC,WAAW,EAAE,SAAS,CAAC;IACxB,CAAC,SAAS,EAAE,SAAS,CAAC;CACvB,CAAC,CAAC;AACH,MAAM,gBAAgB,GAAwB,CAAC,CAAS,KAAa,GAAG,CAAC,GAAG,CAAC;AAU7E,MAAa,mBAAmB;IA4D9B,YAAmB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QA1D1C,YAAO,GAAG,GAAG,CAAC;QAKC,cAAS,GAAW,CAAC,CAAC;QAIrC,WAAM,GAAuB,MAAM,CAAC;;QAK7C,iBAAY,GAAkB,IAAI,CAAC;;QAGnC,eAAU,GAAG,KAAK,CAAC;;;;;QAMnB,eAAU,GAAG,cAAc,EAAE,CAAC;;QAG9B,uBAAkB,GAA2B,EAAE,CAAC;QAUhD,cAAS,GAAG,CAAC,KAAa,KAAK,GAAG,KAAK,EAAE,CAAC;QAkBlC,iBAAY,GAAyB,QAAQ,CAAC;QAC9C,mBAAc,GAAyB,QAAQ,CAAC;QAChD,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;KAEgB;IApBvD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,QAAQ,IAAI,gBAAgB,CAAC;KAC1C;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,CAAC;KAC7C;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC1F;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,WAAW,CAAC;KAChE;IAQD,WAAW,CAAC,OAAsB;QAChC,MAAM,EAAE,aAAa,EAAE,eAAe,EAAE,aAAa,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;QAE9H,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC;SACxD;QAED,IAAI,SAAS,IAAI,gBAAgB,EAAE;YACjC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,GAAG,CAAC;YAC/D,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC,gBAAiB,IAAI,GAAG,KAAK,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;oBAC7G,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC;iBACjC;aACF;iBAAM;gBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC;aACzC;SACF;QAED,IAAI,QAAQ,IAAI,SAAS,IAAI,gBAAgB,EAAE;YAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QAED,IAAI,aAAa,EAAE;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QAED,IAAI,aAAa,IAAI,eAAe,IAAI,WAAW,IAAI,MAAM,IAAI,SAAS,IAAI,aAAa,EAAE;YAC3F,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;KACF;IAED,QAAQ;QACN,IAAI,CAAC,eAAe;aACjB,gCAAgC,CAAC,wBAAwB,CAAC;aAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC;YACT,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB,CAAC,CAAC;KACN;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;IAEO,UAAU;QAChB,MAAM,GAAG,GAAG,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,cAAc,CAAC,GAAG,EAAE,CAAC;KAC3E;;;;IAKO,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,OAAO;SACR;QAED,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAG7G,MAAM,MAAM,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,MAAM,KAAK,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC;QACxF,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,MAAM,KAAK,QAAQ,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;QAE1E,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,cAAc,GAAG,CAAC,MAAM,CAAC;QAC7B,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;QAE/B,QAAQ,WAAW;YACjB,KAAK,MAAM;gBACT,cAAc,GAAG,CAAC,MAAM,CAAC;gBACzB,cAAc,GAAG,CAAC,CAAC;gBACnB,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC;gBAC1B,YAAY,GAAG,CAAC,CAAC;gBACjB,MAAM;YACR,KAAK,OAAO;gBACV,cAAc,GAAG,MAAM,CAAC;gBACxB,cAAc,GAAG,CAAC,CAAC;gBACnB,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC;gBAC3B,YAAY,GAAG,CAAC,CAAC;gBACjB,MAAM;YACR,KAAK,QAAQ;gBACX,cAAc,GAAG,MAAM,CAAC;gBACxB,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC;gBAC1B,MAAM;YACR,QAAQ;SACT;QAED,IAAI,CAAC,UAAU,GAAG,aAAa,cAAc,IAAI,cAAc;WACxD,MAAM,IAAI,MAAM,UAAU,YAAY,IAAI,CAAC,YAAY;WACvD,MAAM,IAAI,MAAM,UAAU,CAAC,YAAY,IAAI,YAAY,EAAE,CAAC;QAEjE,IAAI,CAAC,cAAc,GAAG;YACpB,eAAe,EAAE,GAAG,GAAG,GAAG,SAAS,MAAM,GAAG,IAAI;YAChD,gBAAgB,EAAE,IAAI,SAAS,GAAG,CAAC,IAAI;YACvC,UAAU,EAAE,yEAAyE;SACtF,CAAC;;QAGF,IAAI,CAAC,kBAAkB,GAAG,MAAM;aAC7B,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK;YAChB,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;YAC5D,OAAO;gBACL,MAAM,EAAE,IAAI,CAAC,UAAU,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,IAAI,CAAC,UAAU,GAAG,GAAG,IAAI;gBACzF,eAAe,EAAE;oBACf,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI,gBAAgB,GAAG,cAAc,CAAC,GAAG,CAAC,SAAS,CAAC,GAAI,IAAI,CAAC,aAAwB,IAAI,IAAI;oBACrH,UAAU,EAAE,qGAAqG;oBACjH,eAAe,EAAE,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,IAAI;oBACzE,gBAAgB,EAAE,IAAI,SAAS,GAAG,CAAC,IAAI;iBACxC;aACF,CAAC;SACH,CAAC;aACD,OAAO,EAAE,CAAC;KACd;IAEO,cAAc;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;QACjC,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC;QAC5E,IAAI,UAAU,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACrC,IAAI,CAAC,YAAY,GAAG,oBAAoB,CAAC,KAAgC,CAAC,CAAC;SAC5E;aAAM,IAAI,UAAU,IAAI,IAAI,CAAC,aAAa,EAAE;YAC3C,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,IAAI,CAAC,aAA2C,CAAC,CAAC;SAC9F;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;SAC1B;KACF;;sFAjMU,mBAAmB;wEAAA;QDjDhCI,+GACE;QAYFD,2BAOE;QACAC,iEACE;QAuBFA,kEAQE;QA+BJC,cAAM;;QArEJN,YAA4C;QAA5CW,sDAA4C,6CAAA,0CAAA,0CAAA;QAD5CV,uEAAwD;QAOnDD,YAAyB;QAAzBC,yCAAyB;QA8B5BD,YAAqB;QAArBC,qCAAqB;;ACD8B;IAA3C,UAAU,CAAC,wBAAwB,EAAE,IAAI,CAAC;;uDAAqB;AAE1B;IAArC,UAAU,CAAC,wBAAwB,CAAC;;0DAA0C;AAC9B;IAAhD,UAAU,CAAC,wBAAwB,EAAE,SAAS,CAAC;;mDAA6B;AAE9D;IAAd,WAAW,EAAE;;6DAA2B;AAC1B;IAAd,WAAW,EAAE;;sDAAuB;AACgB;IAApD,UAAU,CAAC,wBAAwB,CAAC,EAAE,WAAW,EAAE;;0DAAuB;AACtB;IAApD,UAAU,CAAC,wBAAwB,CAAC,EAAE,WAAW,EAAE;;wDAAqB;AAG5B;IAA5C,UAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC;;0DAA0C;AACvC;IAA9C,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC;;4DAA8C;+CAb1F,mBAAmB;cAR/B,SAAS;eAAC;gBACT,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,YAAY;gBACtB,mBAAmB,EAAE,KAAK;gBAC1B,WAAW,EAAE,8BAA8B;aAC5C;;kBAEE,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;kBACL,KAAK;;;AC9DR;;;;;;;AAQA,MAWa,gBAAgB;;;4GAAhB,mCAFD;qFAEC,gBAAgB,mBAHZ,mBAAmB,aACxB,YAAY,EAAE,YAAY,aAF1B,mBAAmB;+CAIlB,gBAAgB;cAL5B,QAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,YAAY,EAAE,YAAY,CAAC;aACtC;;;AClBD;;;;;;GAMG;;ACNH;;GAEG;;;;"}