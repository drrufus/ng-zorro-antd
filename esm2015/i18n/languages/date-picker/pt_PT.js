/**
 * @fileoverview added by tsickle
 * Generated from: languages/date-picker/pt_PT.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import CalendarLocale from '../calendar/pt_PT';
import TimePickerLocale from '../time-picker/pt_PT';
// Merge into a locale object
/** @type {?} */
const locale = {
    lang: Object.assign({}, CalendarLocale, { placeholder: 'Data', rangePlaceholder: ['Data inicial', 'Data final'], today: 'Hoje', now: 'Agora', backToToday: 'Hoje', ok: 'Ok', clear: 'Limpar', month: 'Mês', year: 'Ano', timeSelect: 'Hora', dateSelect: 'Selecionar data', monthSelect: 'Selecionar mês', yearSelect: 'Selecionar ano', decadeSelect: 'Selecionar década', yearFormat: 'YYYY', dateFormat: 'D/M/YYYY', dayFormat: 'D', dateTimeFormat: 'D/M/YYYY HH:mm:ss', monthFormat: 'MMMM', monthBeforeYear: false, previousMonth: 'Mês anterior (PageUp)', nextMonth: 'Mês seguinte (PageDown)', previousYear: 'Ano anterior (Control + left)', nextYear: 'Ano seguinte (Control + right)', previousDecade: 'Última década', nextDecade: 'Próxima década', previousCentury: 'Último século', nextCentury: 'Próximo século' }),
    timePickerLocale: Object.assign({}, TimePickerLocale, { placeholder: 'Hora' })
};
// All settings at:
// https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json
export default locale;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHRfUFQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkL2kxOG4vIiwic291cmNlcyI6WyJsYW5ndWFnZXMvZGF0ZS1waWNrZXIvcHRfUFQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxjQUFjLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxnQkFBZ0IsTUFBTSxzQkFBc0IsQ0FBQzs7O01BRzlDLE1BQU0sR0FBRztJQUNiLElBQUksb0JBQ0MsY0FBYyxJQUNqQixXQUFXLEVBQUUsTUFBTSxFQUNuQixnQkFBZ0IsRUFBRSxDQUFDLGNBQWMsRUFBRSxZQUFZLENBQUMsRUFDaEQsS0FBSyxFQUFFLE1BQU0sRUFDYixHQUFHLEVBQUUsT0FBTyxFQUNaLFdBQVcsRUFBRSxNQUFNLEVBQ25CLEVBQUUsRUFBRSxJQUFJLEVBQ1IsS0FBSyxFQUFFLFFBQVEsRUFDZixLQUFLLEVBQUUsS0FBSyxFQUNaLElBQUksRUFBRSxLQUFLLEVBQ1gsVUFBVSxFQUFFLE1BQU0sRUFDbEIsVUFBVSxFQUFFLGlCQUFpQixFQUM3QixXQUFXLEVBQUUsZ0JBQWdCLEVBQzdCLFVBQVUsRUFBRSxnQkFBZ0IsRUFDNUIsWUFBWSxFQUFFLG1CQUFtQixFQUNqQyxVQUFVLEVBQUUsTUFBTSxFQUNsQixVQUFVLEVBQUUsVUFBVSxFQUN0QixTQUFTLEVBQUUsR0FBRyxFQUNkLGNBQWMsRUFBRSxtQkFBbUIsRUFDbkMsV0FBVyxFQUFFLE1BQU0sRUFDbkIsZUFBZSxFQUFFLEtBQUssRUFDdEIsYUFBYSxFQUFFLHVCQUF1QixFQUN0QyxTQUFTLEVBQUUseUJBQXlCLEVBQ3BDLFlBQVksRUFBRSwrQkFBK0IsRUFDN0MsUUFBUSxFQUFFLGdDQUFnQyxFQUMxQyxjQUFjLEVBQUUsZUFBZSxFQUMvQixVQUFVLEVBQUUsZ0JBQWdCLEVBQzVCLGVBQWUsRUFBRSxlQUFlLEVBQ2hDLFdBQVcsRUFBRSxnQkFBZ0IsR0FDOUI7SUFDRCxnQkFBZ0Isb0JBQ1gsZ0JBQWdCLElBQ25CLFdBQVcsRUFBRSxNQUFNLEdBQ3BCO0NBQ0Y7OztBQUtELGVBQWUsTUFBTSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxyXG4gKlxyXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxyXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcclxuICovXHJcblxyXG5pbXBvcnQgQ2FsZW5kYXJMb2NhbGUgZnJvbSAnLi4vY2FsZW5kYXIvcHRfUFQnO1xyXG5pbXBvcnQgVGltZVBpY2tlckxvY2FsZSBmcm9tICcuLi90aW1lLXBpY2tlci9wdF9QVCc7XHJcblxyXG4vLyBNZXJnZSBpbnRvIGEgbG9jYWxlIG9iamVjdFxyXG5jb25zdCBsb2NhbGUgPSB7XHJcbiAgbGFuZzoge1xyXG4gICAgLi4uQ2FsZW5kYXJMb2NhbGUsXHJcbiAgICBwbGFjZWhvbGRlcjogJ0RhdGEnLFxyXG4gICAgcmFuZ2VQbGFjZWhvbGRlcjogWydEYXRhIGluaWNpYWwnLCAnRGF0YSBmaW5hbCddLFxyXG4gICAgdG9kYXk6ICdIb2plJyxcclxuICAgIG5vdzogJ0Fnb3JhJyxcclxuICAgIGJhY2tUb1RvZGF5OiAnSG9qZScsXHJcbiAgICBvazogJ09rJyxcclxuICAgIGNsZWFyOiAnTGltcGFyJyxcclxuICAgIG1vbnRoOiAnTcOqcycsXHJcbiAgICB5ZWFyOiAnQW5vJyxcclxuICAgIHRpbWVTZWxlY3Q6ICdIb3JhJyxcclxuICAgIGRhdGVTZWxlY3Q6ICdTZWxlY2lvbmFyIGRhdGEnLFxyXG4gICAgbW9udGhTZWxlY3Q6ICdTZWxlY2lvbmFyIG3DqnMnLFxyXG4gICAgeWVhclNlbGVjdDogJ1NlbGVjaW9uYXIgYW5vJyxcclxuICAgIGRlY2FkZVNlbGVjdDogJ1NlbGVjaW9uYXIgZMOpY2FkYScsXHJcbiAgICB5ZWFyRm9ybWF0OiAnWVlZWScsXHJcbiAgICBkYXRlRm9ybWF0OiAnRC9NL1lZWVknLFxyXG4gICAgZGF5Rm9ybWF0OiAnRCcsXHJcbiAgICBkYXRlVGltZUZvcm1hdDogJ0QvTS9ZWVlZIEhIOm1tOnNzJyxcclxuICAgIG1vbnRoRm9ybWF0OiAnTU1NTScsXHJcbiAgICBtb250aEJlZm9yZVllYXI6IGZhbHNlLFxyXG4gICAgcHJldmlvdXNNb250aDogJ03DqnMgYW50ZXJpb3IgKFBhZ2VVcCknLFxyXG4gICAgbmV4dE1vbnRoOiAnTcOqcyBzZWd1aW50ZSAoUGFnZURvd24pJyxcclxuICAgIHByZXZpb3VzWWVhcjogJ0FubyBhbnRlcmlvciAoQ29udHJvbCArIGxlZnQpJyxcclxuICAgIG5leHRZZWFyOiAnQW5vIHNlZ3VpbnRlIChDb250cm9sICsgcmlnaHQpJyxcclxuICAgIHByZXZpb3VzRGVjYWRlOiAnw5psdGltYSBkw6ljYWRhJyxcclxuICAgIG5leHREZWNhZGU6ICdQcsOzeGltYSBkw6ljYWRhJyxcclxuICAgIHByZXZpb3VzQ2VudHVyeTogJ8OabHRpbW8gc8OpY3VsbycsXHJcbiAgICBuZXh0Q2VudHVyeTogJ1Byw7N4aW1vIHPDqWN1bG8nXHJcbiAgfSxcclxuICB0aW1lUGlja2VyTG9jYWxlOiB7XHJcbiAgICAuLi5UaW1lUGlja2VyTG9jYWxlLFxyXG4gICAgcGxhY2Vob2xkZXI6ICdIb3JhJ1xyXG4gIH1cclxufTtcclxuXHJcbi8vIEFsbCBzZXR0aW5ncyBhdDpcclxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2FudC1kZXNpZ24vYW50LWRlc2lnbi9ibG9iL21hc3Rlci9jb21wb25lbnRzL2RhdGUtcGlja2VyL2xvY2FsZS9leGFtcGxlLmpzb25cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGxvY2FsZTtcclxuIl19