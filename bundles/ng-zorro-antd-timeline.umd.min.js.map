{"version":3,"sources":["ng://ng-zorro-antd/timeline/nz-timeline-item.component.ts","ng://ng-zorro-antd/timeline/nz-timeline.component.ts","ng://ng-zorro-antd/timeline/nz-timeline.module.ts"],"names":["NzTimelineItemComponent","renderer","cdr","this","nzColor","isLast","prototype","ngOnInit","tryUpdateCustomColor","ngOnChanges","changes","detectChanges","circle","liTemplate","nativeElement","querySelector","indexOf","setStyle","removeStyle","Component","args","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","preserveWhitespaces","selector","exportAs","template","Renderer2","ChangeDetectorRef","ViewChild","static","Input","NzTimelineComponent","platform","nzReverse","isPendingBoolean","destroy$","Subject","modeChanges","nzMode","reverseChanges","pendingChanges","nzPending","previousValue","currentValue","isFirstChange","updateChildren","reverseChildTimelineDots","ngAfterContentInit","_this","listOfTimeLine","pipe","takeUntil","subscribe","ngOnDestroy","next","complete","length","length_1","toArray","forEach","item","index","position","undefined","markForCheck","isBrowser","reverseChildNodes","timeline","Platform","ContentChildren","ContentChild","NzTimelineModule","NgModule","declarations","exports","imports","CommonModule","PlatformModule","NzIconModule","NzAddOnModule"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { NzTimelineMode } from './nz-timeline.component';\r\n\r\nexport type NzTimelineItemColor = 'red' | 'blue' | 'green' | 'gray' | string;\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  selector: 'nz-timeline-item, [nz-timeline-item]',\r\n  exportAs: 'nzTimelineItem',\r\n  templateUrl: './nz-timeline-item.component.html'\r\n})\r\nexport class NzTimelineItemComponent implements OnInit, OnChanges {\r\n  @ViewChild('liTemplate', { static: true }) liTemplate: ElementRef;\r\n  @Input() nzColor: NzTimelineItemColor = 'blue';\r\n  @Input() nzDot: string | TemplateRef<void>;\r\n\r\n  isLast = false;\r\n  position: NzTimelineMode | undefined;\r\n\r\n  constructor(private renderer: Renderer2, private cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.tryUpdateCustomColor();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.nzColor) {\r\n      this.tryUpdateCustomColor();\r\n    }\r\n  }\r\n\r\n  detectChanges(): void {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private tryUpdateCustomColor(): void {\r\n    const defaultColors = ['blue', 'red', 'green', 'gray'];\r\n    const circle = this.liTemplate.nativeElement.querySelector('.ant-timeline-item-head');\r\n    if (defaultColors.indexOf(this.nzColor) === -1) {\r\n      this.renderer.setStyle(circle, 'border-color', this.nzColor);\r\n    } else {\r\n      this.renderer.removeStyle(circle, 'border-color');\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { reverseChildNodes } from 'ng-zorro-antd/core';\r\n\r\nimport { NzTimelineItemComponent } from './nz-timeline-item.component';\r\n\r\nexport type NzTimelineMode = 'left' | 'alternate' | 'right';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  preserveWhitespaces: false,\r\n  selector: 'nz-timeline',\r\n  exportAs: 'nzTimeline',\r\n  templateUrl: './nz-timeline.component.html'\r\n})\r\nexport class NzTimelineComponent implements AfterContentInit, OnChanges, OnDestroy {\r\n  @ViewChild('timeline', { static: false }) timeline: ElementRef<HTMLElement>;\r\n  @ContentChildren(NzTimelineItemComponent) listOfTimeLine: QueryList<NzTimelineItemComponent>;\r\n  @ContentChild('pending', { static: false }) _pendingContent: TemplateRef<void>;\r\n\r\n  @Input() nzMode: NzTimelineMode;\r\n  @Input() nzPending: string | boolean | TemplateRef<void>;\r\n  @Input() nzPendingDot: string | TemplateRef<void>;\r\n  @Input() nzReverse: boolean = false;\r\n\r\n  isPendingBoolean: boolean = false;\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private platform: Platform) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const modeChanges = changes.nzMode;\r\n    const reverseChanges = changes.nzReverse;\r\n    const pendingChanges = changes.nzPending;\r\n\r\n    if (modeChanges && (modeChanges.previousValue !== modeChanges.currentValue || modeChanges.isFirstChange())) {\r\n      this.updateChildren();\r\n    }\r\n    if (\r\n      reverseChanges &&\r\n      reverseChanges.previousValue !== reverseChanges.currentValue &&\r\n      !reverseChanges.isFirstChange()\r\n    ) {\r\n      this.reverseChildTimelineDots();\r\n    }\r\n    if (pendingChanges) {\r\n      this.isPendingBoolean = pendingChanges.currentValue === true;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.updateChildren();\r\n    if (this.listOfTimeLine) {\r\n      this.listOfTimeLine.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\r\n        this.updateChildren();\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private updateChildren(): void {\r\n    if (this.listOfTimeLine && this.listOfTimeLine.length) {\r\n      const length = this.listOfTimeLine.length;\r\n      this.listOfTimeLine.toArray().forEach((item, index) => {\r\n        item.isLast = !this.nzReverse ? index === length - 1 : index === 0;\r\n        item.position =\r\n          this.nzMode === 'left' || !this.nzMode\r\n            ? undefined\r\n            : this.nzMode === 'right'\r\n            ? 'right'\r\n            : this.nzMode === 'alternate' && index % 2 === 0\r\n            ? 'left'\r\n            : 'right';\r\n        item.detectChanges();\r\n      });\r\n      this.cdr.markForCheck();\r\n    }\r\n  }\r\n\r\n  private reverseChildTimelineDots(): void {\r\n    if (this.platform.isBrowser) {\r\n      reverseChildNodes(this.timeline.nativeElement as HTMLElement);\r\n      this.updateChildren();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzTimelineItemComponent } from './nz-timeline-item.component';\r\nimport { NzTimelineComponent } from './nz-timeline.component';\r\n\r\n@NgModule({\r\n  declarations: [NzTimelineItemComponent, NzTimelineComponent],\r\n  exports: [NzTimelineItemComponent, NzTimelineComponent],\r\n  imports: [CommonModule, PlatformModule, NzIconModule, NzAddOnModule]\r\n})\r\nexport class NzTimelineModule {}\r\n"]}