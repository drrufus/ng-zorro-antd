{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/modal/nz-modal-config.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.module.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.ts","ng://ng-zorro-antd/modal/nz-modal-ref.class.ts","ng://ng-zorro-antd/modal/nz-modal-footer.directive.ts","ng://ng-zorro-antd/modal/nz-modal.component.html","ng://ng-zorro-antd/modal/nz-modal.component.ts","ng://ng-zorro-antd/modal/nz-modal.service.module.ts","ng://ng-zorro-antd/modal/nz-modal.module.ts","ng://ng-zorro-antd/modal/nz-modal.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","NZ_MODAL_CONFIG","InjectionToken","NzModalControlServiceModule","NzModalControlService","parentService","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","deregisterModal","registeredMeta","get","unsubscribe","delete","has","closeAll","close","index","indexOf","splice","next","core","ɵɵinject","ɵfac","providedIn","NzModalRef","NzModalFooterDirective","nzModalRef","templateRef","getInstance","setFooterWithTemplate","ɵɵdirectiveInject","TemplateRef","i0.ɵɵprojection","i0.ɵɵelement","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵproperty","ctx_r1308","nzMaskStyle","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵattribute","i0.ɵɵelementContainer","i0.ɵɵtext","ctx_r1334","getButtonCallableProp","button_r1335","type","shape","size","ghost","i0.ɵɵtextInterpolate1","ctx_r1338","nzCancelDisabled","ctx_r1339","nzOkLoading","nzOkDisabled","ctx_r1348","ctx_r1349","NzModalComponent","_super","nzConfigService","overlay","overlayKeyboardDispatcher","i18n","cfr","elementRef","viewContainer","modalControl","focusTrapFactory","cdr","nzModalGlobalConfig","document","nzVisible","nzClosable","nzCancelLoading","nzKeyboard","nzNoAnimation","nzGetContainer","create","nzZIndex","nzWidth","nzCloseIcon","nzOkType","nzIconType","nzModalType","nzAriaLabel","nzOnOk","EventEmitter","nzOnCancel","nzAfterOpen","nzAfterClose","nzVisibleChange","locale","transformOrigin","unsubscribe$","dialogMouseDown","scrollStrategy","scrollStrategies","block","warnDeprecation","__","constructor","__extends","value","asObservable","nzCancelText","cancelText","nzOkText","okText","animationState","nzMask","nzMaskClosable","ngOnInit","localeChange","pipe","takeUntil","getLocaleData","isComponent","nzContent","createDynamicComponent","isModalButtons","nzFooter","formatModalButtons","container","HTMLElement","appendChild","nativeElement","fromEvent","body","e","keydownListener","OverlayRef","setOverlayRef","overlayElement","overlayRef","keydownEvents","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","autoFocusButtonOk","focus","ngOnDestroy","changeVisibleFromInside","then","dispose","complete","clearTimeout","timeoutId","markForCheck","event","keyCode","ESCAPE","onClickOkCancel","open","result","destroy","triggerOk","triggerCancel","getContentComponentRef","getContentComponent","instance","getElement","onMaskDialogDown","onDialogUp","setTimeout","onClickMask","$event","mask","maskClosable","classList","contains","isModalType","onClickCloseBtn","trigger","ok","cancel","loadingKey","emit","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","isArray","visible","animation","closeResult","enable","savePreviouslyFocusedElement","trapFocus","add","remove","Promise","resolve","animateTo","undefined","restoreFocus","disable","options","prop","args","onButtonClick","button","loading","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","map","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","useValue","parent","parentInjector","nzComponentParams","changeDetectorRef","detectChanges","modalElement","modalContainer","previouslyFocusedElement","previouslyDOMRect","getBoundingClientRect","lastPosition","getElementOffset","x","left","width","y","top","height","offsetLeft","offsetTop","activeElement","focusTrap","focusInitialElementWhenReady","core$1","NzConfigService","Overlay","OverlayKeyboardDispatcher","NzI18nService","ComponentFactoryResolver","ElementRef","ViewContainerRef","a11y","FocusTrapFactory","ChangeDetectorRef","common","DOCUMENT","ctx","i0.ɵɵclassMapInterpolate1","hidden","nzStyle","InputBoolean","WithConfig","NzModalServiceModule","NzModalModule","imports","CommonModule","OverlayModule","NzAddOnModule","NzI18nModule","NzButtonModule","NzIconModule","NzPipesModule","NzNoAnimationModule","declarations","exports","ModalBuilderForService","createModal","changeProps","destroyModal","attach","ComponentPortal","NzModalService","confirm","confirmType","warn","nzClassName","info","simpleConfirm","success","error","warning"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport interface NzModalConfig {\r\n  nzMask?: boolean;\r\n  nzMaskClosable?: boolean;\r\n}\r\nexport const NZ_MODAL_CONFIG = new InjectionToken<NzModalConfig>('NZ_MODAL_CONFIG');\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzModalControlServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\n\r\ninterface RegisteredMeta {\r\n  modalRef: NzModalRef;\r\n  afterOpenSubscription: Subscription;\r\n  afterCloseSubscription: Subscription;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: NzModalControlServiceModule\r\n})\r\nexport class NzModalControlService {\r\n  // Track singleton afterAllClose through over the injection tree\r\n  get afterAllClose(): Subject<void> {\r\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\r\n  }\r\n\r\n  // Track singleton openModals array through over the injection tree\r\n  get openModals(): NzModalRef[] {\r\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\r\n  }\r\n\r\n  private rootOpenModals: NzModalRef[] | null = this.parentService ? null : [];\r\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\r\n  private rootRegisteredMetaMap: Map<NzModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\r\n\r\n  private get registeredMetaMap(): Map<NzModalRef, RegisteredMeta> {\r\n    // Registered modal for later usage\r\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() private parentService: NzModalControlService) {}\r\n\r\n  // Register a modal to listen its open/close\r\n  registerModal(modalRef: NzModalRef): void {\r\n    if (!this.hasRegistered(modalRef)) {\r\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\r\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\r\n\r\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\r\n    }\r\n  }\r\n\r\n  // deregister modals\r\n  deregisterModal(modalRef: NzModalRef): void {\r\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\r\n    if (registeredMeta) {\r\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\r\n      this.removeOpenModal(registeredMeta.modalRef);\r\n      registeredMeta.afterOpenSubscription.unsubscribe();\r\n      registeredMeta.afterCloseSubscription.unsubscribe();\r\n      this.registeredMetaMap.delete(modalRef);\r\n    }\r\n  }\r\n\r\n  hasRegistered(modalRef: NzModalRef): boolean {\r\n    return this.registeredMetaMap.has(modalRef);\r\n  }\r\n\r\n  // Close all registered opened modals\r\n  closeAll(): void {\r\n    let i = this.openModals.length;\r\n\r\n    while (i--) {\r\n      this.openModals[i].close();\r\n    }\r\n  }\r\n\r\n  private removeOpenModal(modalRef: NzModalRef): void {\r\n    const index = this.openModals.indexOf(modalRef);\r\n\r\n    if (index > -1) {\r\n      this.openModals.splice(index, 1);\r\n\r\n      if (!this.openModals.length) {\r\n        this.afterAllClose.next();\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { NzModalComponent } from './nz-modal.component';\r\n\r\n/**\r\n * API class that public to users to handle the modal instance.\r\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\r\n */\r\n// tslint:disable-next-line:no-any\r\nexport abstract class NzModalRef<T = any, R = any> {\r\n  abstract afterOpen: Observable<void>;\r\n  abstract afterClose: Observable<R>;\r\n\r\n  abstract open(): void;\r\n  abstract close(result?: R): void;\r\n  abstract destroy(result?: R): void;\r\n\r\n  /**\r\n   * Trigger the nzOnOk/nzOnCancel by manual\r\n   */\r\n  abstract triggerOk(): void;\r\n  abstract triggerCancel(): void;\r\n\r\n  // /**\r\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\r\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\r\n  //  */\r\n  // abstract getContentComponentRef(): ComponentRef<{}>;\r\n\r\n  /**\r\n   * Return the component instance of nzContent when specify nzContent as a Component\r\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\r\n   */\r\n  abstract getContentComponent(): T;\r\n\r\n  /**\r\n   * Get the dom element of this Modal\r\n   */\r\n  abstract getElement(): HTMLElement;\r\n\r\n  /**\r\n   * Get the instance of the Modal itself\r\n   */\r\n  abstract getInstance(): NzModalComponent;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Directive, Optional, TemplateRef } from '@angular/core';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\n\r\n@Directive({\r\n  selector: '[nzModalFooter]',\r\n  exportAs: 'nzModalFooter'\r\n})\r\nexport class NzModalFooterDirective {\r\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\r\n    if (this.nzModalRef) {\r\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\r\n    }\r\n  }\r\n}\r\n","<ng-template #tplOriginContent><ng-content></ng-content></ng-template>\r\n<!-- Compatible: the <ng-content> can appear only once -->\r\n\r\n<div [nzNoAnimation]=\"nzNoAnimation\">\r\n  <div\r\n    *ngIf=\"mask\"\r\n    class=\"ant-modal-mask\"\r\n    [ngClass]=\"maskAnimationClassMap\"\r\n    [class.ant-modal-mask-hidden]=\"hidden\"\r\n    [ngStyle]=\"nzMaskStyle\"\r\n    [style.zIndex]=\"nzZIndex\"\r\n  ></div>\r\n  <div\r\n    (click)=\"onClickMask($event)\"\r\n    (mouseup)=\"onDialogUp()\"\r\n    class=\"ant-modal-wrap {{ nzWrapClassName }}\"\r\n    [style.zIndex]=\"nzZIndex\"\r\n    [style.visibility]=\"hidden ? 'hidden' : null\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n  >\r\n    <div\r\n      #modalContainer\r\n      class=\"ant-modal {{ nzClassName }}\"\r\n      (mousedown)=\"onMaskDialogDown()\"\r\n      [ngClass]=\"modalAnimationClassMap\"\r\n      [ngStyle]=\"nzStyle\"\r\n      [style.width]=\"nzWidth | nzToCssUnit\"\r\n      [style.transform-origin]=\"transformOrigin\"\r\n      role=\"document\"\r\n    >\r\n      <div class=\"ant-modal-content\">\r\n        <button\r\n          *ngIf=\"nzClosable\"\r\n          (click)=\"onClickCloseBtn()\"\r\n          class=\"ant-modal-close\"\r\n          [attr.aria-label]=\"nzAriaLabel\"\r\n        >\r\n          <span class=\"ant-modal-close-x\">\r\n            <ng-container *nzStringTemplateOutlet=\"nzCloseIcon\">\r\n              <i nz-icon [nzType]=\"nzCloseIcon\" class=\"ant-modal-close-icon\"></i>\r\n            </ng-container>\r\n          </span>\r\n        </button>\r\n        <ng-container *ngIf=\"!hidden\" [ngSwitch]=\"true\">\r\n          <ng-container\r\n            *ngSwitchCase=\"isModalType('default')\"\r\n            [ngTemplateOutlet]=\"tplContentDefault\"\r\n          ></ng-container>\r\n          <ng-container\r\n            *ngSwitchCase=\"isModalType('confirm')\"\r\n            [ngTemplateOutlet]=\"tplContentConfirm\"\r\n          ></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- [Predefined] Default Modal Content -->\r\n<ng-template #tplContentDefault>\r\n  <div *ngIf=\"nzTitle\" class=\"ant-modal-header\">\r\n    <div class=\"ant-modal-title\">\r\n      <ng-container [ngSwitch]=\"true\">\r\n        <ng-container\r\n          *ngSwitchCase=\"isTemplateRef(nzTitle)\"\r\n          [ngTemplateOutlet]=\"nzTitle\"\r\n        ></ng-container>\r\n        <ng-container *ngSwitchCase=\"isNonEmptyString(nzTitle)\"\r\n          ><div [innerHTML]=\"nzTitle\"></div\r\n        ></ng-container>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n  <div class=\"ant-modal-body\" [ngStyle]=\"nzBodyStyle\">\r\n    <ng-container #bodyContainer>\r\n      <ng-container *ngIf=\"!isComponent(nzContent)\" [ngSwitch]=\"true\">\r\n        <ng-container\r\n          *ngSwitchCase=\"isTemplateRef(nzContent)\"\r\n          [ngTemplateOutlet]=\"nzContent\"\r\n        ></ng-container>\r\n        <ng-container *ngSwitchCase=\"isNonEmptyString(nzContent)\"\r\n          ><div [innerHTML]=\"nzContent\"></div\r\n        ></ng-container>\r\n        <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n  <div *ngIf=\"nzFooter !== null\" class=\"ant-modal-footer\">\r\n    <ng-container [ngSwitch]=\"true\">\r\n      <ng-container\r\n        *ngSwitchCase=\"isTemplateRef(nzFooter)\"\r\n        [ngTemplateOutlet]=\"nzFooter\"\r\n      ></ng-container>\r\n      <ng-container *ngSwitchCase=\"isNonEmptyString(nzFooter)\"\r\n        ><div [innerHTML]=\"nzFooter\"></div\r\n      ></ng-container>\r\n      <ng-container *ngSwitchCase=\"isModalButtons(nzFooter)\">\r\n        <button\r\n          *ngFor=\"let button of nzFooter\"\r\n          nz-button\r\n          (click)=\"onButtonClick(button)\"\r\n          [hidden]=\"!getButtonCallableProp(button, 'show')\"\r\n          [nzLoading]=\"getButtonCallableProp(button, 'loading')\"\r\n          [disabled]=\"getButtonCallableProp(button, 'disabled')\"\r\n          [nzType]=\"button.type\"\r\n          [nzShape]=\"button.shape\"\r\n          [nzSize]=\"button.size\"\r\n          [nzGhost]=\"button.ghost\"\r\n        >\r\n          {{ button.label }}\r\n        </button>\r\n      </ng-container>\r\n      <ng-container *ngSwitchDefault>\r\n        <button\r\n          *ngIf=\"nzCancelText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('cancel')\"\r\n          [nzLoading]=\"nzCancelLoading\"\r\n          [disabled]=\"nzCancelDisabled\"\r\n        >\r\n          {{ cancelText }}\r\n        </button>\r\n        <button\r\n          *ngIf=\"nzOkText !== null\"\r\n          nz-button\r\n          [nzType]=\"nzOkType\"\r\n          (click)=\"onClickOkCancel('ok')\"\r\n          [nzLoading]=\"nzOkLoading\"\r\n          [disabled]=\"nzOkDisabled\"\r\n        >\r\n          {{ okText }}\r\n        </button>\r\n      </ng-container>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>\r\n<!-- /[Predefined] Default Modal Content -->\r\n\r\n<!-- [Predefined] Confirm Modal Content -->\r\n<ng-template #tplContentConfirm>\r\n  <div class=\"ant-modal-body\" [ngStyle]=\"nzBodyStyle\">\r\n    <div class=\"ant-modal-confirm-body-wrapper\">\r\n      <div class=\"ant-modal-confirm-body\">\r\n        <i nz-icon [nzType]=\"nzIconType\"></i>\r\n        <span class=\"ant-modal-confirm-title\">\r\n          <ng-container [ngSwitch]=\"true\">\r\n            <ng-container\r\n              *ngSwitchCase=\"isTemplateRef(nzTitle)\"\r\n              [ngTemplateOutlet]=\"nzTitle\"\r\n            ></ng-container>\r\n            <ng-container *ngSwitchCase=\"isNonEmptyString(nzTitle)\"\r\n              ><span [innerHTML]=\"nzTitle\"></span\r\n            ></ng-container>\r\n          </ng-container>\r\n        </span>\r\n        <div class=\"ant-modal-confirm-content\">\r\n          <ng-container #bodyContainer>\r\n            <ng-container *ngIf=\"!isComponent(nzContent)\" [ngSwitch]=\"true\">\r\n              <ng-container\r\n                *ngSwitchCase=\"isTemplateRef(nzContent)\"\r\n                [ngTemplateOutlet]=\"nzContent\"\r\n              ></ng-container>\r\n              <ng-container *ngSwitchCase=\"isNonEmptyString(nzContent)\"\r\n                ><div [innerHTML]=\"nzContent\"></div\r\n              ></ng-container>\r\n              <ng-container *ngSwitchDefault [ngTemplateOutlet]=\"tplOriginContent\"></ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n      <div class=\"ant-modal-confirm-btns\">\r\n        <button\r\n          *ngIf=\"nzCancelText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('cancel')\"\r\n          [nzLoading]=\"nzCancelLoading\"\r\n          [disabled]=\"nzCancelDisabled\"\r\n        >\r\n          {{ cancelText }}\r\n        </button>\r\n        <button\r\n          #autoFocusButtonOk\r\n          *ngIf=\"nzOkText !== null\"\r\n          nz-button\r\n          (click)=\"onClickOkCancel('ok')\"\r\n          [nzType]=\"nzOkType\"\r\n          [nzLoading]=\"nzOkLoading\"\r\n          [disabled]=\"nzOkDisabled\"\r\n        >\r\n          {{ okText }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- /.ant-modal-confirm-body-wrapper -->\r\n  </div>\r\n</ng-template>\r\n<!-- /[Predefined] Confirm Modal Content -->\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\r\n\r\nimport { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { getElementOffset, InputBoolean, isPromise, NzConfigService, warnDeprecation, WithConfig } from 'ng-zorro-antd/core';\r\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\r\n\r\nimport { NZ_MODAL_CONFIG, NzModalConfig } from './nz-modal-config';\r\nimport { NzModalControlService } from './nz-modal-control.service';\r\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\nimport { ModalButtonOptions, ModalOptions, ModalType, OnClickCallback } from './nz-modal.type';\r\n\r\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\r\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\r\n\r\ntype AnimationState = 'enter' | 'leave' | null;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\r\n\r\n@Component({\r\n  selector: 'nz-modal',\r\n  exportAs: 'nzModal',\r\n  templateUrl: './nz-modal.component.html',\r\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\n\r\n// tslint:disable-next-line:no-any\r\nexport class NzModalComponent<T = any, R = any> extends NzModalRef<T, R>\r\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\r\n  @Input() @InputBoolean() nzVisible: boolean = false;\r\n  @Input() @InputBoolean() nzClosable: boolean = true;\r\n  @Input() @InputBoolean() nzOkLoading: boolean = false;\r\n  @Input() @InputBoolean() nzOkDisabled: boolean = false;\r\n  @Input() @InputBoolean() nzCancelDisabled: boolean = false;\r\n  @Input() @InputBoolean() nzCancelLoading: boolean = false;\r\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\r\n  @Input() @InputBoolean() nzNoAnimation = false;\r\n\r\n  // TODO(hsuanxyz): add default value once old API is deprecated.\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMask: boolean;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMaskClosable: boolean;\r\n\r\n  @Input() nzContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\r\n  @Input() nzComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\r\n  @Input() nzFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\r\n  @Input() nzGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\r\n  @Input() nzZIndex: number = 1000;\r\n  @Input() nzWidth: number | string = 520;\r\n  @Input() nzWrapClassName: string;\r\n  @Input() nzClassName: string;\r\n  @Input() nzStyle: object;\r\n  @Input() nzTitle: string | TemplateRef<{}>;\r\n  @Input() nzCloseIcon: string | TemplateRef<void> = 'close';\r\n  @Input() nzMaskStyle: object;\r\n  @Input() nzBodyStyle: object;\r\n  @Input() nzOkText: string | null;\r\n  @Input() nzCancelText: string | null;\r\n  @Input() nzOkType: string = 'primary';\r\n  @Input() nzIconType: string = 'question-circle'; // Confirm Modal ONLY\r\n  @Input() nzModalType: ModalType = 'default';\r\n  @Input() nzAriaLabel: string = 'Close';\r\n\r\n  @Input() @Output() readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n  @Input() @Output() readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\r\n\r\n  @Output() readonly nzAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\r\n  @Output() readonly nzAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\r\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\r\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\r\n\r\n  @ContentChild(NzModalFooterDirective, { static: false })\r\n  set modalFooter(value: NzModalFooterDirective) {\r\n    if (value && value.templateRef) {\r\n      this.setFooterWithTemplate(value.templateRef);\r\n    }\r\n  }\r\n\r\n  get afterOpen(): Observable<void> {\r\n    // Observable alias for nzAfterOpen\r\n    return this.nzAfterOpen.asObservable();\r\n  }\r\n\r\n  get afterClose(): Observable<R> {\r\n    // Observable alias for nzAfterClose\r\n    return this.nzAfterClose.asObservable();\r\n  }\r\n\r\n  get cancelText(): string {\r\n    return this.nzCancelText || this.locale.cancelText!;\r\n  }\r\n\r\n  get okText(): string {\r\n    return this.nzOkText || this.locale.okText!;\r\n  }\r\n\r\n  get hidden(): boolean {\r\n    return !this.nzVisible && !this.animationState;\r\n  } // Indicate whether this dialog should hidden\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of mask value\r\n   *\r\n   * Weight of different mask input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get mask(): boolean {\r\n    if (this.nzMask != null) {\r\n      return this.nzMask;\r\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMask != null) {\r\n      return this.nzModalGlobalConfig.nzMask;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description\r\n   * The calculated highest weight of maskClosable value\r\n   *\r\n   * Weight of different maskClosable input:\r\n   * component default value < global configuration < component input value\r\n   */\r\n  get maskClosable(): boolean {\r\n    if (this.nzMaskClosable != null) {\r\n      return this.nzMaskClosable;\r\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMaskClosable != null) {\r\n      return this.nzModalGlobalConfig.nzMaskClosable;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  locale: { okText?: string; cancelText?: string } = {};\r\n  maskAnimationClassMap: object | null;\r\n  modalAnimationClassMap: object | null;\r\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\r\n\r\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\r\n  private animationState: AnimationState; // Current animation state\r\n  private container: HTMLElement | OverlayRef;\r\n  private unsubscribe$ = new Subject<void>();\r\n  private previouslyFocusedElement: HTMLElement;\r\n  private focusTrap: FocusTrap;\r\n  private scrollStrategy: BlockScrollStrategy;\r\n  private overlayRef: OverlayRef;\r\n  private dialogMouseDown = false;\r\n  private timeoutId: number;\r\n\r\n  [key: string]: any; // tslint:disable-line:no-any\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private overlay: Overlay,\r\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\r\n    private i18n: NzI18nService,\r\n    private cfr: ComponentFactoryResolver,\r\n    private elementRef: ElementRef,\r\n    private viewContainer: ViewContainerRef,\r\n    private modalControl: NzModalControlService,\r\n    private focusTrapFactory: FocusTrapFactory,\r\n    private cdr: ChangeDetectorRef,\r\n    @Optional() @Inject(NZ_MODAL_CONFIG) private nzModalGlobalConfig: NzModalConfig,\r\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\r\n  ) {\r\n    super();\r\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\r\n\r\n    if (this.nzModalGlobalConfig) {\r\n      warnDeprecation('`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.');\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\r\n      this.locale = this.i18n.getLocaleData('Modal');\r\n    });\r\n\r\n    if (this.isComponent(this.nzContent)) {\r\n      this.createDynamicComponent(this.nzContent as Type<T>); // Create component along without View\r\n    }\r\n\r\n    if (this.isModalButtons(this.nzFooter)) {\r\n      // Setup default button options\r\n      this.nzFooter = this.formatModalButtons(this.nzFooter as Array<ModalButtonOptions<T>>);\r\n    }\r\n\r\n    // Place the modal dom to elsewhere\r\n    this.container = typeof this.nzGetContainer === 'function' ? this.nzGetContainer() : this.nzGetContainer;\r\n    if (this.container instanceof HTMLElement) {\r\n      this.container.appendChild(this.elementRef.nativeElement);\r\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    } else if (this.container instanceof OverlayRef) {\r\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\r\n      this.setOverlayRef(this.container);\r\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\r\n    }\r\n\r\n    if (this.overlayRef) {\r\n      this.overlayRef\r\n        .keydownEvents()\r\n        .pipe(takeUntil(this.unsubscribe$))\r\n        .subscribe(e => this.keydownListener(e));\r\n    }\r\n\r\n    // Register modal when afterOpen/afterClose is stable\r\n    this.modalControl.registerModal(this);\r\n  }\r\n\r\n  // [NOTE] NOT available when using by service!\r\n  // Because ngOnChanges never be called when using by service,\r\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\r\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.nzVisible) {\r\n      this.handleVisibleStateChange(this.nzVisible, !changes.nzVisible.firstChange); // Do not trigger animation while initializing\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // If using Component, it is the time to attach View while bodyContainer is ready\r\n    if (this.contentComponentRef) {\r\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\r\n    }\r\n\r\n    if (this.autoFocusButtonOk) {\r\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // Close self before destructing\r\n    this.changeVisibleFromInside(false).then(() => {\r\n      this.modalControl.deregisterModal(this);\r\n\r\n      if (this.container instanceof OverlayRef) {\r\n        this.container.dispose();\r\n      }\r\n\r\n      this.unsubscribe$.next();\r\n      this.unsubscribe$.complete();\r\n    });\r\n    clearTimeout(this.timeoutId);\r\n  }\r\n\r\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\r\n    this.nzFooter = templateRef;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  setOverlayRef(overlayRef: OverlayRef): void {\r\n    this.overlayRef = overlayRef;\r\n  }\r\n\r\n  keydownListener(event: KeyboardEvent): void {\r\n    if (event.keyCode === ESCAPE && this.nzKeyboard) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  open(): void {\r\n    this.changeVisibleFromInside(true);\r\n  }\r\n\r\n  close(result?: R): void {\r\n    this.changeVisibleFromInside(false, result);\r\n  }\r\n\r\n  destroy(result?: R): void {\r\n    // Destroy equals Close\r\n    this.close(result);\r\n  }\r\n\r\n  triggerOk(): void {\r\n    this.onClickOkCancel('ok');\r\n  }\r\n\r\n  triggerCancel(): void {\r\n    this.onClickOkCancel('cancel');\r\n  }\r\n\r\n  getInstance(): NzModalComponent {\r\n    return this;\r\n  }\r\n\r\n  getContentComponentRef(): ComponentRef<T> {\r\n    return this.contentComponentRef;\r\n  }\r\n\r\n  getContentComponent(): T {\r\n    return this.contentComponentRef && this.contentComponentRef.instance;\r\n  }\r\n\r\n  getElement(): HTMLElement {\r\n    return this.elementRef && this.elementRef.nativeElement;\r\n  }\r\n\r\n  onMaskDialogDown(): void {\r\n    this.dialogMouseDown = true;\r\n  }\r\n\r\n  onDialogUp(): void {\r\n    if (this.dialogMouseDown) {\r\n      this.timeoutId = setTimeout(() => {\r\n        this.dialogMouseDown = false;\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  onClickMask($event: MouseEvent): void {\r\n    if (\r\n      this.mask &&\r\n      this.maskClosable &&\r\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\r\n      this.nzVisible &&\r\n      !this.dialogMouseDown\r\n    ) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  isModalType(type: ModalType): boolean {\r\n    return this.nzModalType === type;\r\n  }\r\n\r\n  public onClickCloseBtn(): void {\r\n    if (this.nzVisible) {\r\n      this.onClickOkCancel('cancel');\r\n    }\r\n  }\r\n\r\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\r\n    const trigger = { ok: this.nzOnOk, cancel: this.nzOnCancel }[type];\r\n    const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[type];\r\n    if (trigger instanceof EventEmitter) {\r\n      trigger.emit(this.getContentComponent());\r\n    } else if (typeof trigger === 'function') {\r\n      const result = trigger(this.getContentComponent());\r\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\r\n      if (isPromise(result)) {\r\n        this[loadingKey] = true;\r\n        const handleThen = (doClose: boolean | void | {}) => {\r\n          this[loadingKey] = false;\r\n          caseClose(doClose);\r\n        };\r\n        result.then(handleThen).catch(handleThen);\r\n      } else {\r\n        caseClose(result);\r\n      }\r\n    }\r\n  }\r\n\r\n  public isNonEmptyString(value: {}): boolean {\r\n    return typeof value === 'string' && value !== '';\r\n  }\r\n\r\n  public isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  public isComponent(value: {}): boolean {\r\n    return value instanceof Type;\r\n  }\r\n\r\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\r\n    return Array.isArray(value) && value.length > 0;\r\n  }\r\n\r\n  // Do rest things when visible state changed\r\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\r\n    if (visible) {\r\n      // Hide scrollbar at the first time when shown up\r\n      this.scrollStrategy.enable();\r\n      this.savePreviouslyFocusedElement();\r\n      this.trapFocus();\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\r\n      }\r\n    } else {\r\n      if (this.container instanceof OverlayRef) {\r\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\r\n      }\r\n    }\r\n\r\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\r\n      // Emit open/close event after animations over\r\n      if (visible) {\r\n        this.nzAfterOpen.emit();\r\n      } else {\r\n        this.nzAfterClose.emit(closeResult);\r\n        this.restoreFocus();\r\n        this.scrollStrategy.disable();\r\n        // Mark the for check so it can react if the view container is using OnPush change detection.\r\n        this.cdr.markForCheck();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\r\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\r\n    const value = options[prop];\r\n    const args: T[] = [];\r\n    if (this.contentComponentRef) {\r\n      args.push(this.contentComponentRef.instance);\r\n    }\r\n    return typeof value === 'function' ? value.apply(options, args) : value;\r\n  }\r\n\r\n  // On nzFooter's modal button click\r\n  public onButtonClick(button: ModalButtonOptions<T>): void {\r\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\r\n    if (isPromise(result)) {\r\n      button.loading = true;\r\n      result.then(() => (button.loading = false)).catch(() => (button.loading = false));\r\n    }\r\n  }\r\n\r\n  // Change nzVisible from inside\r\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\r\n    if (this.nzVisible !== visible) {\r\n      // Change nzVisible value immediately\r\n      this.nzVisible = visible;\r\n      this.nzVisibleChange.emit(visible);\r\n      return this.handleVisibleStateChange(visible, true, closeResult);\r\n    }\r\n    return Promise.resolve();\r\n  }\r\n\r\n  private changeAnimationState(state: AnimationState): void {\r\n    this.animationState = state;\r\n    if (state) {\r\n      this.maskAnimationClassMap = {\r\n        [`fade-${state}`]: true,\r\n        [`fade-${state}-active`]: true\r\n      };\r\n      this.modalAnimationClassMap = {\r\n        [`zoom-${state}`]: true,\r\n        [`zoom-${state}-active`]: true\r\n      };\r\n    } else {\r\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\r\n    }\r\n  }\r\n\r\n  private animateTo(isVisible: boolean): Promise<void> {\r\n    if (isVisible) {\r\n      // Figure out the lastest click position when shows up\r\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\r\n    }\r\n\r\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\r\n    return new Promise(resolve =>\r\n      setTimeout(\r\n        () => {\r\n          // Return when animation is over\r\n          this.changeAnimationState(null);\r\n          resolve();\r\n        },\r\n        this.nzNoAnimation ? 0 : MODAL_ANIMATE_DURATION\r\n      )\r\n    );\r\n  }\r\n\r\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\r\n    return buttons.map(button => {\r\n      return {\r\n        ...{\r\n          type: 'default',\r\n          size: 'default',\r\n          autoLoading: true,\r\n          show: true,\r\n          loading: false,\r\n          disabled: false\r\n        },\r\n        ...button\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\r\n   * @param component Component class\r\n   */\r\n  private createDynamicComponent(component: Type<T>): void {\r\n    const factory = this.cfr.resolveComponentFactory(component);\r\n    const childInjector = Injector.create({\r\n      providers: [{ provide: NzModalRef, useValue: this }],\r\n      parent: this.viewContainer.parentInjector\r\n    });\r\n    this.contentComponentRef = factory.create(childInjector);\r\n    if (this.nzComponentParams) {\r\n      Object.assign(this.contentComponentRef.instance, this.nzComponentParams);\r\n    }\r\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\r\n    this.contentComponentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  // Update transform-origin to the last click position on document\r\n  private updateTransformOrigin(): void {\r\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\r\n    if (this.previouslyFocusedElement) {\r\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\r\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\r\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\r\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\r\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\r\n    }\r\n  }\r\n\r\n  private savePreviouslyFocusedElement(): void {\r\n    if (this.document) {\r\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\r\n    }\r\n  }\r\n\r\n  private trapFocus(): void {\r\n    if (!this.focusTrap) {\r\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\r\n    }\r\n    this.focusTrap.focusInitialElementWhenReady();\r\n  }\r\n\r\n  private restoreFocus(): void {\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\r\n      this.previouslyFocusedElement.focus();\r\n    }\r\n    if (this.focusTrap) {\r\n      this.focusTrap.destroy();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzModalServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzButtonModule } from 'ng-zorro-antd/button';\r\nimport { NzAddOnModule, NzNoAnimationModule, NzPipesModule } from 'ng-zorro-antd/core';\r\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\r\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\r\nimport { NzModalComponent } from './nz-modal.component';\r\nimport { NzModalServiceModule } from './nz-modal.service.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    NzAddOnModule,\r\n    NzI18nModule,\r\n    NzButtonModule,\r\n    NzIconModule,\r\n    NzPipesModule,\r\n    NzNoAnimationModule,\r\n    NzModalServiceModule,\r\n    NzModalControlServiceModule\r\n  ],\r\n  exports: [NzModalComponent, NzModalFooterDirective],\r\n  declarations: [NzModalComponent, NzModalFooterDirective],\r\n  entryComponents: [NzModalComponent]\r\n})\r\nexport class NzModalModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { ComponentRef, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { IndexableObject, warn } from 'ng-zorro-antd/core';\r\n\r\nimport { NzModalControlService } from './nz-modal-control.service';\r\nimport { NzModalRef } from './nz-modal-ref.class';\r\nimport { NzModalComponent } from './nz-modal.component';\r\nimport { NzModalServiceModule } from './nz-modal.service.module';\r\nimport { ConfirmType, ModalOptions, ModalOptionsForService } from './nz-modal.type';\r\n\r\n// A builder used for managing service creating modals\r\nexport class ModalBuilderForService {\r\n  private modalRef: ComponentRef<NzModalComponent> | null; // Modal ComponentRef, \"null\" means it has been destroyed\r\n  private overlayRef: OverlayRef;\r\n\r\n  constructor(private overlay: Overlay, options: ModalOptionsForService = {}) {\r\n    this.createModal();\r\n\r\n    if (!('nzGetContainer' in options)) {\r\n      // As we use CDK to create modal in service by force, there is no need to use nzGetContainer\r\n      options.nzGetContainer = undefined; // Override nzGetContainer's default value to prevent creating another overlay\r\n    }\r\n\r\n    this.changeProps(options);\r\n    this.modalRef!.instance.setOverlayRef(this.overlayRef);\r\n    this.modalRef!.instance.open();\r\n    this.modalRef!.instance.nzAfterClose.subscribe(() => this.destroyModal()); // [NOTE] By default, close equals destroy when using as Service\r\n  }\r\n\r\n  getInstance(): NzModalComponent | null {\r\n    return this.modalRef && this.modalRef.instance;\r\n  }\r\n\r\n  destroyModal(): void {\r\n    if (this.modalRef) {\r\n      this.overlayRef.dispose();\r\n      this.modalRef = null;\r\n    }\r\n  }\r\n\r\n  private changeProps(options: ModalOptions): void {\r\n    if (this.modalRef) {\r\n      Object.assign(this.modalRef.instance, options); // DANGER: here not limit user's inputs at runtime\r\n    }\r\n  }\r\n\r\n  // Create component to ApplicationRef\r\n  private createModal(): void {\r\n    this.overlayRef = this.overlay.create();\r\n    this.modalRef = this.overlayRef.attach(new ComponentPortal(NzModalComponent));\r\n  }\r\n}\r\n\r\n@Injectable({\r\n  providedIn: NzModalServiceModule\r\n})\r\nexport class NzModalService {\r\n  // Track of the current close modals (we assume invisible is close this time)\r\n  get openModals(): NzModalRef[] {\r\n    return this.modalControl.openModals;\r\n  }\r\n\r\n  get afterAllClose(): Observable<void> {\r\n    return this.modalControl.afterAllClose.asObservable();\r\n  }\r\n\r\n  constructor(private overlay: Overlay, private modalControl: NzModalControlService) {}\r\n\r\n  // Closes all of the currently-open dialogs\r\n  closeAll(): void {\r\n    this.modalControl.closeAll();\r\n  }\r\n\r\n  create<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    if (typeof options.nzOnCancel !== 'function') {\r\n      options.nzOnCancel = () => {}; // Leave a empty function to close this modal by default\r\n    }\r\n\r\n    // NOTE: use NzModalComponent as the NzModalRef by now, we may need archive the real NzModalRef object in the future\r\n    const modalRef = new ModalBuilderForService(this.overlay, options).getInstance()!;\r\n\r\n    return modalRef;\r\n  }\r\n\r\n  confirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): NzModalRef<T> {\r\n    if ('nzFooter' in options) {\r\n      warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\r\n    }\r\n    if (!('nzWidth' in options)) {\r\n      options.nzWidth = 416;\r\n    }\r\n    if (!('nzMaskClosable' in options)) {\r\n      options.nzMaskClosable = false;\r\n    }\r\n    if (typeof options.nzOnOk !== 'function') {\r\n      // NOTE: only support function currently by calling confirm()\r\n      options.nzOnOk = () => {}; // Leave a empty function to close this modal by default\r\n    }\r\n\r\n    options.nzModalType = 'confirm';\r\n    options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\r\n    return this.create(options);\r\n  }\r\n\r\n  info<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'info');\r\n  }\r\n\r\n  success<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'success');\r\n  }\r\n\r\n  error<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'error');\r\n  }\r\n\r\n  warning<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\r\n    return this.simpleConfirm(options, 'warning');\r\n  }\r\n\r\n  private simpleConfirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType): NzModalRef<T> {\r\n    const iconMap: IndexableObject = {\r\n      info: 'info-circle',\r\n      success: 'check-circle',\r\n      error: 'close-circle',\r\n      warning: 'exclamation-circle'\r\n    };\r\n    if (!('nzIconType' in options)) {\r\n      options.nzIconType = iconMap[confirmType];\r\n    }\r\n    if (!('nzCancelText' in options)) {\r\n      // Remove the Cancel button if the user not specify a Cancel button\r\n      options.nzCancelText = null;\r\n    }\r\n    return this.confirm(options, confirmType);\r\n  }\r\n}\r\n"]}