{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/auto-complete/nz-autocomplete-optgroup.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-option.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.component.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete-trigger.directive.ts","ng://ng-zorro-antd/auto-complete/nz-autocomplete.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NzAutocompleteOptgroupComponent","Component","args","selector","exportAs","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","host","role","class","Input","source","isUserInput","this","NzAutocompleteOptionComponent","changeDetectorRef","element","nzDisabled","selectionChange","EventEmitter","active","selected","prototype","select","emit","markForCheck","emitSelectionChangeEvent","deselect","getLabel","nzLabel","nzValue","toString","setActiveStyles","setInactiveStyles","scrollIntoViewIfNeeded","scrollIntoView","nativeElement","selectViaInteraction","NzOptionSelectionChange","[class.ant-select-dropdown-menu-item-selected]","[class.ant-select-dropdown-menu-item-active]","[class.ant-select-dropdown-menu-item-disabled]","[attr.aria-selected]","[attr.aria-disabled]","(click)","(mousedown)","ChangeDetectorRef","ElementRef","Output","tslib_1.__decorate","InputBoolean","NzAutocompleteComponent","ngZone","noAnimation","_this","nzOverlayClassName","nzOverlayStyle","nzDefaultActiveFirstOption","nzBackfill","compareWith","o1","o2","showPanel","isOpen","dropDownPosition","activeItemIndex","selectionChangeSubscription","Subscription","EMPTY","dataSourceChangeSubscription","optionSelectionChanges","defer","options","merge","apply","concat","__spread","map","option","onStable","asObservable","pipe","take","switchMap","nzDataSource","fromDataSourceOptions","fromContentOptions","ngAfterContentInit","optionsInit","ngAfterViewInit","ngOnDestroy","unsubscribe","setVisibility","setActiveItem","index","activeItem","toArray","clearSelectedOptions","setNextItemActive","nextIndex","setPreviousItemActive","previousIndex","getOptionIndex","reduce","result","current","updatePosition","position","subscribeOptionChanges","changes","subscribe","dirty","setTimeout","skip","forEach","filter","event","animations","slideMotion","NgZone","NzNoAnimationDirective","type","Host","Optional","ContentChildren","descendants","ViewChildren","ViewChild","TemplateRef","static","NZ_AUTOCOMPLETE_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NzAutocompleteTriggerDirective","multi","getNzAutocompleteMissingPanelError","Error","elementRef","overlay","viewContainerRef","document","_onChange","_onTouched","panelOpen","nzAutocomplete","destroyPanel","writeValue","setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","closePanel","openPanel","previousValue","attachOverlay","updateStatus","overlayRef","hasAttached","overlayBackdropClickSubscription","overlayPositionChangeSubscription","optionsChangeSubscription","detach","portal","handleKeydown","keyCode","isArrowKey","UP_ARROW","DOWN_ARROW","ESCAPE","preventDefault","TAB","ENTER","activeOption","stopPropagation","doBackfill","handleInput","parseFloat","canOpen","activeElement","handleFocus","handleBlur","subscribeOptionsChange","firstStable","optionChanges","tap","positionStrategy","reapplyLastPosition","delay","resetActiveItem","subscribeSelectionChange","setValueAndClose","subscribeOverlayBackdropClick","fromEvent","clickTarget","overlayElement","contains","subscribeOverlayPositionChange","positionChanges","connectionPair","originY","distinct","TemplatePortal","create","getOverlayConfig","attach","updateSize","width","nzWidth","getHostWidth","OverlayConfig","getOverlayPosition","scrollStrategy","scrollStrategies","reposition","getConnectedElement","getBoundingClientRect","positions","ConnectionPositionPair","originX","overlayX","overlayY","flexibleConnectedTo","withFlexibleDimensions","withPush","withPositions","focus","readOnly","Directive","providers","autocomplete","aria-autocomplete","(focusin)","(blur)","(input)","(keydown)","Overlay","ViewContainerRef","Inject","DOCUMENT","NzAutocompleteModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","FormsModule","NzAddOnModule","NzNoAnimationModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nz-auto-optgroup',\r\n  exportAs: 'nzAutoOptgroup',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete-optgroup.component.html',\r\n  host: {\r\n    role: 'group',\r\n    class: 'ant-select-dropdown-menu-item-group'\r\n  }\r\n})\r\nexport class NzAutocompleteOptgroupComponent {\r\n  @Input() nzLabel: string | TemplateRef<void>;\r\n\r\n  constructor() {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { scrollIntoView, InputBoolean } from 'ng-zorro-antd/core';\r\n\r\nexport class NzOptionSelectionChange {\r\n  constructor(public source: NzAutocompleteOptionComponent, public isUserInput: boolean = false) {}\r\n}\r\n\r\n@Component({\r\n  selector: 'nz-auto-option',\r\n  exportAs: 'nzAutoOption',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete-option.component.html',\r\n  host: {\r\n    role: 'menuitem',\r\n    class: 'ant-select-dropdown-menu-item',\r\n    '[class.ant-select-dropdown-menu-item-selected]': 'selected',\r\n    '[class.ant-select-dropdown-menu-item-active]': 'active',\r\n    '[class.ant-select-dropdown-menu-item-disabled]': 'nzDisabled',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'nzDisabled.toString()',\r\n    '(click)': 'selectViaInteraction()',\r\n    '(mousedown)': '$event.preventDefault()'\r\n  }\r\n})\r\nexport class NzAutocompleteOptionComponent {\r\n  /* tslint:disable-next-line:no-any */\r\n  @Input() nzValue: any;\r\n  @Input() nzLabel: string;\r\n  @Input() @InputBoolean() nzDisabled = false;\r\n  @Output() readonly selectionChange = new EventEmitter<NzOptionSelectionChange>();\r\n\r\n  active = false;\r\n  selected = false;\r\n\r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private element: ElementRef) {}\r\n\r\n  select(emit: boolean = true): void {\r\n    this.selected = true;\r\n    this.changeDetectorRef.markForCheck();\r\n    if (emit) {\r\n      this.emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  deselect(): void {\r\n    this.selected = false;\r\n    this.changeDetectorRef.markForCheck();\r\n    this.emitSelectionChangeEvent();\r\n  }\r\n\r\n  /** Git display label */\r\n  getLabel(): string {\r\n    return this.nzLabel || this.nzValue.toString();\r\n  }\r\n\r\n  /** Set active (only styles) */\r\n  setActiveStyles(): void {\r\n    if (!this.active) {\r\n      this.active = true;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Unset active (only styles) */\r\n  setInactiveStyles(): void {\r\n    if (this.active) {\r\n      this.active = false;\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  scrollIntoViewIfNeeded(): void {\r\n    scrollIntoView(this.element.nativeElement);\r\n  }\r\n\r\n  selectViaInteraction(): void {\r\n    if (!this.nzDisabled) {\r\n      this.selected = !this.selected;\r\n      if (this.selected) {\r\n        this.setActiveStyles();\r\n      } else {\r\n        this.setInactiveStyles();\r\n      }\r\n      this.emitSelectionChangeEvent(true);\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  private emitSelectionChangeEvent(isUserInput: boolean = false): void {\r\n    this.selectionChange.emit(new NzOptionSelectionChange(this, isUserInput));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Host,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewChildren,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { defer, merge, Observable, Subscription } from 'rxjs';\r\nimport { filter, switchMap, take } from 'rxjs/operators';\r\n\r\nimport { slideMotion, CompareWith, InputBoolean, NzDropDownPosition, NzNoAnimationDirective } from 'ng-zorro-antd/core';\r\n\r\nimport { NzAutocompleteOptionComponent, NzOptionSelectionChange } from './nz-autocomplete-option.component';\r\n\r\nexport interface AutocompleteDataSourceItem {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport type AutocompleteDataSource = AutocompleteDataSourceItem[] | string[] | number[];\r\n\r\n@Component({\r\n  selector: 'nz-autocomplete',\r\n  exportAs: 'nzAutocomplete',\r\n  preserveWhitespaces: false,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './nz-autocomplete.component.html',\r\n  animations: [slideMotion],\r\n  styles: [\r\n    `\r\n      .ant-select-dropdown {\r\n        top: 100%;\r\n        left: 0;\r\n        position: relative;\r\n        width: 100%;\r\n        margin-top: 4px;\r\n        margin-bottom: 4px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzAutocompleteComponent implements AfterContentInit, AfterViewInit, OnDestroy {\r\n  @Input() nzWidth: number;\r\n  @Input() nzOverlayClassName = '';\r\n  @Input() nzOverlayStyle: { [key: string]: string } = {};\r\n  @Input() @InputBoolean() nzDefaultActiveFirstOption = true;\r\n  @Input() @InputBoolean() nzBackfill = false;\r\n  @Input() compareWith: CompareWith = (o1, o2) => o1 === o2;\r\n  @Input() nzDataSource: AutocompleteDataSource;\r\n  @Output() readonly selectionChange: EventEmitter<NzAutocompleteOptionComponent> = new EventEmitter<\r\n    NzAutocompleteOptionComponent\r\n  >();\r\n\r\n  showPanel: boolean = true;\r\n  isOpen: boolean = false;\r\n  activeItem: NzAutocompleteOptionComponent;\r\n  dropDownPosition: NzDropDownPosition = 'bottom';\r\n\r\n  /**\r\n   * Options accessor, its source may be content or dataSource\r\n   */\r\n  get options(): QueryList<NzAutocompleteOptionComponent> {\r\n    // first dataSource\r\n    if (this.nzDataSource) {\r\n      return this.fromDataSourceOptions;\r\n    } else {\r\n      return this.fromContentOptions;\r\n    }\r\n  }\r\n\r\n  /** Provided by content */\r\n  @ContentChildren(NzAutocompleteOptionComponent, { descendants: true }) fromContentOptions: QueryList<\r\n    NzAutocompleteOptionComponent\r\n  >;\r\n  /** Provided by dataSource */\r\n  @ViewChildren(NzAutocompleteOptionComponent) fromDataSourceOptions: QueryList<NzAutocompleteOptionComponent>;\r\n\r\n  /** cdk-overlay */\r\n  @ViewChild(TemplateRef, { static: false }) template: TemplateRef<{}>;\r\n  @ViewChild('panel', { static: false }) panel: ElementRef;\r\n  @ViewChild('content', { static: false }) content: ElementRef;\r\n\r\n  private activeItemIndex: number = -1;\r\n  private selectionChangeSubscription = Subscription.EMPTY;\r\n  private dataSourceChangeSubscription = Subscription.EMPTY;\r\n  /** Options changes listener */\r\n  readonly optionSelectionChanges: Observable<NzOptionSelectionChange> = defer(() => {\r\n    if (this.options) {\r\n      return merge<NzOptionSelectionChange>(...this.options.map(option => option.selectionChange));\r\n    }\r\n    return this.ngZone.onStable.asObservable().pipe(\r\n      take(1),\r\n      switchMap(() => this.optionSelectionChanges)\r\n    );\r\n  });\r\n\r\n  constructor(\r\n    private changeDetectorRef: ChangeDetectorRef,\r\n    private ngZone: NgZone,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.nzDataSource) {\r\n      this.optionsInit();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.nzDataSource) {\r\n      this.optionsInit();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataSourceChangeSubscription.unsubscribe();\r\n    this.selectionChangeSubscription.unsubscribe();\r\n  }\r\n\r\n  setVisibility(): void {\r\n    this.showPanel = !!this.options.length;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  setActiveItem(index: number): void {\r\n    const activeItem = this.options.toArray()[index];\r\n    if (activeItem && !activeItem.active) {\r\n      this.activeItem = activeItem;\r\n      this.activeItemIndex = index;\r\n      this.clearSelectedOptions(this.activeItem);\r\n      this.activeItem.setActiveStyles();\r\n      this.changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  setNextItemActive(): void {\r\n    const nextIndex = this.activeItemIndex + 1 <= this.options.length - 1 ? this.activeItemIndex + 1 : 0;\r\n    this.setActiveItem(nextIndex);\r\n  }\r\n\r\n  setPreviousItemActive(): void {\r\n    const previousIndex = this.activeItemIndex - 1 < 0 ? this.options.length - 1 : this.activeItemIndex - 1;\r\n    this.setActiveItem(previousIndex);\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  getOptionIndex(value: any): number {\r\n    return this.options.reduce((result: number, current: NzAutocompleteOptionComponent, index: number) => {\r\n      return result === -1 ? (this.compareWith(value, current.nzValue) ? index : -1) : result;\r\n    }, -1)!;\r\n  }\r\n\r\n  updatePosition(position: NzDropDownPosition): void {\r\n    this.dropDownPosition = position;\r\n    this.changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  private optionsInit(): void {\r\n    this.setVisibility();\r\n    this.subscribeOptionChanges();\r\n    const changes = this.nzDataSource ? this.fromDataSourceOptions.changes : this.fromContentOptions.changes;\r\n    // async\r\n    this.dataSourceChangeSubscription = changes.subscribe(e => {\r\n      if (!e.dirty && this.isOpen) {\r\n        setTimeout(() => this.setVisibility());\r\n      }\r\n      this.subscribeOptionChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the status of options\r\n   */\r\n  clearSelectedOptions(skip?: NzAutocompleteOptionComponent | null, deselect: boolean = false): void {\r\n    this.options.forEach(option => {\r\n      if (option !== skip) {\r\n        if (deselect) {\r\n          option.deselect();\r\n        }\r\n        option.setInactiveStyles();\r\n      }\r\n    });\r\n  }\r\n\r\n  private subscribeOptionChanges(): void {\r\n    this.selectionChangeSubscription.unsubscribe();\r\n    this.selectionChangeSubscription = this.optionSelectionChanges\r\n      .pipe(filter((event: NzOptionSelectionChange) => event.isUserInput))\r\n      .subscribe((event: NzOptionSelectionChange) => {\r\n        event.source.select();\r\n        event.source.setActiveStyles();\r\n        this.activeItem = event.source;\r\n        this.activeItemIndex = this.getOptionIndex(this.activeItem.nzValue);\r\n        this.clearSelectedOptions(event.source, true);\r\n        this.selectionChange.emit(event.source);\r\n      });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { DOWN_ARROW, ENTER, ESCAPE, TAB, UP_ARROW } from '@angular/cdk/keycodes';\r\nimport {\r\n  ConnectedOverlayPositionChange,\r\n  ConnectionPositionPair,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  PositionStrategy,\r\n  VerticalConnectionPos\r\n} from '@angular/cdk/overlay';\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport {\r\n  forwardRef,\r\n  Directive,\r\n  ElementRef,\r\n  ExistingProvider,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { fromEvent, merge, Subscription } from 'rxjs';\r\nimport { delay, distinct, map, take, tap } from 'rxjs/operators';\r\n\r\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\r\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\r\n\r\nexport const NZ_AUTOCOMPLETE_VALUE_ACCESSOR: ExistingProvider = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => NzAutocompleteTriggerDirective),\r\n  multi: true\r\n};\r\n\r\nexport function getNzAutocompleteMissingPanelError(): Error {\r\n  return Error(\r\n    'Attempting to open an undefined instance of `nz-autocomplete`. ' +\r\n      'Make sure that the id passed to the `nzAutocomplete` is correct and that ' +\r\n      \"you're attempting to open it after the ngAfterContentInit hook.\"\r\n  );\r\n}\r\n\r\n@Directive({\r\n  selector: `input[nzAutocomplete], textarea[nzAutocomplete]`,\r\n  exportAs: 'nzAutocompleteTrigger',\r\n  providers: [NZ_AUTOCOMPLETE_VALUE_ACCESSOR],\r\n  host: {\r\n    autocomplete: 'off',\r\n    'aria-autocomplete': 'list',\r\n    '(focusin)': 'handleFocus()',\r\n    '(blur)': 'handleBlur()',\r\n    '(input)': 'handleInput($event)',\r\n    '(keydown)': 'handleKeydown($event)'\r\n  }\r\n})\r\nexport class NzAutocompleteTriggerDirective implements ControlValueAccessor, OnDestroy {\r\n  /** Bind nzAutocomplete component */\r\n  @Input() nzAutocomplete: NzAutocompleteComponent;\r\n\r\n  // tslint:disable-next-line:no-any\r\n  _onChange: (value: any) => void = () => {};\r\n  _onTouched = () => {};\r\n  panelOpen: boolean = false;\r\n\r\n  /** Current active option */\r\n  get activeOption(): NzAutocompleteOptionComponent | undefined {\r\n    if (this.nzAutocomplete && this.nzAutocomplete.options.length) {\r\n      return this.nzAutocomplete.activeItem;\r\n    }\r\n  }\r\n\r\n  private overlayRef: OverlayRef | null;\r\n  private portal: TemplatePortal<{}> | null;\r\n  private positionStrategy: FlexibleConnectedPositionStrategy;\r\n  private previousValue: string | number | null;\r\n  private selectionChangeSubscription: Subscription;\r\n  private optionsChangeSubscription: Subscription;\r\n  private overlayBackdropClickSubscription: Subscription;\r\n  private overlayPositionChangeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private overlay: Overlay,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private ngZone: NgZone,\r\n    // tslint:disable-next-line:no-any\r\n    @Optional() @Inject(DOCUMENT) private document: any\r\n  ) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyPanel();\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  writeValue(value: any): void {\r\n    this.setTriggerValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: (value: {}) => {}): void {\r\n    this._onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => {}): void {\r\n    this._onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    const element: HTMLInputElement = this.elementRef.nativeElement;\r\n    element.disabled = isDisabled;\r\n    this.closePanel();\r\n  }\r\n\r\n  openPanel(): void {\r\n    this.previousValue = this.elementRef.nativeElement.value;\r\n    this.attachOverlay();\r\n    this.updateStatus();\r\n  }\r\n\r\n  closePanel(): void {\r\n    if (this.panelOpen) {\r\n      this.nzAutocomplete.isOpen = this.panelOpen = false;\r\n\r\n      if (this.overlayRef && this.overlayRef.hasAttached()) {\r\n        this.selectionChangeSubscription.unsubscribe();\r\n        this.overlayBackdropClickSubscription.unsubscribe();\r\n        this.overlayPositionChangeSubscription.unsubscribe();\r\n        this.optionsChangeSubscription.unsubscribe();\r\n        this.overlayRef.detach();\r\n        this.overlayRef = null;\r\n        this.portal = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n    const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\r\n\r\n    if (keyCode === ESCAPE) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (this.panelOpen && (keyCode === ESCAPE || keyCode === TAB)) {\r\n      // Reset value when tab / ESC close\r\n      if (this.activeOption && this.activeOption.getLabel() !== this.previousValue) {\r\n        this.setTriggerValue(this.previousValue);\r\n      }\r\n      this.closePanel();\r\n    } else if (this.panelOpen && keyCode === ENTER) {\r\n      if (this.nzAutocomplete.showPanel && this.activeOption) {\r\n        event.preventDefault();\r\n        this.activeOption.selectViaInteraction();\r\n      }\r\n    } else if (this.panelOpen && isArrowKey && this.nzAutocomplete.showPanel) {\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n      if (keyCode === UP_ARROW) {\r\n        this.nzAutocomplete.setPreviousItemActive();\r\n      } else {\r\n        this.nzAutocomplete.setNextItemActive();\r\n      }\r\n      if (this.activeOption) {\r\n        this.activeOption.scrollIntoViewIfNeeded();\r\n      }\r\n      this.doBackfill();\r\n    }\r\n  }\r\n\r\n  handleInput(event: KeyboardEvent): void {\r\n    const target = event.target as HTMLInputElement;\r\n    const document = this.document as Document;\r\n    let value: number | string | null = target.value;\r\n\r\n    if (target.type === 'number') {\r\n      value = value === '' ? null : parseFloat(value);\r\n    }\r\n\r\n    if (this.previousValue !== value) {\r\n      this.previousValue = value;\r\n      this._onChange(value);\r\n\r\n      if (this.canOpen() && document.activeElement === event.target) {\r\n        this.openPanel();\r\n      }\r\n    }\r\n  }\r\n\r\n  handleFocus(): void {\r\n    if (this.canOpen()) {\r\n      this.openPanel();\r\n    }\r\n  }\r\n\r\n  handleBlur(): void {\r\n    this.closePanel();\r\n    this._onTouched();\r\n  }\r\n\r\n  /**\r\n   * Subscription data source changes event\r\n   */\r\n  private subscribeOptionsChange(): Subscription {\r\n    const firstStable = this.ngZone.onStable.asObservable().pipe(take(1));\r\n    const optionChanges = this.nzAutocomplete.options.changes.pipe(\r\n      tap(() => this.positionStrategy.reapplyLastPosition()),\r\n      delay(0)\r\n    );\r\n    return merge(firstStable, optionChanges).subscribe(() => {\r\n      this.resetActiveItem();\r\n      if (this.panelOpen) {\r\n        this.overlayRef!.updatePosition();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription option changes event and set the value\r\n   */\r\n  private subscribeSelectionChange(): Subscription {\r\n    return this.nzAutocomplete.selectionChange.subscribe((option: NzAutocompleteOptionComponent) => {\r\n      this.setValueAndClose(option);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription external click and close panel\r\n   */\r\n  private subscribeOverlayBackdropClick(): Subscription {\r\n    return merge<MouseEvent | TouchEvent>(\r\n      fromEvent<MouseEvent>(this.document, 'click'),\r\n      fromEvent<TouchEvent>(this.document, 'touchend')\r\n    ).subscribe((event: MouseEvent | TouchEvent) => {\r\n      const clickTarget = event.target as HTMLElement;\r\n\r\n      // Make sure is not self\r\n      if (\r\n        clickTarget !== this.elementRef.nativeElement &&\r\n        !this.overlayRef!.overlayElement.contains(clickTarget) &&\r\n        this.panelOpen\r\n      ) {\r\n        this.closePanel();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscription overlay position changes and reset dropdown position\r\n   */\r\n  private subscribeOverlayPositionChange(): Subscription {\r\n    return this.positionStrategy.positionChanges\r\n      .pipe(\r\n        map((position: ConnectedOverlayPositionChange) => position.connectionPair.originY),\r\n        distinct(),\r\n        delay(0)\r\n      )\r\n      .subscribe((position: VerticalConnectionPos) => {\r\n        this.nzAutocomplete.updatePosition(position);\r\n      });\r\n  }\r\n\r\n  private attachOverlay(): void {\r\n    if (!this.nzAutocomplete) {\r\n      throw getNzAutocompleteMissingPanelError();\r\n    }\r\n\r\n    if (!this.portal) {\r\n      this.portal = new TemplatePortal(this.nzAutocomplete.template, this.viewContainerRef);\r\n    }\r\n\r\n    if (!this.overlayRef) {\r\n      this.overlayRef = this.overlay.create(this.getOverlayConfig());\r\n    }\r\n\r\n    if (this.overlayRef && !this.overlayRef.hasAttached()) {\r\n      this.overlayRef.attach(this.portal);\r\n      this.overlayPositionChangeSubscription = this.subscribeOverlayPositionChange();\r\n      this.selectionChangeSubscription = this.subscribeSelectionChange();\r\n      this.overlayBackdropClickSubscription = this.subscribeOverlayBackdropClick();\r\n      this.optionsChangeSubscription = this.subscribeOptionsChange();\r\n    }\r\n    this.nzAutocomplete.isOpen = this.panelOpen = true;\r\n  }\r\n\r\n  private updateStatus(): void {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.updateSize({ width: this.nzAutocomplete.nzWidth || this.getHostWidth() });\r\n    }\r\n    this.nzAutocomplete.setVisibility();\r\n    this.resetActiveItem();\r\n    if (this.activeOption) {\r\n      this.activeOption.scrollIntoViewIfNeeded();\r\n    }\r\n  }\r\n\r\n  private destroyPanel(): void {\r\n    if (this.overlayRef) {\r\n      this.closePanel();\r\n    }\r\n  }\r\n\r\n  private getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this.getOverlayPosition(),\r\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\r\n      // default host element width\r\n      width: this.nzAutocomplete.nzWidth || this.getHostWidth()\r\n    });\r\n  }\r\n\r\n  private getConnectedElement(): ElementRef {\r\n    return this.elementRef;\r\n  }\r\n\r\n  private getHostWidth(): number {\r\n    return this.getConnectedElement().nativeElement.getBoundingClientRect().width;\r\n  }\r\n\r\n  private getOverlayPosition(): PositionStrategy {\r\n    const positions = [\r\n      new ConnectionPositionPair({ originX: 'start', originY: 'bottom' }, { overlayX: 'start', overlayY: 'top' }),\r\n      new ConnectionPositionPair({ originX: 'start', originY: 'top' }, { overlayX: 'start', overlayY: 'bottom' })\r\n    ];\r\n    this.positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo(this.getConnectedElement())\r\n      .withFlexibleDimensions(false)\r\n      .withPush(false)\r\n      .withPositions(positions);\r\n    return this.positionStrategy;\r\n  }\r\n\r\n  private resetActiveItem(): void {\r\n    const index = this.nzAutocomplete.getOptionIndex(this.previousValue);\r\n    this.nzAutocomplete.clearSelectedOptions(null, true);\r\n    if (index !== -1) {\r\n      this.nzAutocomplete.setActiveItem(index);\r\n      this.nzAutocomplete.activeItem.select(false);\r\n    } else {\r\n      this.nzAutocomplete.setActiveItem(this.nzAutocomplete.nzDefaultActiveFirstOption ? 0 : -1);\r\n    }\r\n  }\r\n\r\n  private setValueAndClose(option: NzAutocompleteOptionComponent): void {\r\n    const value = option.nzValue;\r\n    this.setTriggerValue(option.getLabel());\r\n    this._onChange(value);\r\n    this.elementRef.nativeElement.focus();\r\n    this.closePanel();\r\n  }\r\n\r\n  private setTriggerValue(value: string | number | null): void {\r\n    this.elementRef.nativeElement.value = value || '';\r\n    if (!this.nzAutocomplete.nzBackfill) {\r\n      this.previousValue = value;\r\n    }\r\n  }\r\n\r\n  private doBackfill(): void {\r\n    if (this.nzAutocomplete.nzBackfill && this.nzAutocomplete.activeItem) {\r\n      this.setTriggerValue(this.nzAutocomplete.activeItem.getLabel());\r\n    }\r\n  }\r\n\r\n  private canOpen(): boolean {\r\n    const element: HTMLInputElement = this.elementRef.nativeElement;\r\n    return !element.readOnly && !element.disabled;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { NzAddOnModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\r\n\r\nimport { NzAutocompleteOptgroupComponent } from './nz-autocomplete-optgroup.component';\r\nimport { NzAutocompleteOptionComponent } from './nz-autocomplete-option.component';\r\nimport { NzAutocompleteTriggerDirective } from './nz-autocomplete-trigger.directive';\r\nimport { NzAutocompleteComponent } from './nz-autocomplete.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NzAutocompleteComponent,\r\n    NzAutocompleteOptionComponent,\r\n    NzAutocompleteTriggerDirective,\r\n    NzAutocompleteOptgroupComponent\r\n  ],\r\n  exports: [\r\n    NzAutocompleteComponent,\r\n    NzAutocompleteOptionComponent,\r\n    NzAutocompleteTriggerDirective,\r\n    NzAutocompleteOptgroupComponent\r\n  ],\r\n  imports: [CommonModule, OverlayModule, FormsModule, NzAddOnModule, NzNoAnimationModule]\r\n})\r\nexport class NzAutocompleteModule {}\r\n"]}