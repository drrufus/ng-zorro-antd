{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/tooltip/base/nz-tooltip-base.component.ts","ng://ng-zorro-antd/tooltip/base/nz-tooltip-base-legacy.component.ts","ng://ng-zorro-antd/tooltip/nz-tooltip.component.ts","ng://ng-zorro-antd/tooltip/base/nz-tooltip-base.directive.ts","ng://ng-zorro-antd/tooltip/nz-tooltip.directive.ts","ng://ng-zorro-antd/tooltip/nz-tooltip.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","NzTooltipBaseComponent","cdr","noAnimation","nzVisibleChange","EventEmitter","_classMap","_hasBackdrop","_prefix","_visible","_positions","DEFAULT_TOOLTIP_POSITIONS","_placement","_trigger","defineProperty","undefined","nzContent","nzContentTemplate","nzTitle","nzTitleTemplate","show","nzVisible","isTitleEmpty","isContentEmpty","emit","detectChanges","hide","updateByDirective","_this","setClassMap","Promise","resolve","then","updatePosition","origin","overlay","overlayRef","onPositionChange","position","getPlacementName","_a","nzOverlayClassName","setOverlayOrigin","markForCheck","title","TemplateRef","isNotNil","content","Output","NzTooltipBaseComponentLegacy","_super","nzOverlayStyle","nzMouseEnterDelay","nzMouseLeaveDelay","tslib_1.__extends","POSITION_MAP","nzPlacement","visible","toBoolean","ngOnChanges","ChangeDetectorRef","NzNoAnimationDirective","decorators","type","Host","Optional","ViewChild","args","static","Input","NzToolTipComponent","Component","selector","exportAs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","zoomBigMotion","template","preserveWhitespaces","providers","provide","useExisting","ContentChild","NzTooltipBaseDirective","elementRef","hostView","resolver","renderer","_tooltip","nzTrigger","needProxyProperties","isTooltipComponentVisible","isDynamicTooltip","triggerUnlisteners","$destroy","Subject","specificTitle","directiveNameTitle","specificContent","directiveNameContent","specificPlacement","specificTrigger","changes","trigger","isFirstChange","registerTriggers","tooltip","updateChangedProperties","ngOnInit","warnDeprecation","createDynamicTooltipComponent","pipe","distinctUntilChanged","takeUntil","subscribe","ngAfterViewInit","ngOnDestroy","complete","clearTogglingTimer","removeTriggerListeners","tooltipRef","destroy","createComponent","componentFactory","instance","removeChild","parentNode","nativeElement","location","overlayElement_1","el","listen","delayEnterLeave","overlayElement","preventDefault","propertiesOrChanges","isArray","keys","forEach","property","indexOf","updateComponentValue","placement","c","key","isOrigin","isEnter","delay","delayTimer","setTimeout","cancel","clearTimeout","NzTooltipDirective","resolveComponentFactory","Directive","host","[class.ant-tooltip-open]","ElementRef","ViewContainerRef","ComponentFactoryResolver","Renderer2","NzToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","NzAddOnModule","NzOverlayModule","NzNoAnimationModule","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  CdkConnectedOverlay,\r\n  CdkOverlayOrigin,\r\n  ConnectedOverlayPositionChange,\r\n  ConnectionPositionPair\r\n} from '@angular/cdk/overlay';\r\nimport { ChangeDetectorRef, EventEmitter, Output, TemplateRef } from '@angular/core';\r\nimport {\r\n  getPlacementName,\r\n  isNotNil,\r\n  DEFAULT_TOOLTIP_POSITIONS,\r\n  NgClassInterface,\r\n  NgStyleInterface,\r\n  NzNoAnimationDirective,\r\n  NzTSType\r\n} from 'ng-zorro-antd/core';\r\n\r\nimport { NzTooltipTrigger } from '../nz-tooltip.definitions';\r\n\r\n/**\r\n * Tooltip component. Also the base component for legacy components.\r\n */\r\nexport abstract class NzTooltipBaseComponent {\r\n  nzTitle: NzTSType | null;\r\n  nzContent: NzTSType | null;\r\n  nzVisible: boolean;\r\n  nzPlacement: string;\r\n  nzOverlayClassName: string;\r\n  nzOverlayStyle: NgStyleInterface;\r\n  nzMouseEnterDelay: number;\r\n  nzMouseLeaveDelay: number;\r\n  nzTrigger: NzTooltipTrigger;\r\n  nzTitleTemplate: TemplateRef<void>;\r\n  nzContentTemplate: TemplateRef<void>;\r\n\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  overlay: CdkConnectedOverlay;\r\n  origin: CdkOverlayOrigin;\r\n\r\n  _classMap: NgClassInterface = {};\r\n  _hasBackdrop = false;\r\n  _prefix = 'ant-tooltip-placement';\r\n  _visible = false;\r\n  _positions: ConnectionPositionPair[] = [...DEFAULT_TOOLTIP_POSITIONS];\r\n  _placement = 'top';\r\n  _trigger: NzTooltipTrigger = 'hover';\r\n\r\n  get content(): string | TemplateRef<void> | null {\r\n    return this.nzContent !== undefined ? this.nzContent : this.nzContentTemplate;\r\n  }\r\n\r\n  get title(): string | TemplateRef<void> | null {\r\n    return this.nzTitle !== undefined ? this.nzTitle : this.nzTitleTemplate;\r\n  }\r\n\r\n  constructor(public cdr: ChangeDetectorRef, public noAnimation?: NzNoAnimationDirective) {}\r\n\r\n  show(): void {\r\n    if (this.nzVisible) {\r\n      return;\r\n    }\r\n\r\n    if (!this.isTitleEmpty() || !this.isContentEmpty()) {\r\n      this.nzVisible = true;\r\n      this.nzVisibleChange.emit(true);\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  hide(): void {\r\n    if (!this.nzVisible) {\r\n      return;\r\n    }\r\n\r\n    this.nzVisible = false;\r\n    this.nzVisibleChange.emit(false);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  updateByDirective(): void {\r\n    this.setClassMap();\r\n    this.cdr.detectChanges();\r\n\r\n    Promise.resolve().then(() => {\r\n      this.updatePosition();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force the component to update its position.\r\n   */\r\n  updatePosition(): void {\r\n    if (this.origin && this.overlay && this.overlay.overlayRef) {\r\n      this.overlay.overlayRef.updatePosition();\r\n    }\r\n  }\r\n\r\n  onPositionChange(position: ConnectedOverlayPositionChange): void {\r\n    this._placement = getPlacementName(position)!;\r\n    this.setClassMap();\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  setClassMap(): void {\r\n    this._classMap = {\r\n      [this.nzOverlayClassName]: true,\r\n      [`${this._prefix}-${this._placement}`]: true\r\n    };\r\n  }\r\n\r\n  setOverlayOrigin(origin: CdkOverlayOrigin): void {\r\n    this.origin = origin;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private isTitleEmpty(): boolean {\r\n    return this.title instanceof TemplateRef ? false : this.title === '' || !isNotNil(this.title);\r\n  }\r\n\r\n  private isContentEmpty(): boolean {\r\n    return this.content instanceof TemplateRef ? false : this.content === '' || !isNotNil(this.content);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CdkConnectedOverlay } from '@angular/cdk/overlay';\r\nimport { ChangeDetectorRef, EventEmitter, Host, Input, OnChanges, Optional, Output, ViewChild } from '@angular/core';\r\nimport { toBoolean, NgStyleInterface, NzNoAnimationDirective, POSITION_MAP } from 'ng-zorro-antd/core';\r\n\r\nimport { NzTooltipTrigger } from '../nz-tooltip.definitions';\r\nimport { NzTooltipBaseComponent } from './nz-tooltip-base.component';\r\n\r\n/**\r\n * This component overrides some properties of `NzTooltipBaseComponent` and make them\r\n * input properties.\r\n *\r\n * @deprecated 9.0.0 tooltip and other components deprecate the old API. This\r\n * would be removed in 9.0.0.\r\n *\r\n * @example This example is what going to be removed\r\n *\r\n * ```html\r\n * <nz-tooltip>\r\n *   <a nz-tooltip></a>\r\n * </nz-tooltip>\r\n * ```\r\n */\r\nexport class NzTooltipBaseComponentLegacy extends NzTooltipBaseComponent implements OnChanges {\r\n  @ViewChild('overlay', { static: false }) overlay: CdkConnectedOverlay;\r\n\r\n  @Input() nzOverlayClassName = '';\r\n  @Input() nzOverlayStyle: NgStyleInterface = {};\r\n  @Input() nzMouseEnterDelay = 0.15; // second\r\n  @Input() nzMouseLeaveDelay = 0.1; // second\r\n\r\n  // TODO: placement logic should be removed into `NzTooltipBaseDirective` once this component is removed.\r\n  @Input()\r\n  set nzPlacement(value: string) {\r\n    if (value !== this._placement) {\r\n      this._placement = value;\r\n      this._positions = [POSITION_MAP[this.nzPlacement], ...this._positions];\r\n    }\r\n  }\r\n\r\n  get nzPlacement(): string {\r\n    return this._placement;\r\n  }\r\n\r\n  @Input()\r\n  set nzVisible(value: boolean) {\r\n    const visible = toBoolean(value);\r\n    if (this._visible !== visible) {\r\n      this._visible = visible;\r\n      this.nzVisibleChange.emit(visible);\r\n    }\r\n  }\r\n\r\n  get nzVisible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  @Input()\r\n  set nzTrigger(value: NzTooltipTrigger) {\r\n    this._trigger = value;\r\n    this._hasBackdrop = this._trigger === 'click';\r\n  }\r\n\r\n  get nzTrigger(): NzTooltipTrigger {\r\n    return this._trigger;\r\n  }\r\n\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\r\n    super(cdr, noAnimation);\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    Promise.resolve().then(() => {\r\n      this.updatePosition();\r\n    });\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { zoomBigMotion, NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\n\r\nimport { NzTooltipBaseComponentLegacy } from './base/nz-tooltip-base-legacy.component';\r\n\r\n@Component({\r\n  selector: 'nz-tooltip',\r\n  exportAs: 'nzTooltipComponent',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [zoomBigMotion],\r\n  templateUrl: './nz-tooltip.component.html',\r\n  preserveWhitespaces: false,\r\n  providers: [\r\n    {\r\n      provide: NzTooltipBaseComponentLegacy,\r\n      useExisting: NzToolTipComponent\r\n    }\r\n  ],\r\n  styles: [\r\n    `\r\n      .ant-tooltip {\r\n        position: relative;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzToolTipComponent extends NzTooltipBaseComponentLegacy {\r\n  @Input() nzTitle: NzTSType | null;\r\n  @ContentChild('nzTemplate', { static: true }) nzTitleTemplate: TemplateRef<void>;\r\n\r\n  constructor(cdr: ChangeDetectorRef, @Host() @Optional() public noAnimation?: NzNoAnimationDirective) {\r\n    super(cdr);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CdkOverlayOrigin } from '@angular/cdk/overlay';\r\nimport {\r\n  AfterViewInit,\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { warnDeprecation, NgStyleInterface, NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\nimport { Subject } from 'rxjs';\r\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\r\n\r\nimport { NzTooltipTrigger } from '../nz-tooltip.definitions';\r\nimport { NzTooltipBaseComponentLegacy } from './nz-tooltip-base-legacy.component';\r\nimport { NzTooltipBaseComponent } from './nz-tooltip-base.component';\r\n\r\nexport abstract class NzTooltipBaseDirective implements OnChanges, OnInit, OnDestroy, AfterViewInit {\r\n  directiveNameTitle?: NzTSType | null;\r\n  specificTitle?: NzTSType | null;\r\n  directiveNameContent?: NzTSType | null;\r\n  specificContent?: NzTSType | null;\r\n  specificTrigger?: NzTooltipTrigger;\r\n  specificPlacement?: string;\r\n  tooltipRef: ComponentRef<NzTooltipBaseComponent>;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipTitle`.\r\n   */\r\n  @Input() nzTitle: NzTSType | null;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzPopoverContent`.\r\n   */\r\n  @Input() nzContent: NzTSType | null;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipTrigger`.\r\n   */\r\n  @Input() nzTrigger: NzTooltipTrigger = 'hover';\r\n\r\n  /**\r\n   * @deprecated 9.0.0. This is deprecated and going to be removed in 9.0.0.\r\n   * Please use a more specific API. Like `nzTooltipPlacement`.\r\n   */\r\n  @Input() nzPlacement: string = 'top';\r\n\r\n  @Input() nzMouseEnterDelay: number;\r\n  @Input() nzMouseLeaveDelay: number;\r\n  @Input() nzOverlayClassName: string;\r\n  @Input() nzOverlayStyle: NgStyleInterface;\r\n  @Input() nzVisible: boolean;\r\n\r\n  /**\r\n   * For create tooltip dynamically. This should be override for each different component.\r\n   */\r\n  protected componentFactory: ComponentFactory<NzTooltipBaseComponent>;\r\n\r\n  /**\r\n   * This true title that would be used in other parts on this component.\r\n   */\r\n  protected get title(): NzTSType | null {\r\n    return this.specificTitle || this.directiveNameTitle || this.nzTitle;\r\n  }\r\n\r\n  protected get content(): NzTSType | null {\r\n    return this.specificContent || this.directiveNameContent || this.nzContent;\r\n  }\r\n\r\n  protected get placement(): string {\r\n    return this.specificPlacement || this.nzPlacement;\r\n  }\r\n\r\n  protected get trigger(): NzTooltipTrigger {\r\n    return this.specificTrigger || this.nzTrigger;\r\n  }\r\n\r\n  protected needProxyProperties = [\r\n    'nzOverlayClassName',\r\n    'nzOverlayStyle',\r\n    'nzMouseEnterDelay',\r\n    'nzMouseLeaveDelay',\r\n    'nzVisible',\r\n    'noAnimation'\r\n  ];\r\n\r\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\r\n\r\n  tooltip: NzTooltipBaseComponent;\r\n\r\n  isTooltipComponentVisible = false;\r\n\r\n  /**\r\n   * @deprecated 9.0.0. Tooltips would always be dynamic in 9.0.0.\r\n   */\r\n  protected isDynamicTooltip = false;\r\n\r\n  protected readonly triggerUnlisteners: Array<() => void> = [];\r\n\r\n  protected $destroy = new Subject<void>();\r\n\r\n  private delayTimer?: number;\r\n\r\n  constructor(\r\n    public elementRef: ElementRef,\r\n    protected hostView: ViewContainerRef,\r\n    protected resolver: ComponentFactoryResolver,\r\n    protected renderer: Renderer2,\r\n    /**\r\n     * @deprecated 9.0.0. This will always be `null`.\r\n     */\r\n    protected _tooltip?: NzTooltipBaseComponentLegacy,\r\n    protected noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzTrigger, specificTrigger } = changes;\r\n    const trigger = specificTrigger || nzTrigger;\r\n\r\n    if (trigger && !trigger.isFirstChange()) {\r\n      this.registerTriggers();\r\n    }\r\n\r\n    if (this.tooltip && this.isDynamicTooltip) {\r\n      this.updateChangedProperties(changes);\r\n    }\r\n\r\n    // TODO: enable these warning in 9.0.0.\r\n    // if (changes.nzTitle) {\r\n    //   warnDeprecation(\r\n    //     `'nzTitle' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipTitle' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzContent) {\r\n    //   warnDeprecation(\r\n    //     `'nzContent' of 'nz-popover' is deprecated and will be removed in 10.0.0. Please use 'nzPopoverContent' instead.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzPlacement) {\r\n    //   warnDeprecation(\r\n    //     `'nzPlacement' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipContent' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n\r\n    // if (changes.nzTrigger) {\r\n    //   warnDeprecation(\r\n    //     `'nzTrigger' of 'nz-tooltip' is deprecated and will be removed in 10.0.0. Please use 'nzTooltipTrigger' instead. The same with 'nz-popover' and 'nz-popconfirm'.`\r\n    //   );\r\n    // }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this._tooltip) {\r\n      this.createDynamicTooltipComponent();\r\n    } else {\r\n      warnDeprecation(\r\n        `'<nz-tooltip></nz-tooltip>', '<nz-popover></nz-popover>' and '<nz-popconfirm></nz-popconfirm>' is deprecated and will be removed in 9.0.0. Refer: https://ng.ant.design/components/tooltip/zh .`\r\n      );\r\n      this.tooltip = this._tooltip;\r\n      this.tooltip.setOverlayOrigin(this as CdkOverlayOrigin);\r\n    }\r\n\r\n    this.tooltip.nzVisibleChange\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        takeUntil(this.$destroy)\r\n      )\r\n      .subscribe((visible: boolean) => {\r\n        this.isTooltipComponentVisible = visible;\r\n        this.nzVisibleChange.emit(visible);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.registerTriggers();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.$destroy.next();\r\n    this.$destroy.complete();\r\n\r\n    // Clear toggling timer. Issue #3875 #4317 #4386\r\n    this.clearTogglingTimer();\r\n    this.removeTriggerListeners();\r\n\r\n    if (this.tooltipRef) {\r\n      this.tooltipRef.destroy();\r\n    }\r\n  }\r\n\r\n  show(): void {\r\n    this.tooltip.show();\r\n  }\r\n\r\n  hide(): void {\r\n    this.tooltip.hide();\r\n  }\r\n\r\n  /**\r\n   * Force the component to update its position.\r\n   */\r\n  updatePosition(): void {\r\n    if (this.tooltip && this.isDynamicTooltip) {\r\n      this.tooltip.updatePosition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a dynamic tooltip component. This method can be override.\r\n   */\r\n  protected createDynamicTooltipComponent(): void {\r\n    this.isDynamicTooltip = true;\r\n\r\n    this.tooltipRef = this.hostView.createComponent(this.componentFactory);\r\n\r\n    this.tooltip = this.tooltipRef.instance;\r\n    this.renderer.removeChild(\r\n      this.renderer.parentNode(this.elementRef.nativeElement),\r\n      this.tooltipRef.location.nativeElement\r\n    ); // Remove the component's DOM because it should be in the overlay container.\r\n\r\n    // If the tooltip component is dynamically created, we should set its origin before updating properties to\r\n    // the component.\r\n    this.tooltip.setOverlayOrigin(this as CdkOverlayOrigin);\r\n    // Update all properties to the component.\r\n    this.updateChangedProperties(this.needProxyProperties);\r\n  }\r\n\r\n  protected registerTriggers(): void {\r\n    // When the method gets invoked, all properties has been synced to the dynamic component.\r\n    // After removing the old API, we can just check the directive's own `nzTrigger`.\r\n    const el = this.elementRef.nativeElement;\r\n    const trigger = this.isDynamicTooltip ? this.trigger : this.tooltip.nzTrigger;\r\n\r\n    this.removeTriggerListeners();\r\n\r\n    if (trigger === 'hover') {\r\n      let overlayElement: HTMLElement;\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'mouseenter', () => {\r\n          this.delayEnterLeave(true, true, this.tooltip.nzMouseEnterDelay);\r\n        })\r\n      );\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'mouseleave', () => {\r\n          this.delayEnterLeave(true, false, this.tooltip.nzMouseLeaveDelay);\r\n          if (this.tooltip.overlay.overlayRef && !overlayElement) {\r\n            overlayElement = this.tooltip.overlay.overlayRef.overlayElement;\r\n            this.triggerUnlisteners.push(\r\n              this.renderer.listen(overlayElement, 'mouseenter', () => {\r\n                this.delayEnterLeave(false, true);\r\n              })\r\n            );\r\n            this.triggerUnlisteners.push(\r\n              this.renderer.listen(overlayElement, 'mouseleave', () => {\r\n                this.delayEnterLeave(false, false);\r\n              })\r\n            );\r\n          }\r\n        })\r\n      );\r\n    } else if (trigger === 'focus') {\r\n      this.triggerUnlisteners.push(this.renderer.listen(el, 'focus', () => this.show()));\r\n      this.triggerUnlisteners.push(this.renderer.listen(el, 'blur', () => this.hide()));\r\n    } else if (trigger === 'click') {\r\n      this.triggerUnlisteners.push(\r\n        this.renderer.listen(el, 'click', e => {\r\n          e.preventDefault();\r\n          this.show();\r\n        })\r\n      );\r\n    } // Else do nothing because user wants to control the visibility programmatically.\r\n  }\r\n\r\n  /**\r\n   * Sync changed properties to the component and trigger change detection in that component.\r\n   */\r\n  protected updateChangedProperties(propertiesOrChanges: string[] | SimpleChanges): void {\r\n    const isArray = Array.isArray(propertiesOrChanges);\r\n    const keys_ = isArray ? (propertiesOrChanges as string[]) : Object.keys(propertiesOrChanges);\r\n\r\n    // tslint:disable-next-line no-any\r\n    keys_.forEach((property: any) => {\r\n      if (this.needProxyProperties.indexOf(property) !== -1) {\r\n        // @ts-ignore\r\n        this.updateComponentValue(property, this[property]);\r\n      }\r\n    });\r\n\r\n    if (isArray) {\r\n      this.updateComponentValue('nzTitle', this.title);\r\n      this.updateComponentValue('nzContent', this.content);\r\n      this.updateComponentValue('nzPlacement', this.placement);\r\n      this.updateComponentValue('nzTrigger', this.trigger);\r\n    } else {\r\n      const c = propertiesOrChanges as SimpleChanges;\r\n      if (c.specificTitle || c.directiveNameTitle || c.nzTitle) {\r\n        this.updateComponentValue('nzTitle', this.title);\r\n      }\r\n      if (c.specificContent || c.directiveNameContent || c.nzContent) {\r\n        this.updateComponentValue('nzContent', this.content);\r\n      }\r\n      if (c.specificTrigger || c.nzTrigger) {\r\n        this.updateComponentValue('nzTrigger', this.trigger);\r\n      }\r\n      if (c.specificPlacement || c.nzPlacement) {\r\n        this.updateComponentValue('nzPlacement', this.placement);\r\n      }\r\n    }\r\n\r\n    this.tooltip.updateByDirective();\r\n  }\r\n\r\n  // tslint:disable-next-line no-any\r\n  private updateComponentValue(key: string, value: any): void {\r\n    if (typeof value !== 'undefined') {\r\n      // @ts-ignore\r\n      this.tooltip[key] = value;\r\n    }\r\n  }\r\n\r\n  private delayEnterLeave(isOrigin: boolean, isEnter: boolean, delay: number = -1): void {\r\n    if (this.delayTimer) {\r\n      this.clearTogglingTimer();\r\n    } else if (delay > 0) {\r\n      this.delayTimer = setTimeout(() => {\r\n        this.delayTimer = undefined;\r\n        isEnter ? this.show() : this.hide();\r\n      }, delay * 1000);\r\n    } else {\r\n      // `isOrigin` is used due to the tooltip will not hide immediately\r\n      // (may caused by the fade-out animation).\r\n      isEnter && isOrigin ? this.show() : this.hide();\r\n    }\r\n  }\r\n\r\n  private removeTriggerListeners(): void {\r\n    this.triggerUnlisteners.forEach(cancel => cancel());\r\n    this.triggerUnlisteners.length = 0;\r\n  }\r\n\r\n  private clearTogglingTimer(): void {\r\n    if (this.delayTimer) {\r\n      clearTimeout(this.delayTimer);\r\n      this.delayTimer = undefined;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ComponentFactory,\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  Optional,\r\n  Renderer2,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { NzNoAnimationDirective, NzTSType } from 'ng-zorro-antd/core';\r\n\r\nimport { NzTooltipBaseComponentLegacy } from './base/nz-tooltip-base-legacy.component';\r\nimport { NzTooltipBaseDirective } from './base/nz-tooltip-base.directive';\r\nimport { NzToolTipComponent } from './nz-tooltip.component';\r\nimport { NzTooltipTrigger } from './nz-tooltip.definitions';\r\n\r\n@Directive({\r\n  selector: '[nz-tooltip]',\r\n  exportAs: 'nzTooltip',\r\n  host: {\r\n    '[class.ant-tooltip-open]': 'isTooltipComponentVisible'\r\n  }\r\n})\r\nexport class NzTooltipDirective extends NzTooltipBaseDirective {\r\n  /**\r\n   * The title that should have highest priority.\r\n   */\r\n  @Input('nzTooltipTitle') specificTitle: NzTSType;\r\n\r\n  /**\r\n   * Use the directive's name as the title that have priority in the second place.\r\n   */\r\n  @Input('nz-tooltip') directiveNameTitle: NzTSType | null;\r\n\r\n  @Input('nzTooltipTrigger') specificTrigger: NzTooltipTrigger;\r\n  @Input('nzTooltipPlacement') specificPlacement: string;\r\n\r\n  componentFactory: ComponentFactory<NzToolTipComponent> = this.resolver.resolveComponentFactory(NzToolTipComponent);\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    hostView: ViewContainerRef,\r\n    resolver: ComponentFactoryResolver,\r\n    renderer: Renderer2,\r\n    @Optional() _tooltip?: NzTooltipBaseComponentLegacy,\r\n    @Host() @Optional() noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(elementRef, hostView, resolver, renderer, _tooltip, noAnimation);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule, NzNoAnimationModule, NzOverlayModule } from 'ng-zorro-antd/core';\r\n\r\n// NOTE: the `t` is not uppercase in directives. Change this would however introduce breaking change.\r\nimport { NzToolTipComponent } from './nz-tooltip.component';\r\nimport { NzTooltipDirective } from './nz-tooltip.directive';\r\n\r\n@NgModule({\r\n  declarations: [NzToolTipComponent, NzTooltipDirective],\r\n  exports: [NzToolTipComponent, NzTooltipDirective],\r\n  imports: [CommonModule, OverlayModule, NzAddOnModule, NzOverlayModule, NzNoAnimationModule],\r\n  entryComponents: [NzToolTipComponent]\r\n})\r\nexport class NzToolTipModule {}\r\n"]}