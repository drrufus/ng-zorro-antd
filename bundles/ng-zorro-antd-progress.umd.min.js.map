{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/progress/nz-progress-utils.ts","ng://ng-zorro-antd/progress/nz-progress.component.html","ng://ng-zorro-antd/progress/nz-progress.component.ts","ng://ng-zorro-antd/progress/nz-progress.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","sortGradient","gradients","tempArr","keys","forEach","value","formatKey","replace","isNaN","push","sort","a","b","handleLinearGradient","strokeColor","_a","from","_b","to","_c","direction","rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","map","join","i0.ɵɵelementContainerStart","i0.ɵɵelement","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtext","i0.ɵɵtextInterpolate1","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","_r672","i0.ɵɵstyleProp","ctx_r674","nzStrokeLinecap","strokeWidth","i0.ɵɵstyleSanitizer","ctx_r668","isGradient","nzStrokeColor","lineGradient","i0.ɵɵattribute","i_r680","color","ctx_r677","p_r681","stroke","nzPercent","i0.ɵɵnamespaceSVG","ctx_r669","nzWidth","i0.ɵɵclassProp","pathString","trackByFn","gradientIdSeed","statusIconNameMap","Map","statusColorMap","defaultFormatter","NzProgressComponent","nzConfigService","this","nzType","gradientId","progressCirclePath","index","cachedStatus","inferredStatus","destroy$","Subject","nzFormat","nzStatus","nzStrokeWidth","nzSize","ngOnChanges","changes","nzGapPosition","nzGapDegree","nzSuccessPercent","parseInt","toString","isNotNil","undefined","updateIcon","setStrokeColor","getCirclePaths","ngOnInit","_this","getConfigChangeEventForComponent","pipe","takeUntil","subscribe","ngOnDestroy","next","complete","ret","get","status","icon","isCircleStyle","values","radius","gapPosition","len","Math","PI","gapDegree","beginPositionX","beginPositionY","endPositionX","endPositionY","trailPathStyle","strokeDasharray","strokeDashoffset","transition","isSuccessPercent","strokePathStyle","reverse","circleGradient","offset","core","ɵɵdirectiveInject","core$1","NzConfigService","selectors","inputs","nzShowInfo","exportAs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","rf","ctx","WithConfig","InputNumber","NzProgressModule","imports","common","CommonModule","NzIconModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NzProgressColorGradient, NzProgressGradientProgress } from './nz-progress.definitions';\r\n\r\nfunction stripPercentToNumber(percent: string): number {\r\n  return +percent.replace('%', '');\r\n}\r\n\r\nexport const sortGradient = (gradients: NzProgressGradientProgress) => {\r\n  let tempArr: Array<{ key: number; value: string }> = [];\r\n\r\n  Object.keys(gradients).forEach(key => {\r\n    const value = gradients[key];\r\n    const formatKey = stripPercentToNumber(key);\r\n    if (!isNaN(formatKey)) {\r\n      tempArr.push({\r\n        key: formatKey,\r\n        value\r\n      });\r\n    }\r\n  });\r\n\r\n  tempArr = tempArr.sort((a, b) => a.key - b.key);\r\n  return tempArr;\r\n};\r\n\r\nexport const handleCircleGradient = (strokeColor: NzProgressGradientProgress): Array<{ offset: string; color: string }> => {\r\n  return sortGradient(strokeColor).map(({ key, value }) => ({ offset: `${key}%`, color: value }));\r\n};\r\n\r\nexport const handleLinearGradient = (strokeColor: NzProgressColorGradient) => {\r\n  const { from = '#1890ff', to = '#1890ff', direction = 'to right', ...rest } = strokeColor;\r\n  if (Object.keys(rest).length !== 0) {\r\n    const sortedGradients = sortGradient(rest as NzProgressGradientProgress)\r\n      .map(({ key, value }) => `${value} ${key}%`)\r\n      .join(', ');\r\n    return `linear-gradient(${direction}, ${sortedGradients})`;\r\n  }\r\n  return `linear-gradient(${direction}, ${from}, ${to})`;\r\n};\r\n","<ng-template #progressInfoTemplate>\r\n  <span class=\"ant-progress-text\" *ngIf=\"nzShowInfo\">\r\n    <ng-container\r\n      *ngIf=\"status === 'exception' || (status === 'success' && !nzFormat); else formatTemplate\"\r\n    >\r\n      <i nz-icon [nzType]=\"icon\"></i>\r\n    </ng-container>\r\n    <ng-template #formatTemplate>\r\n      {{ formatter(nzPercent) }}\r\n    </ng-template>\r\n  </span>\r\n</ng-template>\r\n\r\n<div\r\n  [ngClass]=\"'ant-progress ant-progress-status-' + status\"\r\n  [class.ant-progress-line]=\"nzType == 'line'\"\r\n  [class.ant-progress-small]=\"nzSize == 'small'\"\r\n  [class.ant-progress-show-info]=\"nzShowInfo\"\r\n  [class.ant-progress-circle]=\"isCircleStyle\"\r\n>\r\n  <!-- line progress -->\r\n  <div *ngIf=\"nzType === 'line'\">\r\n    <div class=\"ant-progress-outer\">\r\n      <div class=\"ant-progress-inner\">\r\n        <div\r\n          class=\"ant-progress-bg\"\r\n          [style.width.%]=\"nzPercent\"\r\n          [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\r\n          [style.background]=\"!isGradient ? nzStrokeColor : null\"\r\n          [style.background-image]=\"isGradient ? lineGradient : null\"\r\n          [style.height.px]=\"strokeWidth\"\r\n        ></div>\r\n        <div\r\n          *ngIf=\"nzSuccessPercent || nzSuccessPercent === 0\"\r\n          class=\"ant-progress-success-bg\"\r\n          [style.width.%]=\"nzSuccessPercent\"\r\n          [style.border-radius]=\"nzStrokeLinecap === 'round' ? '100px' : '0'\"\r\n          [style.height.px]=\"strokeWidth\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n    <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\r\n  </div>\r\n\r\n  <!-- circle / dashboard progress -->\r\n  <div\r\n    [style.width.px]=\"this.nzWidth\"\r\n    [style.height.px]=\"this.nzWidth\"\r\n    [style.fontSize.px]=\"this.nzWidth * 0.15 + 6\"\r\n    class=\"ant-progress-inner\"\r\n    [class.ant-progress-circle-gradient]=\"isGradient\"\r\n    *ngIf=\"isCircleStyle\"\r\n  >\r\n    <svg class=\"ant-progress-circle \" viewBox=\"0 0 100 100\">\r\n      <defs *ngIf=\"isGradient\">\r\n        <linearGradient [id]=\"'gradient-' + gradientId\" x1=\"100%\" y1=\"0%\" x2=\"0%\" y2=\"0%\">\r\n          <stop\r\n            *ngFor=\"let i of circleGradient\"\r\n            [attr.offset]=\"i.offset\"\r\n            [attr.stop-color]=\"i.color\"\r\n          ></stop>\r\n        </linearGradient>\r\n      </defs>\r\n      <path\r\n        class=\"ant-progress-circle-trail\"\r\n        stroke=\"#f3f3f3\"\r\n        fill-opacity=\"0\"\r\n        [attr.stroke-width]=\"strokeWidth\"\r\n        [attr.d]=\"pathString\"\r\n        [ngStyle]=\"trailPathStyle\"\r\n      ></path>\r\n      <path\r\n        *ngFor=\"let p of progressCirclePath; trackBy: trackByFn\"\r\n        class=\"ant-progress-circle-path\"\r\n        fill-opacity=\"0\"\r\n        [attr.d]=\"pathString\"\r\n        [attr.stroke-linecap]=\"nzStrokeLinecap\"\r\n        [attr.stroke]=\"p.stroke\"\r\n        [attr.stroke-width]=\"nzPercent ? strokeWidth : 0\"\r\n        [ngStyle]=\"p.strokePathStyle\"\r\n      ></path>\r\n    </svg>\r\n    <ng-template [ngTemplateOutlet]=\"progressInfoTemplate\"></ng-template>\r\n  </div>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { InputNumber, isNotNil, NgStyleInterface, NzConfigService, WithConfig } from 'ng-zorro-antd/core';\r\n\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { handleCircleGradient, handleLinearGradient } from './nz-progress-utils';\r\nimport {\r\n  NzProgressCirclePath,\r\n  NzProgressColorGradient,\r\n  NzProgressFormatter,\r\n  NzProgressGapPositionType,\r\n  NzProgressGradientProgress,\r\n  NzProgressStatusType,\r\n  NzProgressStrokeColorType,\r\n  NzProgressStrokeLinecapType,\r\n  NzProgressTypeType\r\n} from './nz-progress.definitions';\r\n\r\nlet gradientIdSeed = 0;\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'progress';\r\nconst statusIconNameMap = new Map([\r\n  ['success', 'check'],\r\n  ['exception', 'close']\r\n]);\r\nconst statusColorMap = new Map([\r\n  ['normal', '#108ee9'],\r\n  ['exception', '#ff5500'],\r\n  ['success', '#87d068']\r\n]);\r\nconst defaultFormatter: NzProgressFormatter = (p: number): string => `${p}%`;\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-progress',\r\n  exportAs: 'nzProgress',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-progress.component.html'\r\n})\r\nexport class NzProgressComponent implements OnChanges, OnInit, OnDestroy {\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, true) nzShowInfo: boolean;\r\n  @Input() nzWidth = 132;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzStrokeColor: NzProgressStrokeColorType;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: 'default' | 'small';\r\n  @Input() nzFormat?: NzProgressFormatter;\r\n  @Input() @InputNumber() nzSuccessPercent?: number;\r\n  @Input() @InputNumber() nzPercent: number = 0;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzStrokeWidth: number;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputNumber() nzGapDegree: number;\r\n  @Input() nzStatus: NzProgressStatusType;\r\n  @Input() nzType: NzProgressTypeType = 'line';\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'top') nzGapPosition: NzProgressGapPositionType;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'round') nzStrokeLinecap: NzProgressStrokeLinecapType;\r\n\r\n  /** Gradient style when `nzType` is `line`. */\r\n  lineGradient: string | null = null;\r\n\r\n  /** If user uses gradient color. */\r\n  isGradient = false;\r\n\r\n  /**\r\n   * Each progress whose `nzType` is circle or dashboard should have unique id to\r\n   * define `<linearGradient>`.\r\n   */\r\n  gradientId = gradientIdSeed++;\r\n\r\n  /** Paths to rendered in the template. */\r\n  progressCirclePath: NzProgressCirclePath[] = [];\r\n\r\n  circleGradient: Array<{ offset: string; color: string }>;\r\n\r\n  trailPathStyle: NgStyleInterface;\r\n\r\n  pathString: string;\r\n\r\n  icon: string;\r\n\r\n  trackByFn = (index: number) => `${index}`;\r\n\r\n  get formatter(): NzProgressFormatter {\r\n    return this.nzFormat || defaultFormatter;\r\n  }\r\n\r\n  get status(): NzProgressStatusType {\r\n    return this.nzStatus || this.inferredStatus;\r\n  }\r\n\r\n  get strokeWidth(): number {\r\n    return this.nzStrokeWidth || (this.nzType === 'line' && this.nzSize !== 'small' ? 8 : 6);\r\n  }\r\n\r\n  get isCircleStyle(): boolean {\r\n    return this.nzType === 'circle' || this.nzType === 'dashboard';\r\n  }\r\n\r\n  private cachedStatus: NzProgressStatusType = 'normal';\r\n  private inferredStatus: NzProgressStatusType = 'normal';\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(public nzConfigService: NzConfigService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzGapPosition, nzStrokeLinecap, nzStrokeColor, nzGapDegree, nzType, nzStatus, nzPercent, nzSuccessPercent } = changes;\r\n\r\n    if (nzStatus) {\r\n      this.cachedStatus = this.nzStatus || this.cachedStatus;\r\n    }\r\n\r\n    if (nzPercent || nzSuccessPercent) {\r\n      const fillAll = parseInt(this.nzPercent.toString(), 10) >= 100;\r\n      if (fillAll) {\r\n        if ((isNotNil(this.nzSuccessPercent) && this.nzSuccessPercent! >= 100) || this.nzSuccessPercent === undefined) {\r\n          this.inferredStatus = 'success';\r\n        }\r\n      } else {\r\n        this.inferredStatus = this.cachedStatus;\r\n      }\r\n    }\r\n\r\n    if (nzStatus || nzPercent || nzSuccessPercent) {\r\n      this.updateIcon();\r\n    }\r\n\r\n    if (nzStrokeColor) {\r\n      this.setStrokeColor();\r\n    }\r\n\r\n    if (nzGapPosition || nzStrokeLinecap || nzGapDegree || nzType || nzPercent || nzStrokeColor) {\r\n      this.getCirclePaths();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.nzConfigService\r\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.updateIcon();\r\n        this.setStrokeColor();\r\n        this.getCirclePaths();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private updateIcon(): void {\r\n    const ret = statusIconNameMap.get(this.status);\r\n    this.icon = ret ? ret + (this.isCircleStyle ? '-o' : '-circle-fill') : '';\r\n  }\r\n\r\n  /**\r\n   * Calculate paths when the type is circle or dashboard.\r\n   */\r\n  private getCirclePaths(): void {\r\n    if (!this.isCircleStyle) {\r\n      return;\r\n    }\r\n\r\n    const values = isNotNil(this.nzSuccessPercent) ? [this.nzSuccessPercent!, this.nzPercent] : [this.nzPercent];\r\n\r\n    // Calculate shared styles.\r\n    const radius = 50 - this.strokeWidth / 2;\r\n    const gapPosition = this.nzGapPosition || (this.nzType === 'circle' ? 'top' : 'bottom');\r\n    const len = Math.PI * 2 * radius;\r\n    const gapDegree = this.nzGapDegree || (this.nzType === 'circle' ? 0 : 75);\r\n\r\n    let beginPositionX = 0;\r\n    let beginPositionY = -radius;\r\n    let endPositionX = 0;\r\n    let endPositionY = radius * -2;\r\n\r\n    switch (gapPosition) {\r\n      case 'left':\r\n        beginPositionX = -radius;\r\n        beginPositionY = 0;\r\n        endPositionX = radius * 2;\r\n        endPositionY = 0;\r\n        break;\r\n      case 'right':\r\n        beginPositionX = radius;\r\n        beginPositionY = 0;\r\n        endPositionX = radius * -2;\r\n        endPositionY = 0;\r\n        break;\r\n      case 'bottom':\r\n        beginPositionY = radius;\r\n        endPositionY = radius * 2;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    this.pathString = `M 50,50 m ${beginPositionX},${beginPositionY}\r\n       a ${radius},${radius} 0 1 1 ${endPositionX},${-endPositionY}\r\n       a ${radius},${radius} 0 1 1 ${-endPositionX},${endPositionY}`;\r\n\r\n    this.trailPathStyle = {\r\n      strokeDasharray: `${len - gapDegree}px ${len}px`,\r\n      strokeDashoffset: `-${gapDegree / 2}px`,\r\n      transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s'\r\n    };\r\n\r\n    // Calculate styles for each path.\r\n    this.progressCirclePath = values\r\n      .map((value, index) => {\r\n        const isSuccessPercent = values.length === 2 && index === 0;\r\n        return {\r\n          stroke: this.isGradient && !isSuccessPercent ? `url(#gradient-${this.gradientId})` : null,\r\n          strokePathStyle: {\r\n            stroke: !this.isGradient ? (isSuccessPercent ? statusColorMap.get('success') : (this.nzStrokeColor as string)) : null,\r\n            transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s',\r\n            strokeDasharray: `${((value || 0) / 100) * (len - gapDegree)}px ${len}px`,\r\n            strokeDashoffset: `-${gapDegree / 2}px`\r\n          }\r\n        };\r\n      })\r\n      .reverse();\r\n  }\r\n\r\n  private setStrokeColor(): void {\r\n    const color = this.nzStrokeColor;\r\n    const isGradient = (this.isGradient = !!color && typeof color !== 'string');\r\n    if (isGradient && !this.isCircleStyle) {\r\n      this.lineGradient = handleLinearGradient(color as NzProgressColorGradient);\r\n    } else if (isGradient && this.isCircleStyle) {\r\n      this.circleGradient = handleCircleGradient(this.nzStrokeColor as NzProgressGradientProgress);\r\n    } else {\r\n      this.lineGradient = null;\r\n      this.circleGradient = [];\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzProgressComponent } from './nz-progress.component';\r\n\r\n@NgModule({\r\n  exports: [NzProgressComponent],\r\n  declarations: [NzProgressComponent],\r\n  imports: [CommonModule, NzIconModule]\r\n})\r\nexport class NzProgressModule {}\r\n"]}