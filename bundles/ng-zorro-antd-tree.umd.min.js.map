{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/tree/nz-tree-node.component.html","ng://ng-zorro-antd/tree/nz-tree-node.component.ts","ng://ng-zorro-antd/tree/nz-tree.service.ts","ng://ng-zorro-antd/tree/nz-tree.component.html","ng://ng-zorro-antd/tree/nz-tree.component.ts","ng://ng-zorro-antd/tree/nz-tree.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","i0.ɵɵtemplate","i0.ɵɵproperty","core","ɵɵpureFunction1","_c1","ctx_r1010","nzTreeNode","i0.ɵɵelement","i0.ɵɵclassProp","ctx_r1011","nzSelectMode","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵadvance","ctx_r1013","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelementEnd","ctx_r1002","ctx_r1022","isSwitcherClose","isLoading","i0.ɵɵpropertyInterpolate","i0.ɵɵattribute","ctx_r1003","canDraggable","ctx_r1024","nzShowExpand","noAnimation","nzNoAnimation","nzShowLine","nzExpandedIcon","nzDraggable","nzCheckable","nzAsyncData","nzExpandAll","nzShowIcon","nzSearchValue","nzHideUnMatched","nzBeforeDrop","nzTreeTemplate","undefined","NzTreeNodeComponent","nzTreeService","ngZone","renderer","elRef","cdr","prefixCls","nzNodeClass","nzNodeSwitcherClass","nzNodeContentClass","nzNodeCheckboxClass","nzNodeContentIconClass","nzNodeContentLoadingClass","destroy$","Subject","dragPos","dragPosClass","0","1","-1","_nzDraggable","_nzExpandAll","value","handDragEvent","warnDeprecation","isLeaf","isExpanded","icon","isDisabled","isMatched","canHide","setClassMap","_a","isSwitcherOpen","isChecked","isHalfChecked","isSelected","_b","_c","isDisableCheckbox","_d","_e","_f","onMousedown","event","preventDefault","nzClick","stopPropagation","isSelectable","eventNext","formatEvent","triggerEventChange$","next","nzDblClick","nzContextMenu","_clickExpand","children","setDisplayForParentNodes","setDisplayForChildNodes","parentNode","_this","map","node","targetNode","getParentNode","_clickCheckBox","isCheckStrictly","conduct","clearDragClass","forEach","e","removeClass","dragElement","nativeElement","handleDragStart","dataTransfer","setData","error","setSelectedNode","handleDragEnter","run","getSelectedNode","handleDragOver","dropPosition","calcDropPosition","addClass","handleDragLeave","handleDragDrop","dropEvent","dragEndEvent","dragNode","pos","subscribe","canDrop","dropAndApply","handleDragEnd","runOutsideAngular","fromEvent","pipe","takeUntil","complete","isTemplateRef","TemplateRef","markForCheck","ngOnInit","setNodeActive","setExpandedNodeList","setCheckedNodeList","component","eventTriggerChanged","filter","data","ngOnChanges","ngOnDestroy","t","ɵɵdirectiveInject","core$1","NzTreeBaseService","NgZone","Renderer2","ElementRef","ChangeDetectorRef","NzNoAnimationDirective","selectors","viewQuery","rf","ctx","i0.ɵɵstyleProp","pipes","NzHighlightPipe","encapsulation","animation","treeCollapseMotion","changeDetection","InputBoolean","NzTreeService","_super","ctx_r1026","treeTemplate","NzTreeServiceFactory","higherOrderService","treeService","NzTreeComponent","nzConfigService","call","nzCheckStrictly","_nzDefaultExpandAll","nzMultiple","nzExpandedKeysChange","EventEmitter","nzSelectedKeysChange","nzCheckedKeysChange","nzSearchValueChange","nzOnSearchNode","nzCheckBoxChange","nzExpandChange","nzOnDragStart","nzOnDragEnter","nzOnDragOver","nzOnDragLeave","nzOnDrop","nzOnDragEnd","nzDefaultSubject","ReplaySubject","classMap","onChange","onTouched","nzTreeTemplateChild","initNzData","type","keys","_searchValue","searchExpand","isNotNil","emit","rootNodes","nzBlockNode","writeValue","registerOnChange","fn","registerOnTouched","isArray","isMultiple","initTree","coerceTreeNodes","calcExpandedKeys","nzNodes","calcSelectedKeys","calcCheckedKeys","eventName","changes","NzConfigService","provide","useFactory","deps","SkipSelf","Optional","NzTreeHigherOrderServiceToken","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","consts","template","WithConfig","NzTreeBase","NzTreeModule","imports","common","CommonModule","NzAddOnModule","NzIconModule","NzNoAnimationModule","NzHighlightModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","<li #dragElement role=\"treeitem\" [style.display]=\"displayStyle\" [ngClass]=\"nzNodeClass\">\r\n  <ng-container *ngIf=\"nzShowExpand\">\r\n    <span [ngClass]=\"nzNodeSwitcherClass\" (click)=\"_clickExpand($event)\">\r\n      <ng-container *ngIf=\"isShowSwitchIcon\">\r\n        <ng-container *ngIf=\"!nzTreeNode.isLoading\">\r\n          <ng-template\r\n            *ngIf=\"isTemplateRef(nzExpandedIcon)\"\r\n            [ngTemplateOutlet]=\"nzExpandedIcon\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: nzTreeNode }\"\r\n          >\r\n          </ng-template>\r\n          <i\r\n            *ngIf=\"!isTemplateRef(nzExpandedIcon)\"\r\n            nz-icon\r\n            nzType=\"caret-down\"\r\n            [class.ant-select-switcher-icon]=\"nzSelectMode\"\r\n            [class.ant-tree-switcher-icon]=\"!nzSelectMode\"\r\n          >\r\n          </i>\r\n        </ng-container>\r\n        <i\r\n          *ngIf=\"nzTreeNode.isLoading\"\r\n          nz-icon\r\n          nzType=\"loading\"\r\n          [nzSpin]=\"true\"\r\n          class=\"ant-tree-switcher-loading-icon\"\r\n        ></i>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"nzShowLine\">\r\n        <ng-template\r\n          *ngIf=\"isTemplateRef(nzExpandedIcon)\"\r\n          [ngTemplateOutlet]=\"nzExpandedIcon\"\r\n          [ngTemplateOutletContext]=\"{ $implicit: nzTreeNode }\"\r\n        >\r\n        </ng-template>\r\n        <ng-container *ngIf=\"!isTemplateRef(nzExpandedIcon)\">\r\n          <i\r\n            *ngIf=\"isShowLineIcon\"\r\n            nz-icon\r\n            [nzType]=\"isSwitcherOpen ? 'minus-square' : 'plus-square'\"\r\n            class=\"ant-tree-switcher-line-icon\"\r\n          ></i>\r\n          <i *ngIf=\"!isShowLineIcon\" nz-icon nzType=\"file\" class=\"ant-tree-switcher-line-icon\"></i>\r\n        </ng-container>\r\n      </ng-container>\r\n    </span>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"nzCheckable\">\r\n    <span [ngClass]=\"nzNodeCheckboxClass\" (click)=\"_clickCheckBox($event)\">\r\n      <span\r\n        [class.ant-tree-checkbox-inner]=\"!nzSelectMode\"\r\n        [class.ant-select-tree-checkbox-inner]=\"nzSelectMode\"\r\n      ></span>\r\n    </span>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!nzTreeTemplate\">\r\n    <span\r\n      title=\"{{ nzTreeNode.title }}\"\r\n      [attr.draggable]=\"canDraggable\"\r\n      [attr.aria-grabbed]=\"canDraggable\"\r\n      [ngClass]=\"nzNodeContentClass\"\r\n      [class.draggable]=\"canDraggable\"\r\n    >\r\n      <span\r\n        *ngIf=\"nzTreeNode.icon && nzShowIcon\"\r\n        [class.ant-tree-icon__open]=\"isSwitcherOpen\"\r\n        [class.ant-tree-icon__close]=\"isSwitcherClose\"\r\n        [class.ant-tree-icon_loading]=\"nzTreeNode.isLoading\"\r\n        [ngClass]=\"nzNodeContentLoadingClass\"\r\n      >\r\n        <span [ngClass]=\"nzNodeContentIconClass\">\r\n          <i nz-icon *ngIf=\"nzIcon\" [nzType]=\"nzIcon\"></i>\r\n        </span>\r\n      </span>\r\n      <span\r\n        class=\"ant-tree-title\"\r\n        [innerHTML]=\"nzTreeNode.title | nzHighlight: nzSearchValue:'':'font-highlight'\"\r\n      >\r\n      </span>\r\n    </span>\r\n  </ng-container>\r\n  <ng-template\r\n    [ngTemplateOutlet]=\"nzTreeTemplate\"\r\n    [ngTemplateOutletContext]=\"{ $implicit: nzTreeNode }\"\r\n  >\r\n  </ng-template>\r\n\r\n  <ul\r\n    *ngIf=\"nzTreeNode.isExpanded\"\r\n    role=\"group\"\r\n    class=\"ant-tree-child-tree\"\r\n    [class.ant-tree-child-tree-open]=\"!nzSelectMode || nzTreeNode.isExpanded\"\r\n    data-expanded=\"true\"\r\n    [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n    @treeCollapseMotion\r\n  >\r\n    <nz-tree-node\r\n      *ngFor=\"let node of nzTreeNode.getChildren()\"\r\n      [nzTreeNode]=\"node\"\r\n      [nzShowExpand]=\"nzShowExpand\"\r\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n      [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\r\n      [nzSelectMode]=\"nzSelectMode\"\r\n      [nzShowLine]=\"nzShowLine\"\r\n      [nzExpandedIcon]=\"nzExpandedIcon\"\r\n      [nzDraggable]=\"nzDraggable\"\r\n      [nzCheckable]=\"nzCheckable\"\r\n      [nzAsyncData]=\"nzAsyncData\"\r\n      [nzExpandAll]=\"nzExpandAll\"\r\n      [nzShowIcon]=\"nzShowIcon\"\r\n      [nzSearchValue]=\"nzSearchValue\"\r\n      [nzHideUnMatched]=\"nzHideUnMatched\"\r\n      [nzBeforeDrop]=\"nzBeforeDrop\"\r\n      [nzTreeTemplate]=\"nzTreeTemplate\"\r\n    >\r\n    </nz-tree-node>\r\n  </ul>\r\n</li>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Host,\r\n  HostListener,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  InputBoolean,\r\n  NzFormatBeforeDropEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBaseService,\r\n  NzTreeNode,\r\n  treeCollapseMotion,\r\n  warnDeprecation\r\n} from 'ng-zorro-antd/core';\r\n\r\n@Component({\r\n  selector: 'nz-tree-node',\r\n  exportAs: 'nzTreeNode',\r\n  templateUrl: './nz-tree-node.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false,\r\n  animations: [treeCollapseMotion]\r\n})\r\nexport class NzTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\r\n  @ViewChild('dragElement', { static: false }) dragElement: ElementRef;\r\n\r\n  /**\r\n   * for global property\r\n   */\r\n  @Input() nzTreeNode: NzTreeNode;\r\n  @Input() @InputBoolean() nzShowLine: boolean;\r\n  @Input() @InputBoolean() nzShowExpand: boolean;\r\n  @Input() @InputBoolean() nzCheckable: boolean;\r\n  @Input() @InputBoolean() nzAsyncData: boolean;\r\n  @Input() @InputBoolean() nzHideUnMatched = false;\r\n  @Input() @InputBoolean() nzNoAnimation = false;\r\n  @Input() @InputBoolean() nzSelectMode = false;\r\n  @Input() @InputBoolean() nzShowIcon = false;\r\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n  @Input() nzSearchValue = '';\r\n\r\n  @Input()\r\n  set nzDraggable(value: boolean) {\r\n    this._nzDraggable = value;\r\n    this.handDragEvent();\r\n  }\r\n\r\n  get nzDraggable(): boolean {\r\n    return this._nzDraggable;\r\n  }\r\n\r\n  /**\r\n   * @deprecated use `nzExpandAll` instead.\r\n   */\r\n  @Input()\r\n  set nzDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'nzDefaultExpandAll' is going to be removed in 9.0.0. Please use 'nzExpandAll' instead.`);\r\n    this._nzExpandAll = value;\r\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\r\n      this.nzTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get nzDefaultExpandAll(): boolean {\r\n    return this._nzExpandAll;\r\n  }\r\n\r\n  // default set\r\n  @Input()\r\n  set nzExpandAll(value: boolean) {\r\n    this._nzExpandAll = value;\r\n    if (value && this.nzTreeNode && !this.nzTreeNode.isLeaf) {\r\n      this.nzTreeNode.isExpanded = true;\r\n    }\r\n  }\r\n\r\n  get nzExpandAll(): boolean {\r\n    return this._nzExpandAll;\r\n  }\r\n\r\n  // default var\r\n  prefixCls = 'ant-tree';\r\n  nzNodeClass = {};\r\n  nzNodeSwitcherClass = {};\r\n  nzNodeContentClass = {};\r\n  nzNodeCheckboxClass = {};\r\n  nzNodeContentIconClass = {};\r\n  nzNodeContentLoadingClass = {};\r\n\r\n  /**\r\n   * drag var\r\n   */\r\n  destroy$ = new Subject();\r\n  dragPos = 2;\r\n  dragPosClass: { [key: string]: string } = {\r\n    '0': 'drag-over',\r\n    '1': 'drag-over-gap-bottom',\r\n    '-1': 'drag-over-gap-top'\r\n  };\r\n\r\n  /**\r\n   * default set\r\n   */\r\n  _nzDraggable = false;\r\n  _nzExpandAll = false;\r\n\r\n  get nzIcon(): string {\r\n    return this.nzTreeNode.icon;\r\n  }\r\n\r\n  get canDraggable(): boolean | null {\r\n    return this.nzDraggable && !this.nzTreeNode.isDisabled ? true : null;\r\n  }\r\n\r\n  get isShowLineIcon(): boolean {\r\n    return !this.nzTreeNode.isLeaf && this.nzShowLine;\r\n  }\r\n\r\n  get isShowSwitchIcon(): boolean {\r\n    return !this.nzTreeNode.isLeaf && !this.nzShowLine;\r\n  }\r\n\r\n  get isSwitcherOpen(): boolean {\r\n    return this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\r\n  }\r\n\r\n  get isSwitcherClose(): boolean {\r\n    return !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf;\r\n  }\r\n\r\n  get displayStyle(): string {\r\n    // to hide unmatched nodes\r\n    return this.nzSearchValue &&\r\n      this.nzHideUnMatched &&\r\n      !this.nzTreeNode.isMatched &&\r\n      !this.nzTreeNode.isExpanded &&\r\n      this.nzTreeNode.canHide\r\n      ? 'none'\r\n      : '';\r\n  }\r\n\r\n  /**\r\n   * reset node class\r\n   */\r\n  setClassMap(): void {\r\n    this.prefixCls = this.nzSelectMode ? 'ant-select-tree' : 'ant-tree';\r\n    this.nzNodeClass = {\r\n      [`${this.prefixCls}-treenode-disabled`]: this.nzTreeNode.isDisabled,\r\n      [`${this.prefixCls}-treenode-switcher-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-treenode-switcher-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-treenode-checkbox-checked`]: this.nzTreeNode.isChecked,\r\n      [`${this.prefixCls}-treenode-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-treenode-selected`]: this.nzTreeNode.isSelected,\r\n      [`${this.prefixCls}-treenode-loading`]: this.nzTreeNode.isLoading\r\n    };\r\n    this.nzNodeSwitcherClass = {\r\n      [`${this.prefixCls}-switcher`]: true,\r\n      [`${this.prefixCls}-switcher-noop`]: this.nzTreeNode.isLeaf,\r\n      [`${this.prefixCls}-switcher_open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-switcher_close`]: this.isSwitcherClose\r\n    };\r\n\r\n    this.nzNodeCheckboxClass = {\r\n      [`${this.prefixCls}-checkbox`]: true,\r\n      [`${this.prefixCls}-checkbox-checked`]: this.nzTreeNode.isChecked,\r\n      [`${this.prefixCls}-checkbox-indeterminate`]: this.nzTreeNode.isHalfChecked,\r\n      [`${this.prefixCls}-checkbox-disabled`]: this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox\r\n    };\r\n\r\n    this.nzNodeContentClass = {\r\n      [`${this.prefixCls}-node-content-wrapper`]: true,\r\n      [`${this.prefixCls}-node-content-wrapper-open`]: this.isSwitcherOpen,\r\n      [`${this.prefixCls}-node-content-wrapper-close`]: this.isSwitcherClose,\r\n      [`${this.prefixCls}-node-selected`]: this.nzTreeNode.isSelected\r\n    };\r\n    this.nzNodeContentIconClass = {\r\n      [`${this.prefixCls}-iconEle`]: true,\r\n      [`${this.prefixCls}-icon__customize`]: true\r\n    };\r\n    this.nzNodeContentLoadingClass = {\r\n      [`${this.prefixCls}-iconEle`]: true\r\n    };\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event'])\r\n  onMousedown(event: MouseEvent): void {\r\n    if (this.nzSelectMode) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * click node to select, 200ms to dbl click\r\n   */\r\n  @HostListener('click', ['$event'])\r\n  nzClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.nzTreeNode.isSelectable && !this.nzTreeNode.isDisabled) {\r\n      this.nzTreeNode.isSelected = !this.nzTreeNode.isSelected;\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('click', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  nzDblClick(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('dblclick', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * @param event\r\n   */\r\n  @HostListener('contextmenu', ['$event'])\r\n  nzContextMenu(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const eventNext = this.nzTreeService.formatEvent('contextmenu', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * collapse node\r\n   * @param event\r\n   */\r\n  _clickExpand(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (!this.nzTreeNode.isLoading && !this.nzTreeNode.isLeaf) {\r\n      // set async state\r\n      if (this.nzAsyncData && this.nzTreeNode.children.length === 0 && !this.nzTreeNode.isExpanded) {\r\n        this.nzTreeNode.isLoading = true;\r\n      }\r\n      this.nzTreeNode.isExpanded = !this.nzTreeNode.isExpanded;\r\n      if (this.nzTreeNode.isMatched) {\r\n        this.setDisplayForParentNodes(this.nzTreeNode);\r\n      }\r\n      this.setDisplayForChildNodes(this.nzTreeNode);\r\n      const eventNext = this.nzTreeService.formatEvent('expand', this.nzTreeNode, event);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    }\r\n  }\r\n\r\n  private setDisplayForChildNodes(parentNode: NzTreeNode): void {\r\n    const { children } = parentNode;\r\n    if (children.length > 0) {\r\n      children.map(node => {\r\n        const canHide = !node.isMatched;\r\n        node.canHide = canHide;\r\n        this.setDisplayForChildNodes(node);\r\n      });\r\n    }\r\n  }\r\n\r\n  private setDisplayForParentNodes(targetNode: NzTreeNode): void {\r\n    const parentNode = targetNode.getParentNode();\r\n    if (parentNode) {\r\n      parentNode.canHide = false;\r\n      this.setDisplayForParentNodes(parentNode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * check node\r\n   * @param event\r\n   */\r\n  _clickCheckBox(event: MouseEvent): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    // return if node is disabled\r\n    if (this.nzTreeNode.isDisabled || this.nzTreeNode.isDisableCheckbox) {\r\n      return;\r\n    }\r\n    this.nzTreeNode.isChecked = !this.nzTreeNode.isChecked;\r\n    this.nzTreeNode.isHalfChecked = false;\r\n    if (!this.nzTreeService.isCheckStrictly) {\r\n      this.nzTreeService.conduct(this.nzTreeNode);\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('check', this.nzTreeNode, event);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  /**\r\n   * drag event\r\n   * @param e\r\n   */\r\n  clearDragClass(): void {\r\n    const dragClass = ['drag-over-gap-top', 'drag-over-gap-bottom', 'drag-over'];\r\n    dragClass.forEach(e => {\r\n      this.renderer.removeClass(this.dragElement.nativeElement, e);\r\n    });\r\n  }\r\n\r\n  handleDragStart(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    try {\r\n      // ie throw error\r\n      // firefox-need-it\r\n      e.dataTransfer!.setData('text/plain', this.nzTreeNode.key!);\r\n    } catch (error) {\r\n      // empty\r\n    }\r\n    this.nzTreeService.setSelectedNode(this.nzTreeNode);\r\n    this.nzTreeNode.isExpanded = false;\r\n    const eventNext = this.nzTreeService.formatEvent('dragstart', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragEnter(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    // reset position\r\n    this.dragPos = 2;\r\n    this.ngZone.run(() => {\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (node && node.key !== this.nzTreeNode.key && !this.nzTreeNode.isExpanded && !this.nzTreeNode.isLeaf) {\r\n        this.nzTreeNode.isExpanded = true;\r\n      }\r\n      const eventNext = this.nzTreeService.formatEvent('dragenter', this.nzTreeNode, e);\r\n      this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n    });\r\n  }\r\n\r\n  handleDragOver(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const dropPosition = this.nzTreeService.calcDropPosition(e);\r\n    if (this.dragPos !== dropPosition) {\r\n      this.clearDragClass();\r\n      this.dragPos = dropPosition;\r\n      // leaf node will pass\r\n      if (!(this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\r\n        this.renderer.addClass(this.dragElement.nativeElement, this.dragPosClass[this.dragPos]);\r\n      }\r\n    }\r\n    const eventNext = this.nzTreeService.formatEvent('dragover', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragLeave(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n    });\r\n    const eventNext = this.nzTreeService.formatEvent('dragleave', this.nzTreeNode, e);\r\n    this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n  }\r\n\r\n  handleDragDrop(e: DragEvent): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      this.clearDragClass();\r\n      const node = this.nzTreeService.getSelectedNode();\r\n      if (!node || (node && node.key === this.nzTreeNode.key) || (this.dragPos === 0 && this.nzTreeNode.isLeaf)) {\r\n        return;\r\n      }\r\n      // pass if node is leafNo\r\n      const dropEvent = this.nzTreeService.formatEvent('drop', this.nzTreeNode, e);\r\n      const dragEndEvent = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\r\n      if (this.nzBeforeDrop) {\r\n        this.nzBeforeDrop({\r\n          dragNode: this.nzTreeService.getSelectedNode()!,\r\n          node: this.nzTreeNode,\r\n          pos: this.dragPos\r\n        }).subscribe((canDrop: boolean) => {\r\n          if (canDrop) {\r\n            this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\r\n          }\r\n          this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n          this.nzTreeService!.triggerEventChange$!.next(dragEndEvent);\r\n        });\r\n      } else if (this.nzTreeNode) {\r\n        this.nzTreeService.dropAndApply(this.nzTreeNode, this.dragPos);\r\n        this.nzTreeService!.triggerEventChange$!.next(dropEvent);\r\n      }\r\n    });\r\n  }\r\n\r\n  handleDragEnd(e: DragEvent): void {\r\n    e.stopPropagation();\r\n    this.ngZone.run(() => {\r\n      // if user do not custom beforeDrop\r\n      if (!this.nzBeforeDrop) {\r\n        const eventNext = this.nzTreeService.formatEvent('dragend', this.nzTreeNode, e);\r\n        this.nzTreeService!.triggerEventChange$!.next(eventNext);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listening to dragging events.\r\n   */\r\n  handDragEvent(): void {\r\n    this.ngZone.runOutsideAngular(() => {\r\n      if (this.nzDraggable) {\r\n        this.destroy$ = new Subject();\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragstart')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragStart(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragenter')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnter(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragover')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragOver(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragleave')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragLeave(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'drop')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragDrop(e));\r\n        fromEvent<DragEvent>(this.elRef.nativeElement, 'dragend')\r\n          .pipe(takeUntil(this.destroy$))\r\n          .subscribe((e: DragEvent) => this.handleDragEnd(e));\r\n      } else {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  isTemplateRef(value: {}): boolean {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  markForCheck(): void {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  constructor(\r\n    public nzTreeService: NzTreeBaseService,\r\n    private ngZone: NgZone,\r\n    private renderer: Renderer2,\r\n    private elRef: ElementRef,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // init expanded / selected / checked list\r\n    if (this.nzTreeNode.isSelected) {\r\n      this.nzTreeService.setNodeActive(this.nzTreeNode);\r\n    }\r\n    if (this.nzTreeNode.isExpanded) {\r\n      this.nzTreeService.setExpandedNodeList(this.nzTreeNode);\r\n    }\r\n    if (this.nzTreeNode.isChecked) {\r\n      this.nzTreeService.setCheckedNodeList(this.nzTreeNode);\r\n    }\r\n    // TODO\r\n    this.nzTreeNode.component = this;\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(\r\n        filter(data => data.node!.key === this.nzTreeNode.key),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.setClassMap();\r\n        this.markForCheck();\r\n      });\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnChanges(): void {\r\n    this.setClassMap();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { NzTreeBaseService } from 'ng-zorro-antd/core';\r\n\r\n@Injectable()\r\nexport class NzTreeService extends NzTreeBaseService {}\r\n","<ul role=\"tree\" unselectable=\"on\" [ngClass]=\"classMap\">\r\n  <ng-container *ngFor=\"let node of nzNodes\">\r\n    <nz-tree-node\r\n      [nzTreeNode]=\"node\"\r\n      [nzSelectMode]=\"nzSelectMode\"\r\n      [nzShowLine]=\"nzShowLine\"\r\n      [nzExpandedIcon]=\"nzExpandedIcon\"\r\n      [nzDraggable]=\"nzDraggable\"\r\n      [nzCheckable]=\"nzCheckable\"\r\n      [nzShowExpand]=\"nzShowExpand\"\r\n      [nzAsyncData]=\"nzAsyncData\"\r\n      [nzSearchValue]=\"nzSearchValue\"\r\n      [nzHideUnMatched]=\"nzHideUnMatched\"\r\n      [nzBeforeDrop]=\"nzBeforeDrop\"\r\n      [nzExpandAll]=\"nzExpandAll\"\r\n      [nzShowIcon]=\"nzShowIcon\"\r\n      [nzTreeTemplate]=\"treeTemplate\"\r\n      [@.disabled]=\"noAnimation?.nzNoAnimation\"\r\n      [nzNoAnimation]=\"noAnimation?.nzNoAnimation\"\r\n    >\r\n    </nz-tree-node>\r\n  </ng-container>\r\n</ul>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Host,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Output,\r\n  SimpleChange,\r\n  SkipSelf,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport {\r\n  InputBoolean,\r\n  isNotNil,\r\n  NzConfigService,\r\n  NzFormatBeforeDropEvent,\r\n  NzFormatEmitEvent,\r\n  NzNoAnimationDirective,\r\n  NzTreeBase,\r\n  NzTreeBaseService,\r\n  NzTreeHigherOrderServiceToken,\r\n  NzTreeNode,\r\n  warnDeprecation,\r\n  WithConfig\r\n} from 'ng-zorro-antd/core';\r\n\r\nimport { NzTreeService } from './nz-tree.service';\r\n\r\nexport function NzTreeServiceFactory(higherOrderService: NzTreeBaseService, treeService: NzTreeService): NzTreeBaseService {\r\n  return higherOrderService ? higherOrderService : treeService;\r\n}\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'tree';\r\n\r\n@Component({\r\n  selector: 'nz-tree',\r\n  exportAs: 'nzTree',\r\n  templateUrl: './nz-tree.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    NzTreeService,\r\n    {\r\n      provide: NzTreeBaseService,\r\n      useFactory: NzTreeServiceFactory,\r\n      deps: [[new SkipSelf(), new Optional(), NzTreeHigherOrderServiceToken], NzTreeService]\r\n    },\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NzTreeComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NzTreeComponent extends NzTreeBase implements OnInit, OnDestroy, ControlValueAccessor, OnChanges {\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzShowIcon: boolean;\r\n  @Input() @InputBoolean() nzShowExpand: boolean = true;\r\n  @Input() @InputBoolean() nzShowLine = false;\r\n  @Input() nzExpandedIcon: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @Input() @InputBoolean() nzCheckable = false;\r\n  @Input() @InputBoolean() nzAsyncData = false;\r\n  @Input() @InputBoolean() nzDraggable: boolean = false;\r\n\r\n  @Input() @InputBoolean() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) nzHideUnMatched: boolean;\r\n  @Input() @InputBoolean() nzSelectMode = false;\r\n  @Input() @InputBoolean() nzCheckStrictly = false;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, false) @InputBoolean() nzBlockNode: boolean;\r\n  @Input() @InputBoolean() nzExpandAll = false;\r\n\r\n  @Input() nzTreeTemplate: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  @ContentChild('nzTreeTemplate', { static: true }) nzTreeTemplateChild: TemplateRef<{ $implicit: NzTreeNode }>;\r\n  get treeTemplate(): TemplateRef<{ $implicit: NzTreeNode }> {\r\n    return this.nzTreeTemplate || this.nzTreeTemplateChild;\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 use `nzExpandAll` instead.\r\n   */\r\n  @Input()\r\n  @InputBoolean()\r\n  set nzDefaultExpandAll(value: boolean) {\r\n    warnDeprecation(`'nzDefaultExpandAll' would be removed in 9.0.0. Please use 'nzExpandAll' instead.`);\r\n    this.nzExpandAll = value;\r\n    this._nzDefaultExpandAll = value;\r\n  }\r\n\r\n  get nzDefaultExpandAll(): boolean {\r\n    return this._nzDefaultExpandAll;\r\n  }\r\n\r\n  private _nzDefaultExpandAll = false;\r\n\r\n  @Input() nzBeforeDrop: (confirm: NzFormatBeforeDropEvent) => Observable<boolean>;\r\n\r\n  @Input() @InputBoolean() nzMultiple = false;\r\n\r\n  @Input()\r\n  // tslint:disable-next-line:no-any\r\n  set nzData(value: any[]) {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `nzExpandedKeys` instead.\r\n   */\r\n  @Input()\r\n  set nzDefaultExpandedKeys(value: string[]) {\r\n    warnDeprecation(`'nzDefaultExpandedKeys' would be removed in 9.0.0. Please use 'nzExpandedKeys' instead.`);\r\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `nzSelectedKeys` instead.\r\n   */\r\n  @Input()\r\n  set nzDefaultSelectedKeys(value: string[]) {\r\n    warnDeprecation(`'nzDefaultSelectedKeys' would be removed in 9.0.0. Please use 'nzSelectedKeys' instead.`);\r\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  /**\r\n   * @deprecated 9.0.0 - use `nzCheckedKeys` instead.\r\n   */\r\n  @Input()\r\n  set nzDefaultCheckedKeys(value: string[]) {\r\n    warnDeprecation(`'nzDefaultCheckedKeys' would be removed in 9.0.0. Please use 'nzCheckedKeys' instead.`);\r\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzExpandedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzExpandedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzSelectedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzSelectedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzCheckedKeys(value: string[]) {\r\n    this.nzDefaultSubject.next({ type: 'nzCheckedKeys', keys: value });\r\n  }\r\n\r\n  @Input()\r\n  set nzSearchValue(value: string) {\r\n    this._searchValue = value;\r\n    this.nzTreeService.searchExpand(value);\r\n    if (isNotNil(value)) {\r\n      this.nzSearchValueChange.emit(this.nzTreeService.formatEvent('search', null, null));\r\n      /**\r\n       * @deprecated 9.0.0 - use `nzOnSearchNode` instead.\r\n       * Hide warning, need remove next version\r\n       */\r\n      this.nzOnSearchNode.emit(this.nzTreeService.formatEvent('search', null, null));\r\n    }\r\n  }\r\n\r\n  get nzSearchValue(): string {\r\n    return this._searchValue;\r\n  }\r\n\r\n  /**\r\n   * To render nodes if root is changed.\r\n   */\r\n  get nzNodes(): NzTreeNode[] {\r\n    return this.nzTreeService.rootNodes;\r\n  }\r\n\r\n  @Output() readonly nzExpandedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly nzSelectedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n  @Output() readonly nzCheckedKeysChange: EventEmitter<string[]> = new EventEmitter<string[]>();\r\n\r\n  @Output() readonly nzSearchValueChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  /**\r\n   * @deprecated use `nzSearchValueChange` instead.\r\n   */\r\n  @Output() readonly nzOnSearchNode = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly nzClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzDblClick = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzContextMenu = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzCheckBoxChange = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzExpandChange = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  @Output() readonly nzOnDragStart = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzOnDragEnter = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzOnDragOver = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzOnDragLeave = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzOnDrop = new EventEmitter<NzFormatEmitEvent>();\r\n  @Output() readonly nzOnDragEnd = new EventEmitter<NzFormatEmitEvent>();\r\n\r\n  _searchValue: string;\r\n  nzDefaultSubject = new ReplaySubject<{ type: string; keys: string[] }>(6);\r\n  destroy$ = new Subject();\r\n  prefixCls = 'ant-tree';\r\n  classMap = {};\r\n\r\n  onChange: (value: NzTreeNode[]) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n\r\n  setClassMap(): void {\r\n    this.classMap = {\r\n      [this.prefixCls]: true,\r\n      [this.prefixCls + '-show-line']: this.nzShowLine,\r\n      [`${this.prefixCls}-icon-hide`]: !this.nzShowIcon,\r\n      [`${this.prefixCls}-block-node`]: this.nzBlockNode,\r\n      ['draggable-tree']: this.nzDraggable,\r\n      ['ant-select-tree']: this.nzSelectMode\r\n    };\r\n  }\r\n\r\n  writeValue(value: NzTreeNode[]): void {\r\n    this.initNzData(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: NzTreeNode[]) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  // tslint:disable-next-line:no-any\r\n  initNzData(value: any[]): void {\r\n    if (Array.isArray(value)) {\r\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\r\n      this.nzTreeService.isMultiple = this.nzMultiple;\r\n      this.nzTreeService.initTree(this.coerceTreeNodes(value));\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    nzTreeService: NzTreeBaseService,\r\n    public nzConfigService: NzConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    @Host() @Optional() public noAnimation?: NzNoAnimationDirective\r\n  ) {\r\n    super(nzTreeService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setClassMap();\r\n    this.nzDefaultSubject.pipe(takeUntil(this.destroy$)).subscribe((data: { type: string; keys: string[] }) => {\r\n      if (!data || !data.keys) {\r\n        return;\r\n      }\r\n      switch (data.type) {\r\n        case 'nzExpandedKeys':\r\n          this.nzTreeService.calcExpandedKeys(data.keys, this.nzNodes);\r\n          this.nzExpandedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzSelectedKeys':\r\n          this.nzTreeService.calcSelectedKeys(data.keys, this.nzNodes, this.nzMultiple);\r\n          this.nzSelectedKeysChange.emit(data.keys);\r\n          break;\r\n        case 'nzCheckedKeys':\r\n          this.nzTreeService.calcCheckedKeys(data.keys, this.nzNodes, this.nzCheckStrictly);\r\n          this.nzCheckedKeysChange.emit(data.keys);\r\n          break;\r\n      }\r\n      this.cdr.markForCheck();\r\n    });\r\n    this.nzTreeService\r\n      .eventTriggerChanged()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(data => {\r\n        switch (data.eventName) {\r\n          case 'expand':\r\n            this.nzExpandChange.emit(data);\r\n            break;\r\n          case 'click':\r\n            this.nzClick.emit(data);\r\n            break;\r\n          case 'check':\r\n            this.nzCheckBoxChange.emit(data);\r\n            break;\r\n          case 'dblclick':\r\n            this.nzDblClick.emit(data);\r\n            break;\r\n          case 'contextmenu':\r\n            this.nzContextMenu.emit(data);\r\n            break;\r\n          // drag drop\r\n          case 'dragstart':\r\n            this.nzOnDragStart.emit(data);\r\n            break;\r\n          case 'dragenter':\r\n            this.nzOnDragEnter.emit(data);\r\n            break;\r\n          case 'dragover':\r\n            this.nzOnDragOver.emit(data);\r\n            break;\r\n          case 'dragleave':\r\n            this.nzOnDragLeave.emit(data);\r\n            break;\r\n          case 'drop':\r\n            this.nzOnDrop.emit(data);\r\n            break;\r\n          case 'dragend':\r\n            this.nzOnDragEnd.emit(data);\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\r\n    if (changes.nzCheckStrictly) {\r\n      this.nzTreeService.isCheckStrictly = this.nzCheckStrictly;\r\n    }\r\n    if (changes.nzMultiple) {\r\n      this.nzTreeService.isMultiple = this.nzMultiple;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule, NzHighlightModule, NzNoAnimationModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzTreeNodeComponent } from './nz-tree-node.component';\r\nimport { NzTreeComponent } from './nz-tree.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NzAddOnModule, NzIconModule, NzNoAnimationModule, NzHighlightModule],\r\n  declarations: [NzTreeComponent, NzTreeNodeComponent],\r\n  exports: [NzTreeComponent, NzTreeNodeComponent]\r\n})\r\nexport class NzTreeModule {}\r\n"]}