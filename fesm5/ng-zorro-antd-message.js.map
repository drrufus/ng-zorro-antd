{"version":3,"file":"ng-zorro-antd-message.js","sources":["ng://ng-zorro-antd/message/nz-message-base.service.ts","ng://ng-zorro-antd/message/nz-message-config.ts","ng://ng-zorro-antd/message/nz-message-container.component.html","ng://ng-zorro-antd/message/nz-message-container.component.ts","ng://ng-zorro-antd/message/nz-message.service.module.ts","ng://ng-zorro-antd/message/nz-message.service.ts","ng://ng-zorro-antd/message/nz-message.component.ts","ng://ng-zorro-antd/message/nz-message.component.html","ng://ng-zorro-antd/message/nz-message.module.ts","ng://ng-zorro-antd/message/public-api.ts","ng://ng-zorro-antd/message/ng-zorro-antd-message.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injector, Type } from '@angular/core';\r\nimport { NzSingletonService, warnDeprecation } from 'ng-zorro-antd/core';\r\n\r\nimport { NzMessageConfigLegacy } from './nz-message-config';\r\nimport { NzMessageContainerComponent } from './nz-message-container.component';\r\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\r\n\r\nlet globalCounter = 0;\r\n\r\nexport class NzMessageBaseService<\r\n  ContainerClass extends NzMessageContainerComponent,\r\n  MessageData,\r\n  MessageConfig extends NzMessageConfigLegacy\r\n> {\r\n  protected _container: ContainerClass;\r\n\r\n  constructor(\r\n    private nzSingletonService: NzSingletonService,\r\n    private overlay: Overlay,\r\n    private containerClass: Type<ContainerClass>,\r\n    private injector: Injector,\r\n    private cfr: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private name: string = ''\r\n  ) {\r\n    this._container = this.withContainer();\r\n    this.nzSingletonService.registerSingletonWithKey(this.name, this._container);\r\n  }\r\n\r\n  remove(messageId?: string): void {\r\n    if (messageId) {\r\n      this._container.removeMessage(messageId);\r\n    } else {\r\n      this._container.removeMessageAll();\r\n    }\r\n  }\r\n\r\n  createMessage(message: MessageData, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    const resultMessage: NzMessageDataFilled = {\r\n      ...(message as NzMessageData),\r\n      ...{\r\n        createdAt: new Date(),\r\n        messageId: this._generateMessageId(),\r\n        options\r\n      }\r\n    };\r\n    this._container.createMessage(resultMessage);\r\n\r\n    return resultMessage;\r\n  }\r\n\r\n  config(config: MessageConfig): void {\r\n    warnDeprecation(\r\n      `'config' of 'NzMessageService' and 'NzNotificationService' is deprecated and will be removed in 9.0.0. Please use 'set' of 'NzConfigService' instead.`\r\n    );\r\n\r\n    this._container.setConfig(config);\r\n  }\r\n\r\n  protected _generateMessageId(): string {\r\n    return `${this.name}-${globalCounter++}`;\r\n  }\r\n\r\n  // Manually creating container for overlay to avoid multi-checking error, see: https://github.com/NG-ZORRO/ng-zorro-antd/issues/391\r\n  // NOTE: we never clean up the container component and it's overlay resources, if we should, we need to do it by our own codes.\r\n  private withContainer(): ContainerClass {\r\n    const containerInstance = this.nzSingletonService.getSingletonWithKey(this.name);\r\n\r\n    if (containerInstance) {\r\n      return containerInstance as ContainerClass;\r\n    }\r\n\r\n    const factory = this.cfr.resolveComponentFactory(this.containerClass);\r\n    const componentRef = factory.create(this.injector); // Use root injector\r\n    componentRef.changeDetectorRef.detectChanges(); // Immediately change detection to avoid multi-checking error\r\n    this.appRef.attachView(componentRef.hostView); // Load view into app root\r\n    const overlayPane = this.overlay.create().overlayElement;\r\n    overlayPane.style.zIndex = '1010'; // Patching: assign the same zIndex of ant-message to it's parent overlay panel, to the ant-message's zindex work.\r\n    overlayPane.appendChild((componentRef.hostView as EmbeddedViewRef<{}>).rootNodes[0] as HTMLElement);\r\n\r\n    return componentRef.instance;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\n\r\n/**\r\n * @deprecated This interface has been removed to `ng-zorro-antd/core`. Please migrate to that.\r\n */\r\nexport interface NzMessageConfigLegacy {\r\n  nzAnimate?: boolean;\r\n  nzDuration?: number;\r\n  nzMaxStack?: number;\r\n  nzPauseOnHover?: boolean;\r\n  nzTop?: number | string;\r\n}\r\n\r\nexport const NZ_MESSAGE_DEFAULT_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_DEFAULT_CONFIG');\r\n\r\n/**\r\n * @deprecated 9.0.0 - Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.\r\n */\r\nexport const NZ_MESSAGE_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_CONFIG');\r\n\r\nexport const NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER = {\r\n  provide: NZ_MESSAGE_DEFAULT_CONFIG,\r\n  useValue: {\r\n    nzAnimate: true,\r\n    nzDuration: 3000,\r\n    nzMaxStack: 7,\r\n    nzPauseOnHover: true,\r\n    nzTop: 24\r\n  }\r\n};\r\n","<div class=\"ant-message\" [style.top]=\"top\">\r\n  <nz-message\r\n    *ngFor=\"let message of messages; let i = index\"\r\n    [nzMessage]=\"message\"\r\n    [nzIndex]=\"i\"\r\n  ></nz-message>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnInit, Optional, ViewEncapsulation } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nimport { NzConfigService, toCssPixel, warnDeprecation } from 'ng-zorro-antd/core';\r\n\r\nimport { NZ_MESSAGE_CONFIG, NZ_MESSAGE_DEFAULT_CONFIG, NzMessageConfigLegacy } from './nz-message-config';\r\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-message-container',\r\n  exportAs: 'nzMessageContainer',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-message-container.component.html'\r\n})\r\nexport class NzMessageContainerComponent implements OnInit {\r\n  messages: NzMessageDataFilled[] = [];\r\n  config: Required<NzMessageConfigLegacy>;\r\n  top: string | null;\r\n\r\n  constructor(\r\n    protected cdr: ChangeDetectorRef,\r\n    protected nzConfigService: NzConfigService,\r\n    @Optional() @Inject(NZ_MESSAGE_DEFAULT_CONFIG) defaultConfig: NzMessageConfigLegacy,\r\n    @Optional() @Inject(NZ_MESSAGE_CONFIG) config: NzMessageConfigLegacy\r\n  ) {\r\n    if (!!config) {\r\n      warnDeprecation(\r\n        `Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\r\n      );\r\n    }\r\n    this.setConfig({ ...defaultConfig, ...config });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subscribeConfigChange();\r\n  }\r\n\r\n  setConfig(config?: NzMessageConfigLegacy): void {\r\n    this.config = this.mergeMessageConfig(config);\r\n    this.top = toCssPixel(this.config.nzTop);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  /**\r\n   * Create a new message.\r\n   * @param message Parsed message configuration.\r\n   */\r\n  createMessage(message: NzMessageDataFilled): void {\r\n    if (this.messages.length >= this.config.nzMaxStack) {\r\n      this.messages.splice(0, 1);\r\n    }\r\n    message.options = this._mergeMessageOptions(message.options);\r\n    message.onClose = new Subject<boolean>();\r\n    this.messages.push(message);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Remove a message by `messageId`.\r\n   * @param messageId Id of the message to be removed.\r\n   * @param userAction Whether this is closed by user interaction.\r\n   */\r\n  removeMessage(messageId: string, userAction: boolean = false): void {\r\n    this.messages.some((message, index) => {\r\n      if (message.messageId === messageId) {\r\n        this.messages.splice(index, 1);\r\n        this.cdr.detectChanges();\r\n        message.onClose!.next(userAction);\r\n        message.onClose!.complete();\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove all messages.\r\n   */\r\n  removeMessageAll(): void {\r\n    this.messages = [];\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  protected subscribeConfigChange(): void {\r\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\r\n  }\r\n\r\n  protected mergeMessageConfig(config?: NzMessageConfigLegacy): Required<NzMessageConfigLegacy> {\r\n    return {\r\n      ...this.config,\r\n      ...config,\r\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Merge default options and custom message options\r\n   * @param options\r\n   */\r\n  protected _mergeMessageOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\r\n    const defaultOptions: NzMessageDataOptions = {\r\n      nzDuration: this.config.nzDuration,\r\n      nzAnimate: this.config.nzAnimate,\r\n      nzPauseOnHover: this.config.nzPauseOnHover\r\n    };\r\n    return { ...defaultOptions, ...options };\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\n\r\n@NgModule()\r\nexport class NzMessageServiceModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\r\nimport { NzSingletonService } from 'ng-zorro-antd/core';\r\n\r\nimport { NzMessageBaseService } from './nz-message-base.service';\r\nimport { NzMessageConfigLegacy } from './nz-message-config';\r\nimport { NzMessageContainerComponent } from './nz-message-container.component';\r\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\r\nimport { NzMessageServiceModule } from './nz-message.service.module';\r\n\r\n@Injectable({\r\n  providedIn: NzMessageServiceModule\r\n})\r\nexport class NzMessageService extends NzMessageBaseService<NzMessageContainerComponent, NzMessageData, NzMessageConfigLegacy> {\r\n  constructor(\r\n    nzSingletonService: NzSingletonService,\r\n    overlay: Overlay,\r\n    injector: Injector,\r\n    cfr: ComponentFactoryResolver,\r\n    appRef: ApplicationRef\r\n  ) {\r\n    super(nzSingletonService, overlay, NzMessageContainerComponent, injector, cfr, appRef, 'message');\r\n  }\r\n\r\n  // Shortcut methods\r\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    return this.createMessage({ type: 'success', content }, options);\r\n  }\r\n\r\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    return this.createMessage({ type: 'error', content }, options);\r\n  }\r\n\r\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    return this.createMessage({ type: 'info', content }, options);\r\n  }\r\n\r\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    return this.createMessage({ type: 'warning', content }, options);\r\n  }\r\n\r\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\r\n    return this.createMessage({ type: 'loading', content }, options);\r\n  }\r\n\r\n  create(\r\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\r\n    content: string | TemplateRef<void>,\r\n    options?: NzMessageDataOptions\r\n  ): NzMessageDataFilled {\r\n    return this.createMessage({ type, content }, options);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { moveUpMotion } from 'ng-zorro-antd/core';\r\n\r\nimport { NzMessageContainerComponent } from './nz-message-container.component';\r\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-message',\r\n  exportAs: 'nzMessage',\r\n  preserveWhitespaces: false,\r\n  animations: [moveUpMotion],\r\n  templateUrl: './nz-message.component.html'\r\n})\r\nexport class NzMessageComponent implements OnInit, OnDestroy {\r\n  @Input() nzMessage: NzMessageDataFilled;\r\n  @Input() nzIndex: number;\r\n\r\n  protected _options: Required<NzMessageDataOptions>;\r\n\r\n  private _autoErase: boolean; // Whether to set a timeout to destroy itself.\r\n  private _eraseTimer: number | null = null;\r\n  private _eraseTimingStart: number;\r\n  private _eraseTTL: number; // Time to live.\r\n\r\n  constructor(private _messageContainer: NzMessageContainerComponent, protected cdr: ChangeDetectorRef) {}\r\n\r\n  ngOnInit(): void {\r\n    // `NzMessageContainer` does its job so all properties cannot be undefined.\r\n    this._options = this.nzMessage.options as Required<NzMessageDataOptions>;\r\n\r\n    if (this._options.nzAnimate) {\r\n      this.nzMessage.state = 'enter';\r\n    }\r\n\r\n    this._autoErase = this._options.nzDuration > 0;\r\n\r\n    if (this._autoErase) {\r\n      this._initErase();\r\n      this._startEraseTimeout();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this._autoErase) {\r\n      this._clearEraseTimeout();\r\n    }\r\n  }\r\n\r\n  onEnter(): void {\r\n    if (this._autoErase && this._options.nzPauseOnHover) {\r\n      this._clearEraseTimeout();\r\n      this._updateTTL();\r\n    }\r\n  }\r\n\r\n  onLeave(): void {\r\n    if (this._autoErase && this._options.nzPauseOnHover) {\r\n      this._startEraseTimeout();\r\n    }\r\n  }\r\n\r\n  // Remove self\r\n  protected _destroy(userAction: boolean = false): void {\r\n    if (this._options.nzAnimate) {\r\n      this.nzMessage.state = 'leave';\r\n      this.cdr.detectChanges();\r\n      setTimeout(() => this._messageContainer.removeMessage(this.nzMessage.messageId, userAction), 200);\r\n    } else {\r\n      this._messageContainer.removeMessage(this.nzMessage.messageId, userAction);\r\n    }\r\n  }\r\n\r\n  private _initErase(): void {\r\n    this._eraseTTL = this._options.nzDuration;\r\n    this._eraseTimingStart = Date.now();\r\n  }\r\n\r\n  private _updateTTL(): void {\r\n    if (this._autoErase) {\r\n      this._eraseTTL -= Date.now() - this._eraseTimingStart;\r\n    }\r\n  }\r\n\r\n  private _startEraseTimeout(): void {\r\n    if (this._eraseTTL > 0) {\r\n      this._clearEraseTimeout();\r\n      this._eraseTimer = setTimeout(() => this._destroy(), this._eraseTTL);\r\n      this._eraseTimingStart = Date.now();\r\n    } else {\r\n      this._destroy();\r\n    }\r\n  }\r\n\r\n  private _clearEraseTimeout(): void {\r\n    if (this._eraseTimer !== null) {\r\n      clearTimeout(this._eraseTimer);\r\n      this._eraseTimer = null;\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"ant-message-notice\"\r\n  [@moveUpMotion]=\"nzMessage.state\"\r\n  (mouseenter)=\"onEnter()\"\r\n  (mouseleave)=\"onLeave()\"\r\n>\r\n  <div class=\"ant-message-notice-content\">\r\n    <div class=\"ant-message-custom-content\" [ngClass]=\"'ant-message-' + nzMessage.type\">\r\n      <ng-container [ngSwitch]=\"nzMessage.type\">\r\n        <i *ngSwitchCase=\"'success'\" nz-icon nzType=\"check-circle\"></i>\r\n        <i *ngSwitchCase=\"'info'\" nz-icon nzType=\"info-circle\"></i>\r\n        <i *ngSwitchCase=\"'warning'\" nz-icon nzType=\"exclamation-circle\"></i>\r\n        <i *ngSwitchCase=\"'error'\" nz-icon nzType=\"close-circle\"></i>\r\n        <i *ngSwitchCase=\"'loading'\" nz-icon nzType=\"loading\"></i>\r\n      </ng-container>\r\n      <ng-container *nzStringTemplateOutlet=\"nzMessage.content\">\r\n        <span [innerHTML]=\"nzMessage.content\"></span>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER } from './nz-message-config';\r\nimport { NzMessageContainerComponent } from './nz-message-container.component';\r\nimport { NzMessageComponent } from './nz-message.component';\r\nimport { NzMessageServiceModule } from './nz-message.service.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, OverlayModule, NzIconModule, NzAddOnModule, NzMessageServiceModule],\r\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\r\n  providers: [NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER],\r\n  entryComponents: [NzMessageContainerComponent]\r\n})\r\nexport class NzMessageModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport * from './nz-message-base.service';\r\nexport * from './nz-message.service';\r\nexport * from './nz-message.service.module';\r\nexport * from './nz-message.module';\r\nexport * from './nz-message.component';\r\nexport * from './nz-message.definitions';\r\nexport * from './nz-message-container.component';\r\nexport * from './nz-message-config';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtemplate","i0.ɵɵelementEnd","i0.ɵɵstyleProp","i0.ɵɵadvance","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵlistener"],"mappings":"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"}