{"version":3,"file":"ng-zorro-antd-icon.js","sources":["ng://ng-zorro-antd/icon/nz-icon.service.ts","ng://ng-zorro-antd/icon/nz-icon.directive.ts","ng://ng-zorro-antd/icon/nz-icon.module.ts","ng://ng-zorro-antd/icon/public-api.ts","ng://ng-zorro-antd/icon/ng-zorro-antd-icon.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { HttpBackend } from '@angular/common/http';\r\nimport { Inject, Injectable, InjectionToken, Optional, RendererFactory2 } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\r\nimport {\r\n  BarsOutline,\r\n  CalendarOutline,\r\n  CaretDownFill,\r\n  CaretDownOutline,\r\n  CaretUpFill,\r\n  CaretUpOutline,\r\n  CheckCircleFill,\r\n  CheckCircleOutline,\r\n  CheckOutline,\r\n  ClockCircleOutline,\r\n  CloseCircleFill,\r\n  CloseCircleOutline,\r\n  CloseOutline,\r\n  CopyOutline,\r\n  DoubleLeftOutline,\r\n  DoubleRightOutline,\r\n  DownOutline,\r\n  EditOutline,\r\n  EllipsisOutline,\r\n  ExclamationCircleFill,\r\n  ExclamationCircleOutline,\r\n  EyeOutline,\r\n  FileFill,\r\n  FileOutline,\r\n  FilterFill,\r\n  InfoCircleFill,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  LoadingOutline,\r\n  PaperClipOutline,\r\n  QuestionCircleOutline,\r\n  RightOutline,\r\n  SearchOutline,\r\n  StarFill,\r\n  UploadOutline,\r\n  UpOutline\r\n} from '@ant-design/icons-angular/icons';\r\nimport { IconConfig, NzConfigService, warn, warnDeprecation } from 'ng-zorro-antd/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface NzIconfontOption {\r\n  scriptUrl: string;\r\n}\r\n\r\nexport const NZ_ICONS = new InjectionToken('nz_icons');\r\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\r\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\r\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\r\n  BarsOutline,\r\n  CalendarOutline,\r\n  CaretUpFill,\r\n  CaretUpOutline,\r\n  CaretDownFill,\r\n  CaretDownOutline,\r\n  CheckCircleFill,\r\n  CheckCircleOutline,\r\n  CheckOutline,\r\n  ClockCircleOutline,\r\n  CloseCircleOutline,\r\n  CloseCircleFill,\r\n  CloseOutline,\r\n  CopyOutline,\r\n  DoubleLeftOutline,\r\n  DoubleRightOutline,\r\n  DownOutline,\r\n  EditOutline,\r\n  EllipsisOutline,\r\n  ExclamationCircleFill,\r\n  ExclamationCircleOutline,\r\n  EyeOutline,\r\n  FileFill,\r\n  FileOutline,\r\n  FilterFill,\r\n  InfoCircleFill,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  LoadingOutline,\r\n  PaperClipOutline,\r\n  QuestionCircleOutline,\r\n  RightOutline,\r\n  StarFill,\r\n  SearchOutline,\r\n  StarFill,\r\n  UploadOutline,\r\n  UpOutline\r\n];\r\n\r\n/**\r\n * It should be a global singleton, otherwise registered icons could not be found.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NzIconService extends IconService {\r\n  configUpdated$ = new Subject<void>();\r\n\r\n  private iconfontCache = new Set<string>();\r\n\r\n  normalizeSvgElement(svg: SVGElement): void {\r\n    if (!svg.getAttribute('viewBox')) {\r\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\r\n    }\r\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\r\n      this._renderer.setAttribute(svg, 'width', '1em');\r\n      this._renderer.setAttribute(svg, 'height', '1em');\r\n    }\r\n    if (!svg.getAttribute('fill')) {\r\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\r\n    }\r\n  }\r\n\r\n  fetchFromIconfont(opt: NzIconfontOption): void {\r\n    const { scriptUrl } = opt;\r\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\r\n      const script = this._renderer.createElement('script');\r\n      this._renderer.setAttribute(script, 'src', scriptUrl);\r\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\r\n      this._renderer.appendChild(this._document.body, script);\r\n      this.iconfontCache.add(scriptUrl);\r\n    }\r\n  }\r\n\r\n  createIconfontIcon(type: string): SVGElement {\r\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\r\n  }\r\n\r\n  constructor(\r\n    rendererFactory: RendererFactory2,\r\n    sanitizer: DomSanitizer,\r\n    protected nzConfigService: NzConfigService,\r\n    @Optional() handler: HttpBackend,\r\n    // tslint:disable-next-line:no-any\r\n    @Optional() @Inject(DOCUMENT) _document: any,\r\n    @Optional() @Inject(NZ_ICONS) icons?: IconDefinition[],\r\n    /**\r\n     * @deprecated\r\n     * @inner\r\n     */\r\n    @Optional() @Inject(NZ_ICON_DEFAULT_TWOTONE_COLOR) private legacyDefaultTwotoneColor?: string\r\n  ) {\r\n    super(rendererFactory, handler, _document, sanitizer);\r\n\r\n    this.onConfigChange();\r\n\r\n    this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\r\n\r\n    if (legacyDefaultTwotoneColor) {\r\n      warnDeprecation(`'NZ_ICON_DEFAULT_TWOTONE_COLOR' is deprecated and will be removed in 9.0.0. Please use 'NZ_CONFIG' instead!`);\r\n    }\r\n\r\n    this.configDefaultTwotoneColor();\r\n    this.configDefaultTheme();\r\n  }\r\n\r\n  private onConfigChange(): void {\r\n    this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\r\n      this.configDefaultTwotoneColor();\r\n      this.configDefaultTheme();\r\n      this.configUpdated$.next();\r\n    });\r\n  }\r\n\r\n  private configDefaultTheme(): void {\r\n    const iconConfig = this.getConfig();\r\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\r\n  }\r\n\r\n  private configDefaultTwotoneColor(): void {\r\n    const iconConfig = this.getConfig();\r\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || this.legacyDefaultTwotoneColor;\r\n\r\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\r\n\r\n    if (defaultTwotoneColor) {\r\n      if (defaultTwotoneColor.startsWith('#')) {\r\n        primaryColor = defaultTwotoneColor;\r\n      } else {\r\n        warn('Twotone color must be a hex color!');\r\n      }\r\n    }\r\n\r\n    this.twoToneColor = { primaryColor };\r\n  }\r\n\r\n  private getConfig(): IconConfig {\r\n    return this.nzConfigService.getConfigForComponent('icon') || {};\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { AfterContentChecked, Directive, ElementRef, Input, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\r\nimport { InputBoolean, NzUpdateHostClassService } from 'ng-zorro-antd/core';\r\n\r\nimport { NzIconService } from './nz-icon.service';\r\n\r\n/**\r\n * This directive extends IconDirective to provide:\r\n *\r\n * - IconFont support\r\n * - spinning\r\n * - old API compatibility\r\n *\r\n * @break-changes\r\n *\r\n * - old API compatibility, icon class names would not be supported.\r\n * - properties that not started with `nz`.\r\n */\r\n@Directive({\r\n  selector: '[nz-icon]',\r\n  exportAs: 'nzIcon',\r\n  providers: [NzUpdateHostClassService],\r\n  host: {\r\n    '[class.anticon]': 'true'\r\n  }\r\n})\r\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, AfterContentChecked {\r\n  @Input()\r\n  @InputBoolean()\r\n  set nzSpin(value: boolean) {\r\n    this.spin = value;\r\n  }\r\n\r\n  @Input() nzRotate: number = 0;\r\n\r\n  @Input()\r\n  set nzType(value: string) {\r\n    this.type = value;\r\n  }\r\n\r\n  @Input()\r\n  set nzTheme(value: ThemeType) {\r\n    this.theme = value;\r\n  }\r\n\r\n  @Input()\r\n  set nzTwotoneColor(value: string) {\r\n    this.twoToneColor = value;\r\n  }\r\n\r\n  @Input()\r\n  set nzIconfont(value: string) {\r\n    this.iconfont = value;\r\n  }\r\n\r\n  private readonly el: HTMLElement;\r\n\r\n  type: string;\r\n  theme: ThemeType;\r\n  // @ts-ignore\r\n  twotoneColor: string;\r\n\r\n  private iconfont: string;\r\n  private spin: boolean = false;\r\n\r\n  constructor(\r\n    elementRef: ElementRef,\r\n    public iconService: NzIconService,\r\n    public renderer: Renderer2,\r\n    private nzUpdateHostClassService: NzUpdateHostClassService\r\n  ) {\r\n    super(iconService, elementRef, renderer);\r\n\r\n    this.el = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzType, nzTwotoneColor, nzSpin, nzTheme, nzRotate } = changes;\r\n\r\n    if (nzType || nzTwotoneColor || nzSpin || nzTheme) {\r\n      this.changeIcon2();\r\n    } else if (nzRotate) {\r\n      this.handleRotate(this.el.firstChild as SVGElement);\r\n    } else {\r\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\r\n  }\r\n\r\n  /**\r\n   * If custom content is provided, try to normalize SVG elements.\r\n   */\r\n  ngAfterContentChecked(): void {\r\n    if (!this.type) {\r\n      const children = this.el.children;\r\n      let length = children.length;\r\n      if (!this.type && children.length) {\r\n        while (length--) {\r\n          const child = children[length];\r\n          if (child.tagName.toLowerCase() === 'svg') {\r\n            this.iconService.normalizeSvgElement(child as SVGElement);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replacement of `changeIcon` for more modifications.\r\n   */\r\n  private changeIcon2(): void {\r\n    this.setClassName();\r\n    this._changeIcon().then(svgOrRemove => {\r\n      if (svgOrRemove) {\r\n        this.setSVGData(svgOrRemove);\r\n        this.handleSpin(svgOrRemove);\r\n        this.handleRotate(svgOrRemove);\r\n      }\r\n    });\r\n  }\r\n\r\n  private handleSpin(svg: SVGElement): void {\r\n    if (this.spin || this.type === 'loading') {\r\n      this.renderer.addClass(svg, 'anticon-spin');\r\n    } else {\r\n      this.renderer.removeClass(svg, 'anticon-spin');\r\n    }\r\n  }\r\n\r\n  private handleRotate(svg: SVGElement): void {\r\n    if (this.nzRotate) {\r\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\r\n    } else {\r\n      this.renderer.removeAttribute(svg, 'style');\r\n    }\r\n  }\r\n\r\n  private setClassName(): void {\r\n    this.nzUpdateHostClassService.updateHostClass(this.el, {\r\n      [`anticon-${this.type}`]: true\r\n    });\r\n  }\r\n\r\n  private setSVGData(svg: SVGElement): void {\r\n    this.renderer.setAttribute(svg, 'data-icon', this.type);\r\n    this.renderer.setAttribute(svg, 'aria-hidden', 'true');\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzIconDirective } from './nz-icon.directive';\r\n\r\n@NgModule({\r\n  exports: [NzIconDirective],\r\n  declarations: [NzIconDirective],\r\n  imports: [PlatformModule]\r\n})\r\nexport class NzIconModule {}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nexport * from './nz-icon.module';\r\nexport * from './nz-icon.directive';\r\nexport * from './nz-icon.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}