/**
 * @fileoverview added by tsickle
 * Generated from: languages/date-picker/pt_PT.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import CalendarLocale from '../calendar/pt_PT';
import TimePickerLocale from '../time-picker/pt_PT';
// Merge into a locale object
/** @type {?} */
var locale = {
    lang: tslib_1.__assign({}, CalendarLocale, { placeholder: 'Data', rangePlaceholder: ['Data inicial', 'Data final'], today: 'Hoje', now: 'Agora', backToToday: 'Hoje', ok: 'Ok', clear: 'Limpar', month: 'Mês', year: 'Ano', timeSelect: 'Hora', dateSelect: 'Selecionar data', monthSelect: 'Selecionar mês', yearSelect: 'Selecionar ano', decadeSelect: 'Selecionar década', yearFormat: 'YYYY', dateFormat: 'D/M/YYYY', dayFormat: 'D', dateTimeFormat: 'D/M/YYYY HH:mm:ss', monthFormat: 'MMMM', monthBeforeYear: false, previousMonth: 'Mês anterior (PageUp)', nextMonth: 'Mês seguinte (PageDown)', previousYear: 'Ano anterior (Control + left)', nextYear: 'Ano seguinte (Control + right)', previousDecade: 'Última década', nextDecade: 'Próxima década', previousCentury: 'Último século', nextCentury: 'Próximo século' }),
    timePickerLocale: tslib_1.__assign({}, TimePickerLocale, { placeholder: 'Hora' })
};
// All settings at:
// https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json
export default locale;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHRfUFQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkL2kxOG4vIiwic291cmNlcyI6WyJsYW5ndWFnZXMvZGF0ZS1waWNrZXIvcHRfUFQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sY0FBYyxNQUFNLG1CQUFtQixDQUFDO0FBQy9DLE9BQU8sZ0JBQWdCLE1BQU0sc0JBQXNCLENBQUM7OztJQUc5QyxNQUFNLEdBQUc7SUFDYixJQUFJLHVCQUNDLGNBQWMsSUFDakIsV0FBVyxFQUFFLE1BQU0sRUFDbkIsZ0JBQWdCLEVBQUUsQ0FBQyxjQUFjLEVBQUUsWUFBWSxDQUFDLEVBQ2hELEtBQUssRUFBRSxNQUFNLEVBQ2IsR0FBRyxFQUFFLE9BQU8sRUFDWixXQUFXLEVBQUUsTUFBTSxFQUNuQixFQUFFLEVBQUUsSUFBSSxFQUNSLEtBQUssRUFBRSxRQUFRLEVBQ2YsS0FBSyxFQUFFLEtBQUssRUFDWixJQUFJLEVBQUUsS0FBSyxFQUNYLFVBQVUsRUFBRSxNQUFNLEVBQ2xCLFVBQVUsRUFBRSxpQkFBaUIsRUFDN0IsV0FBVyxFQUFFLGdCQUFnQixFQUM3QixVQUFVLEVBQUUsZ0JBQWdCLEVBQzVCLFlBQVksRUFBRSxtQkFBbUIsRUFDakMsVUFBVSxFQUFFLE1BQU0sRUFDbEIsVUFBVSxFQUFFLFVBQVUsRUFDdEIsU0FBUyxFQUFFLEdBQUcsRUFDZCxjQUFjLEVBQUUsbUJBQW1CLEVBQ25DLFdBQVcsRUFBRSxNQUFNLEVBQ25CLGVBQWUsRUFBRSxLQUFLLEVBQ3RCLGFBQWEsRUFBRSx1QkFBdUIsRUFDdEMsU0FBUyxFQUFFLHlCQUF5QixFQUNwQyxZQUFZLEVBQUUsK0JBQStCLEVBQzdDLFFBQVEsRUFBRSxnQ0FBZ0MsRUFDMUMsY0FBYyxFQUFFLGVBQWUsRUFDL0IsVUFBVSxFQUFFLGdCQUFnQixFQUM1QixlQUFlLEVBQUUsZUFBZSxFQUNoQyxXQUFXLEVBQUUsZ0JBQWdCLEdBQzlCO0lBQ0QsZ0JBQWdCLHVCQUNYLGdCQUFnQixJQUNuQixXQUFXLEVBQUUsTUFBTSxHQUNwQjtDQUNGOzs7QUFLRCxlQUFlLE1BQU0sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXHJcbiAqL1xyXG5cclxuaW1wb3J0IENhbGVuZGFyTG9jYWxlIGZyb20gJy4uL2NhbGVuZGFyL3B0X1BUJztcclxuaW1wb3J0IFRpbWVQaWNrZXJMb2NhbGUgZnJvbSAnLi4vdGltZS1waWNrZXIvcHRfUFQnO1xyXG5cclxuLy8gTWVyZ2UgaW50byBhIGxvY2FsZSBvYmplY3RcclxuY29uc3QgbG9jYWxlID0ge1xyXG4gIGxhbmc6IHtcclxuICAgIC4uLkNhbGVuZGFyTG9jYWxlLFxyXG4gICAgcGxhY2Vob2xkZXI6ICdEYXRhJyxcclxuICAgIHJhbmdlUGxhY2Vob2xkZXI6IFsnRGF0YSBpbmljaWFsJywgJ0RhdGEgZmluYWwnXSxcclxuICAgIHRvZGF5OiAnSG9qZScsXHJcbiAgICBub3c6ICdBZ29yYScsXHJcbiAgICBiYWNrVG9Ub2RheTogJ0hvamUnLFxyXG4gICAgb2s6ICdPaycsXHJcbiAgICBjbGVhcjogJ0xpbXBhcicsXHJcbiAgICBtb250aDogJ03DqnMnLFxyXG4gICAgeWVhcjogJ0FubycsXHJcbiAgICB0aW1lU2VsZWN0OiAnSG9yYScsXHJcbiAgICBkYXRlU2VsZWN0OiAnU2VsZWNpb25hciBkYXRhJyxcclxuICAgIG1vbnRoU2VsZWN0OiAnU2VsZWNpb25hciBtw6pzJyxcclxuICAgIHllYXJTZWxlY3Q6ICdTZWxlY2lvbmFyIGFubycsXHJcbiAgICBkZWNhZGVTZWxlY3Q6ICdTZWxlY2lvbmFyIGTDqWNhZGEnLFxyXG4gICAgeWVhckZvcm1hdDogJ1lZWVknLFxyXG4gICAgZGF0ZUZvcm1hdDogJ0QvTS9ZWVlZJyxcclxuICAgIGRheUZvcm1hdDogJ0QnLFxyXG4gICAgZGF0ZVRpbWVGb3JtYXQ6ICdEL00vWVlZWSBISDptbTpzcycsXHJcbiAgICBtb250aEZvcm1hdDogJ01NTU0nLFxyXG4gICAgbW9udGhCZWZvcmVZZWFyOiBmYWxzZSxcclxuICAgIHByZXZpb3VzTW9udGg6ICdNw6pzIGFudGVyaW9yIChQYWdlVXApJyxcclxuICAgIG5leHRNb250aDogJ03DqnMgc2VndWludGUgKFBhZ2VEb3duKScsXHJcbiAgICBwcmV2aW91c1llYXI6ICdBbm8gYW50ZXJpb3IgKENvbnRyb2wgKyBsZWZ0KScsXHJcbiAgICBuZXh0WWVhcjogJ0FubyBzZWd1aW50ZSAoQ29udHJvbCArIHJpZ2h0KScsXHJcbiAgICBwcmV2aW91c0RlY2FkZTogJ8OabHRpbWEgZMOpY2FkYScsXHJcbiAgICBuZXh0RGVjYWRlOiAnUHLDs3hpbWEgZMOpY2FkYScsXHJcbiAgICBwcmV2aW91c0NlbnR1cnk6ICfDmmx0aW1vIHPDqWN1bG8nLFxyXG4gICAgbmV4dENlbnR1cnk6ICdQcsOzeGltbyBzw6ljdWxvJ1xyXG4gIH0sXHJcbiAgdGltZVBpY2tlckxvY2FsZToge1xyXG4gICAgLi4uVGltZVBpY2tlckxvY2FsZSxcclxuICAgIHBsYWNlaG9sZGVyOiAnSG9yYSdcclxuICB9XHJcbn07XHJcblxyXG4vLyBBbGwgc2V0dGluZ3MgYXQ6XHJcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9hbnQtZGVzaWduL2FudC1kZXNpZ24vYmxvYi9tYXN0ZXIvY29tcG9uZW50cy9kYXRlLXBpY2tlci9sb2NhbGUvZXhhbXBsZS5qc29uXHJcblxyXG5leHBvcnQgZGVmYXVsdCBsb2NhbGU7XHJcbiJdfQ==