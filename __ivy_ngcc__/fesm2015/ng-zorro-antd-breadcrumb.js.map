{"version":3,"file":"ng-zorro-antd-breadcrumb.js","sources":["ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb.component.ts","ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb-item.component.ts","ng:/ng-zorro-antd/breadcrumb/nz-breadcrumb.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Injector,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Params, PRIMARY_OUTLET, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, startWith, takeUntil } from 'rxjs/operators';\r\n\r\nimport { InputBoolean, PREFIX } from 'ng-zorro-antd/core';\r\n\r\nexport interface BreadcrumbOption {\r\n  label: string;\r\n  params: Params;\r\n  url: string;\r\n}\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-breadcrumb',\r\n  exportAs: 'nzBreadcrumb',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-breadcrumb.component.html',\r\n  styles: [\r\n    `\r\n      nz-breadcrumb {\r\n        display: block;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzBreadCrumbComponent implements OnInit, OnDestroy {\r\n  @Input() @InputBoolean() nzAutoGenerate = false;\r\n  @Input() nzSeparator: string | TemplateRef<void> = '/';\r\n  @Input() nzRouteLabel: string = 'breadcrumb';\r\n\r\n  breadcrumbs: BreadcrumbOption[] | undefined = [];\r\n\r\n  private destroy$ = new Subject<void>();\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private ngZone: NgZone,\r\n    private cdr: ChangeDetectorRef,\r\n    elementRef: ElementRef,\r\n    renderer: Renderer2\r\n  ) {\r\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.nzAutoGenerate) {\r\n      this.registerRouterChange();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  navigate(url: string, e: MouseEvent): void {\r\n    e.preventDefault();\r\n\r\n    this.ngZone\r\n      .run(() =>\r\n        this.injector\r\n          .get(Router)\r\n          .navigateByUrl(url)\r\n          .then()\r\n      )\r\n      .then();\r\n  }\r\n\r\n  private registerRouterChange(): void {\r\n    try {\r\n      const router = this.injector.get(Router);\r\n      const activatedRoute = this.injector.get(ActivatedRoute);\r\n      router.events\r\n        .pipe(\r\n          filter(e => e instanceof NavigationEnd),\r\n          takeUntil(this.destroy$),\r\n          startWith(true) // Trigger initial render.\r\n        )\r\n        .subscribe(() => {\r\n          this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\r\n          this.cdr.markForCheck();\r\n        });\r\n    } catch (e) {\r\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\r\n    }\r\n  }\r\n\r\n  private getBreadcrumbs(\r\n    route: ActivatedRoute,\r\n    url: string = '',\r\n    breadcrumbs: BreadcrumbOption[] = []\r\n  ): BreadcrumbOption[] | undefined {\r\n    const children: ActivatedRoute[] = route.children;\r\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\r\n    if (children.length === 0) {\r\n      return breadcrumbs;\r\n    }\r\n    for (const child of children) {\r\n      if (child.outlet === PRIMARY_OUTLET) {\r\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\r\n        // Parse this layer and generate a breadcrumb item.\r\n        const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\r\n        const nextUrl = url + `/${routeURL}`;\r\n        const breadcrumbLabel = child.snapshot.data[this.nzRouteLabel];\r\n        // If have data, go to generate a breadcrumb for it.\r\n        if (routeURL && breadcrumbLabel) {\r\n          const breadcrumb: BreadcrumbOption = {\r\n            label: breadcrumbLabel,\r\n            params: child.snapshot.params,\r\n            url: nextUrl\r\n          };\r\n          breadcrumbs.push(breadcrumb);\r\n        }\r\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\r\n\r\nimport { NzDropdownMenuComponent } from 'ng-zorro-antd/dropdown';\r\n\r\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  selector: 'nz-breadcrumb-item',\r\n  exportAs: 'nzBreadcrumbItem',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-breadcrumb-item.component.html',\r\n  styles: [\r\n    `\r\n      nz-breadcrumb-item:last-child {\r\n        color: rgba(0, 0, 0, 0.65);\r\n      }\r\n\r\n      nz-breadcrumb-item:last-child .ant-breadcrumb-separator {\r\n        display: none;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzBreadCrumbItemComponent {\r\n  /**\r\n   * Dropdown content of a breadcrumb item.\r\n   */\r\n  @Input() nzOverlay?: NzDropdownMenuComponent;\r\n\r\n  constructor(public nzBreadCrumbComponent: NzBreadCrumbComponent) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule, NzOverlayModule } from 'ng-zorro-antd/core';\r\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzBreadCrumbItemComponent } from './nz-breadcrumb-item.component';\r\nimport { NzBreadCrumbComponent } from './nz-breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, NzAddOnModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\r\n  declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent],\r\n  exports: [NzBreadCrumbComponent, NzBreadCrumbItemComponent]\r\n})\r\nexport class NzBreadCrumbModule {}\r\n"]}