{"version":3,"file":"ng-zorro-antd-badge.js","sources":["ng:/ng-zorro-antd/badge/nz-badge.component.ts","ng:/ng-zorro-antd/badge/nz-badge.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ContentObserver } from '@angular/cdk/observers';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { isEmpty, zoomBadgeMotion, InputBoolean, NzConfigService, WithConfig } from 'ng-zorro-antd/core';\r\nimport { Subject } from 'rxjs';\r\nimport { startWith, take, takeUntil } from 'rxjs/operators';\r\n\r\nexport type NzBadgeStatusType = 'success' | 'processing' | 'default' | 'error' | 'warning';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'backTop';\r\n\r\n@Component({\r\n  selector: 'nz-badge',\r\n  exportAs: 'nzBadge',\r\n  preserveWhitespaces: false,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [zoomBadgeMotion],\r\n  templateUrl: './nz-badge.component.html',\r\n  host: {\r\n    '[class.ant-badge-status]': 'nzStatus'\r\n  }\r\n})\r\nexport class NzBadgeComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n  private destroy$ = new Subject();\r\n  notWrapper = true;\r\n  viewInit = false;\r\n  maxNumberArray: string[] = [];\r\n  countArray: number[] = [];\r\n  countSingleArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n  colorArray = [\r\n    'pink',\r\n    'red',\r\n    'yellow',\r\n    'orange',\r\n    'cyan',\r\n    'green',\r\n    'blue',\r\n    'purple',\r\n    'geekblue',\r\n    'magenta',\r\n    'volcano',\r\n    'gold',\r\n    'lime'\r\n  ];\r\n  presetColor: string | null = null;\r\n  count: number;\r\n  @ViewChild('contentElement', { static: false }) contentElement: ElementRef;\r\n  @Input() @InputBoolean() nzShowZero: boolean = false;\r\n  @Input() @InputBoolean() nzShowDot = true;\r\n  @Input() @InputBoolean() nzDot = false;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 99) nzOverflowCount: number;\r\n  @Input() nzText: string;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) nzColor: string;\r\n  @Input() nzTitle: string;\r\n  @Input() nzStyle: { [key: string]: string };\r\n  @Input() nzStatus: NzBadgeStatusType;\r\n  @Input() nzCount: number | TemplateRef<void>;\r\n  @Input() nzOffset: [number, number];\r\n\r\n  checkContent(): void {\r\n    this.notWrapper = isEmpty(this.contentElement.nativeElement);\r\n    if (this.notWrapper) {\r\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-badge-not-a-wrapper');\r\n    } else {\r\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-badge-not-a-wrapper');\r\n    }\r\n  }\r\n\r\n  get showSup(): boolean {\r\n    return (this.nzShowDot && this.nzDot) || this.count > 0 || (this.count === 0 && this.nzShowZero);\r\n  }\r\n\r\n  generateMaxNumberArray(): void {\r\n    this.maxNumberArray = this.nzOverflowCount.toString().split('');\r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private renderer: Renderer2,\r\n    private elementRef: ElementRef,\r\n    private contentObserver: ContentObserver,\r\n    private cdr: ChangeDetectorRef,\r\n    private ngZone: NgZone\r\n  ) {\r\n    renderer.addClass(elementRef.nativeElement, 'ant-badge');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateMaxNumberArray();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\r\n      this.viewInit = true;\r\n      this.cdr.markForCheck();\r\n    });\r\n\r\n    this.contentObserver\r\n      .observe(this.contentElement)\r\n      .pipe(\r\n        startWith(true),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => {\r\n        this.checkContent();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const { nzOverflowCount, nzCount, nzColor } = changes;\r\n    if (nzCount && !(nzCount.currentValue instanceof TemplateRef)) {\r\n      this.count = Math.max(0, nzCount.currentValue);\r\n      this.countArray = this.count\r\n        .toString()\r\n        .split('')\r\n        .map(item => +item);\r\n    }\r\n    if (nzOverflowCount) {\r\n      this.generateMaxNumberArray();\r\n    }\r\n    if (nzColor) {\r\n      this.presetColor = this.colorArray.indexOf(this.nzColor) !== -1 ? this.nzColor : null;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\r\n\r\nimport { NzBadgeComponent } from './nz-badge.component';\r\n\r\n@NgModule({\r\n  declarations: [NzBadgeComponent],\r\n  exports: [NzBadgeComponent],\r\n  imports: [CommonModule, ObserversModule, NzAddOnModule]\r\n})\r\nexport class NzBadgeModule {}\r\n"]}