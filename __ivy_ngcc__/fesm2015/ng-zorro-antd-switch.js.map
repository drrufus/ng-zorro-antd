{"version":3,"file":"ng-zorro-antd-switch.js","sources":["ng:/ng-zorro-antd/switch/nz-switch.component.ts","ng:/ng-zorro-antd/switch/nz-switch.module.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\n/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE } from '@angular/cdk/keycodes';\r\nimport {\r\n  forwardRef,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\n\r\nimport { InputBoolean, NzConfigService, NzSizeDSType, WithConfig } from 'ng-zorro-antd/core';\r\n\r\nconst NZ_CONFIG_COMPONENT_NAME = 'switch';\r\n\r\n@Component({\r\n  selector: 'nz-switch',\r\n  exportAs: 'nzSwitch',\r\n  preserveWhitespaces: false,\r\n  templateUrl: './nz-switch.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => NzSwitchComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  host: {\r\n    '(click)': 'hostClick($event)'\r\n  },\r\n  styles: [\r\n    `\r\n      nz-switch {\r\n        display: inline-block;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class NzSwitchComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\r\n  checked = false;\r\n  onChange: (value: boolean) => void = () => null;\r\n  onTouched: () => void = () => null;\r\n  @ViewChild('switchElement', { static: true }) private switchElement: ElementRef;\r\n  @Input() @InputBoolean() nzLoading = false;\r\n  @Input() @InputBoolean() nzDisabled = false;\r\n  @Input() @InputBoolean() nzControl = false;\r\n  @Input() nzCheckedChildren: string | TemplateRef<void>;\r\n  @Input() nzUnCheckedChildren: string | TemplateRef<void>;\r\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzSizeDSType;\r\n  @Input() nzLabel: string = '';\r\n\r\n  hostClick(e: MouseEvent): void {\r\n    e.preventDefault();\r\n    if (!this.nzDisabled && !this.nzLoading && !this.nzControl) {\r\n      this.updateValue(!this.checked);\r\n    }\r\n  }\r\n\r\n  updateValue(value: boolean): void {\r\n    if (this.checked !== value) {\r\n      this.checked = value;\r\n      this.onChange(this.checked);\r\n    }\r\n  }\r\n\r\n  onKeyDown(e: KeyboardEvent): void {\r\n    if (!this.nzControl && !this.nzDisabled && !this.nzLoading) {\r\n      if (e.keyCode === LEFT_ARROW) {\r\n        this.updateValue(false);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === RIGHT_ARROW) {\r\n        this.updateValue(true);\r\n        e.preventDefault();\r\n      } else if (e.keyCode === SPACE || e.keyCode === ENTER) {\r\n        this.updateValue(!this.checked);\r\n        e.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  focus(): void {\r\n    this.focusMonitor.focusVia(this.switchElement.nativeElement, 'keyboard');\r\n  }\r\n\r\n  blur(): void {\r\n    this.switchElement.nativeElement.blur();\r\n  }\r\n\r\n  constructor(\r\n    public nzConfigService: NzConfigService,\r\n    private cdr: ChangeDetectorRef,\r\n    private focusMonitor: FocusMonitor\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.focusMonitor.monitor(this.switchElement.nativeElement, true).subscribe(focusOrigin => {\r\n      if (!focusOrigin) {\r\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\r\n        // Angular does not expect events to be raised during change detection, so any state change\r\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\r\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\r\n        // telling the form control it has been touched until the next tick.\r\n        Promise.resolve().then(() => this.onTouched());\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.focusMonitor.stopMonitoring(this.switchElement.nativeElement);\r\n  }\r\n\r\n  writeValue(value: boolean): void {\r\n    this.checked = value;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: (_: boolean) => void): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: () => void): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.nzDisabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Alibaba.com All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\r\n */\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NzAddOnModule, NzWaveModule } from 'ng-zorro-antd/core';\r\nimport { NzIconModule } from 'ng-zorro-antd/icon';\r\n\r\nimport { NzSwitchComponent } from './nz-switch.component';\r\n\r\n@NgModule({\r\n  exports: [NzSwitchComponent],\r\n  declarations: [NzSwitchComponent],\r\n  imports: [CommonModule, NzWaveModule, NzIconModule, NzAddOnModule]\r\n})\r\nexport class NzSwitchModule {}\r\n"]}